// Unreal Tournament 4 (Pre Alpha) SDK

#ifdef _MSC_VER
	#pragma pack(push, 0x8)
#endif

#include "../SDK.hpp"

namespace Classes
{
//---------------------------------------------------------------------------
//Functions
//---------------------------------------------------------------------------

// Function UnrealTournament.ToolTipWidget.Show
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UToolTipWidget::Show()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.ToolTipWidget.Show");

	UToolTipWidget_Show_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.ToolTipWidget.SetAdditionalContent
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                 Widget                         (Parm, ZeroConstructor, IsPlainOldData)

void UToolTipWidget::SetAdditionalContent(class UWidget* Widget)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.ToolTipWidget.SetAdditionalContent");

	UToolTipWidget_SetAdditionalContent_Params params;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.ToolTipWidget.Hide
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UToolTipWidget::Hide()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.ToolTipWidget.Hide");

	UToolTipWidget_Hide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTTeamInterface.SetTeamForSideSwap
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// unsigned char                  NewTeamNum                     (Parm, ZeroConstructor, IsPlainOldData)

void UUTTeamInterface::SetTeamForSideSwap(unsigned char NewTeamNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTTeamInterface.SetTeamForSideSwap");

	UUTTeamInterface_SetTeamForSideSwap_Params params;
	params.NewTeamNum = NewTeamNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTTeamInterface.ScriptGetTeamNum
// (Event, Public, BlueprintEvent)
// Parameters:
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

unsigned char UUTTeamInterface::ScriptGetTeamNum()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTTeamInterface.ScriptGetTeamNum");

	UUTTeamInterface_ScriptGetTeamNum_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTBot.WhatToDoNext
// (Native, Public)

void AUTBot::WhatToDoNext()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBot.WhatToDoNext");

	AUTBot_WhatToDoNext_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBot.UpdateEnemyInfo
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class APawn*                   NewEnemy                       (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EAIEnemyUpdateType> UpdateType                     (Parm, ZeroConstructor, IsPlainOldData)

void AUTBot::UpdateEnemyInfo(class APawn* NewEnemy, TEnumAsByte<EAIEnemyUpdateType> UpdateType)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBot.UpdateEnemyInfo");

	AUTBot_UpdateEnemyInfo_Params params;
	params.NewEnemy = NewEnemy;
	params.UpdateType = UpdateType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBot.SetTarget
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  NewTarget                      (Parm, ZeroConstructor, IsPlainOldData)

void AUTBot::SetTarget(class AActor* NewTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBot.SetTarget");

	AUTBot_SetTarget_Params params;
	params.NewTarget = NewTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBot.SetEnemy
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class APawn*                   NewEnemy                       (Parm, ZeroConstructor, IsPlainOldData)

void AUTBot::SetEnemy(class APawn* NewEnemy)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBot.SetEnemy");

	AUTBot_SetEnemy_Params params;
	params.NewEnemy = NewEnemy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBot.ReceiveProjWarning
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AUTProjectile*           Incoming                       (Parm, ZeroConstructor, IsPlainOldData)

void AUTBot::ReceiveProjWarning(class AUTProjectile* Incoming)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBot.ReceiveProjWarning");

	AUTBot_ReceiveProjWarning_Params params;
	params.Incoming = Incoming;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBot.ReceiveInstantWarning
// (BlueprintAuthorityOnly, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class AUTCharacter*            Shooter                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 FireDir                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void AUTBot::ReceiveInstantWarning(class AUTCharacter* Shooter, const struct FVector& FireDir)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBot.ReceiveInstantWarning");

	AUTBot_ReceiveInstantWarning_Params params;
	params.Shooter = Shooter;
	params.FireDir = FireDir;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBot.ProcessIncomingWarning
// (Native, Protected)

void AUTBot::ProcessIncomingWarning()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBot.ProcessIncomingWarning");

	AUTBot_ProcessIncomingWarning_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBot.PostMovementUpdate
// (Native, Public, HasDefaults)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 OldLocation                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 OldVelocity                    (Parm, ZeroConstructor, IsPlainOldData)

void AUTBot::PostMovementUpdate(float DeltaTime, const struct FVector& OldLocation, const struct FVector& OldVelocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBot.PostMovementUpdate");

	AUTBot_PostMovementUpdate_Params params;
	params.DeltaTime = DeltaTime;
	params.OldLocation = OldLocation;
	params.OldVelocity = OldVelocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBot.PickNewEnemy
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AUTBot::PickNewEnemy()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBot.PickNewEnemy");

	AUTBot_PickNewEnemy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBot.NotifyBump
// (Native, Public, HasOutParms, HasDefaults)
// Parameters:
// class AActor*                  SelfActor                      (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 NormalImpulse                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AUTBot::NotifyBump(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBot.NotifyBump");

	AUTBot_NotifyBump_Params params;
	params.SelfActor = SelfActor;
	params.OtherActor = OtherActor;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBot.CheckWeaponFiringTimed
// (Final, Native, Protected)

void AUTBot::CheckWeaponFiringTimed()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBot.CheckWeaponFiringTimed");

	AUTBot_CheckWeaponFiringTimed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBot.ApplyCrouch
// (Native, Public)

void AUTBot::ApplyCrouch()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBot.ApplyCrouch");

	AUTBot_ApplyCrouch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBot.AddFearSpot
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AUTAvoidMarker*          NewSpot                        (Parm, ZeroConstructor, IsPlainOldData)

void AUTBot::AddFearSpot(class AUTAvoidMarker* NewSpot)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBot.AddFearSpot");

	AUTBot_AddFearSpot_Params params;
	params.NewSpot = NewSpot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTDefensePoint.GetPriorityFor
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AUTBot*                  B                              (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AUTDefensePoint::GetPriorityFor(class AUTBot* B)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTDefensePoint.GetPriorityFor");

	AUTDefensePoint_GetPriorityFor_Params params;
	params.B = B;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTAIAction_RangedAttack.FirstShotTimer
// (Native, Public)

void UUTAIAction_RangedAttack::FirstShotTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTAIAction_RangedAttack.FirstShotTimer");

	UUTAIAction_RangedAttack_FirstShotTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTAIAction_RangedAttack.EndTimer
// (Native, Public)

void UUTAIAction_RangedAttack::EndTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTAIAction_RangedAttack.EndTimer");

	UUTAIAction_RangedAttack_EndTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTAIAction_TacticalMove.StartFinalMove
// (Native, Public)

void UUTAIAction_TacticalMove::StartFinalMove()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTAIAction_TacticalMove.StartFinalMove");

	UUTAIAction_TacticalMove_StartFinalMove_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTAIAction_TacticalMove.FinalWaitFinished
// (Native, Public)

void UUTAIAction_TacticalMove::FinalWaitFinished()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTAIAction_TacticalMove.FinalWaitFinished");

	UUTAIAction_TacticalMove_FinalWaitFinished_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTAnalyticsBlueprintLibrary.StartSessionWithAttributes
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<struct FUTAnalyticsEventAttr> Attributes                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUTAnalyticsBlueprintLibrary::STATIC_StartSessionWithAttributes(TArray<struct FUTAnalyticsEventAttr> Attributes)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTAnalyticsBlueprintLibrary.StartSessionWithAttributes");

	UUTAnalyticsBlueprintLibrary_StartSessionWithAttributes_Params params;
	params.Attributes = Attributes;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTAnalyticsBlueprintLibrary.StartSession
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUTAnalyticsBlueprintLibrary::STATIC_StartSession()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTAnalyticsBlueprintLibrary.StartSession");

	UUTAnalyticsBlueprintLibrary_StartSession_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTAnalyticsBlueprintLibrary.SetUserId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString                 UserId                         (Parm, ZeroConstructor)

void UUTAnalyticsBlueprintLibrary::STATIC_SetUserId(const struct FString& UserId)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTAnalyticsBlueprintLibrary.SetUserId");

	UUTAnalyticsBlueprintLibrary_SetUserId_Params params;
	params.UserId = UserId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTAnalyticsBlueprintLibrary.SetSessionId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString                 SessionId                      (Parm, ZeroConstructor)

void UUTAnalyticsBlueprintLibrary::STATIC_SetSessionId(const struct FString& SessionId)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTAnalyticsBlueprintLibrary.SetSessionId");

	UUTAnalyticsBlueprintLibrary_SetSessionId_Params params;
	params.SessionId = SessionId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTAnalyticsBlueprintLibrary.SetLocation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString                 Location                       (Parm, ZeroConstructor)

void UUTAnalyticsBlueprintLibrary::STATIC_SetLocation(const struct FString& Location)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTAnalyticsBlueprintLibrary.SetLocation");

	UUTAnalyticsBlueprintLibrary_SetLocation_Params params;
	params.Location = Location;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTAnalyticsBlueprintLibrary.SetGender
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString                 Gender                         (Parm, ZeroConstructor)

void UUTAnalyticsBlueprintLibrary::STATIC_SetGender(const struct FString& Gender)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTAnalyticsBlueprintLibrary.SetGender");

	UUTAnalyticsBlueprintLibrary_SetGender_Params params;
	params.Gender = Gender;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTAnalyticsBlueprintLibrary.SetBuildInfo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString                 BuildInfo                      (Parm, ZeroConstructor)

void UUTAnalyticsBlueprintLibrary::STATIC_SetBuildInfo(const struct FString& BuildInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTAnalyticsBlueprintLibrary.SetBuildInfo");

	UUTAnalyticsBlueprintLibrary_SetBuildInfo_Params params;
	params.BuildInfo = BuildInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTAnalyticsBlueprintLibrary.SetAge
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int                            Age                            (Parm, ZeroConstructor, IsPlainOldData)

void UUTAnalyticsBlueprintLibrary::STATIC_SetAge(int Age)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTAnalyticsBlueprintLibrary.SetAge");

	UUTAnalyticsBlueprintLibrary_SetAge_Params params;
	params.Age = Age;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTAnalyticsBlueprintLibrary.RecordSimpleItemPurchaseWithAttributes
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FString                 ItemId                         (Parm, ZeroConstructor)
// int                            ItemQuantity                   (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FUTAnalyticsEventAttr> Attributes                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UUTAnalyticsBlueprintLibrary::STATIC_RecordSimpleItemPurchaseWithAttributes(const struct FString& ItemId, int ItemQuantity, TArray<struct FUTAnalyticsEventAttr> Attributes)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTAnalyticsBlueprintLibrary.RecordSimpleItemPurchaseWithAttributes");

	UUTAnalyticsBlueprintLibrary_RecordSimpleItemPurchaseWithAttributes_Params params;
	params.ItemId = ItemId;
	params.ItemQuantity = ItemQuantity;
	params.Attributes = Attributes;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTAnalyticsBlueprintLibrary.RecordSimpleItemPurchase
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString                 ItemId                         (Parm, ZeroConstructor)
// int                            ItemQuantity                   (Parm, ZeroConstructor, IsPlainOldData)

void UUTAnalyticsBlueprintLibrary::STATIC_RecordSimpleItemPurchase(const struct FString& ItemId, int ItemQuantity)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTAnalyticsBlueprintLibrary.RecordSimpleItemPurchase");

	UUTAnalyticsBlueprintLibrary_RecordSimpleItemPurchase_Params params;
	params.ItemId = ItemId;
	params.ItemQuantity = ItemQuantity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTAnalyticsBlueprintLibrary.RecordSimpleCurrencyPurchaseWithAttributes
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FString                 GameCurrencyType               (Parm, ZeroConstructor)
// int                            GameCurrencyAmount             (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FUTAnalyticsEventAttr> Attributes                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UUTAnalyticsBlueprintLibrary::STATIC_RecordSimpleCurrencyPurchaseWithAttributes(const struct FString& GameCurrencyType, int GameCurrencyAmount, TArray<struct FUTAnalyticsEventAttr> Attributes)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTAnalyticsBlueprintLibrary.RecordSimpleCurrencyPurchaseWithAttributes");

	UUTAnalyticsBlueprintLibrary_RecordSimpleCurrencyPurchaseWithAttributes_Params params;
	params.GameCurrencyType = GameCurrencyType;
	params.GameCurrencyAmount = GameCurrencyAmount;
	params.Attributes = Attributes;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTAnalyticsBlueprintLibrary.RecordSimpleCurrencyPurchase
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString                 GameCurrencyType               (Parm, ZeroConstructor)
// int                            GameCurrencyAmount             (Parm, ZeroConstructor, IsPlainOldData)

void UUTAnalyticsBlueprintLibrary::STATIC_RecordSimpleCurrencyPurchase(const struct FString& GameCurrencyType, int GameCurrencyAmount)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTAnalyticsBlueprintLibrary.RecordSimpleCurrencyPurchase");

	UUTAnalyticsBlueprintLibrary_RecordSimpleCurrencyPurchase_Params params;
	params.GameCurrencyType = GameCurrencyType;
	params.GameCurrencyAmount = GameCurrencyAmount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTAnalyticsBlueprintLibrary.RecordProgressWithFullHierarchyAndAttributes
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FString                 ProgressType                   (Parm, ZeroConstructor)
// TArray<struct FString>         ProgressNames                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<struct FUTAnalyticsEventAttr> Attributes                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UUTAnalyticsBlueprintLibrary::STATIC_RecordProgressWithFullHierarchyAndAttributes(const struct FString& ProgressType, TArray<struct FString> ProgressNames, TArray<struct FUTAnalyticsEventAttr> Attributes)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTAnalyticsBlueprintLibrary.RecordProgressWithFullHierarchyAndAttributes");

	UUTAnalyticsBlueprintLibrary_RecordProgressWithFullHierarchyAndAttributes_Params params;
	params.ProgressType = ProgressType;
	params.ProgressNames = ProgressNames;
	params.Attributes = Attributes;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTAnalyticsBlueprintLibrary.RecordProgressWithAttributes
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FString                 ProgressType                   (Parm, ZeroConstructor)
// struct FString                 ProgressName                   (Parm, ZeroConstructor)
// TArray<struct FUTAnalyticsEventAttr> Attributes                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UUTAnalyticsBlueprintLibrary::STATIC_RecordProgressWithAttributes(const struct FString& ProgressType, const struct FString& ProgressName, TArray<struct FUTAnalyticsEventAttr> Attributes)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTAnalyticsBlueprintLibrary.RecordProgressWithAttributes");

	UUTAnalyticsBlueprintLibrary_RecordProgressWithAttributes_Params params;
	params.ProgressType = ProgressType;
	params.ProgressName = ProgressName;
	params.Attributes = Attributes;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTAnalyticsBlueprintLibrary.RecordProgress
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString                 ProgressType                   (Parm, ZeroConstructor)
// struct FString                 ProgressName                   (Parm, ZeroConstructor)

void UUTAnalyticsBlueprintLibrary::STATIC_RecordProgress(const struct FString& ProgressType, const struct FString& ProgressName)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTAnalyticsBlueprintLibrary.RecordProgress");

	UUTAnalyticsBlueprintLibrary_RecordProgress_Params params;
	params.ProgressType = ProgressType;
	params.ProgressName = ProgressName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTAnalyticsBlueprintLibrary.RecordItemPurchase
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString                 ItemId                         (Parm, ZeroConstructor)
// struct FString                 Currency                       (Parm, ZeroConstructor)
// int                            PerItemCost                    (Parm, ZeroConstructor, IsPlainOldData)
// int                            ItemQuantity                   (Parm, ZeroConstructor, IsPlainOldData)

void UUTAnalyticsBlueprintLibrary::STATIC_RecordItemPurchase(const struct FString& ItemId, const struct FString& Currency, int PerItemCost, int ItemQuantity)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTAnalyticsBlueprintLibrary.RecordItemPurchase");

	UUTAnalyticsBlueprintLibrary_RecordItemPurchase_Params params;
	params.ItemId = ItemId;
	params.Currency = Currency;
	params.PerItemCost = PerItemCost;
	params.ItemQuantity = ItemQuantity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTAnalyticsBlueprintLibrary.RecordEventWithAttributes
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FString                 EventName                      (Parm, ZeroConstructor)
// TArray<struct FUTAnalyticsEventAttr> Attributes                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UUTAnalyticsBlueprintLibrary::STATIC_RecordEventWithAttributes(const struct FString& EventName, TArray<struct FUTAnalyticsEventAttr> Attributes)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTAnalyticsBlueprintLibrary.RecordEventWithAttributes");

	UUTAnalyticsBlueprintLibrary_RecordEventWithAttributes_Params params;
	params.EventName = EventName;
	params.Attributes = Attributes;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTAnalyticsBlueprintLibrary.RecordEventWithAttribute
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString                 EventName                      (Parm, ZeroConstructor)
// struct FString                 AttributeName                  (Parm, ZeroConstructor)
// struct FString                 AttributeValue                 (Parm, ZeroConstructor)

void UUTAnalyticsBlueprintLibrary::STATIC_RecordEventWithAttribute(const struct FString& EventName, const struct FString& AttributeName, const struct FString& AttributeValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTAnalyticsBlueprintLibrary.RecordEventWithAttribute");

	UUTAnalyticsBlueprintLibrary_RecordEventWithAttribute_Params params;
	params.EventName = EventName;
	params.AttributeName = AttributeName;
	params.AttributeValue = AttributeValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTAnalyticsBlueprintLibrary.RecordEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString                 EventName                      (Parm, ZeroConstructor)

void UUTAnalyticsBlueprintLibrary::STATIC_RecordEvent(const struct FString& EventName)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTAnalyticsBlueprintLibrary.RecordEvent");

	UUTAnalyticsBlueprintLibrary_RecordEvent_Params params;
	params.EventName = EventName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTAnalyticsBlueprintLibrary.RecordErrorWithAttributes
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FString                 Error                          (Parm, ZeroConstructor)
// TArray<struct FUTAnalyticsEventAttr> Attributes                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UUTAnalyticsBlueprintLibrary::STATIC_RecordErrorWithAttributes(const struct FString& Error, TArray<struct FUTAnalyticsEventAttr> Attributes)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTAnalyticsBlueprintLibrary.RecordErrorWithAttributes");

	UUTAnalyticsBlueprintLibrary_RecordErrorWithAttributes_Params params;
	params.Error = Error;
	params.Attributes = Attributes;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTAnalyticsBlueprintLibrary.RecordError
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString                 Error                          (Parm, ZeroConstructor)

void UUTAnalyticsBlueprintLibrary::STATIC_RecordError(const struct FString& Error)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTAnalyticsBlueprintLibrary.RecordError");

	UUTAnalyticsBlueprintLibrary_RecordError_Params params;
	params.Error = Error;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTAnalyticsBlueprintLibrary.RecordCurrencyPurchase
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString                 GameCurrencyType               (Parm, ZeroConstructor)
// int                            GameCurrencyAmount             (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 RealCurrencyType               (Parm, ZeroConstructor)
// float                          RealMoneyCost                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 PaymentProvider                (Parm, ZeroConstructor)

void UUTAnalyticsBlueprintLibrary::STATIC_RecordCurrencyPurchase(const struct FString& GameCurrencyType, int GameCurrencyAmount, const struct FString& RealCurrencyType, float RealMoneyCost, const struct FString& PaymentProvider)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTAnalyticsBlueprintLibrary.RecordCurrencyPurchase");

	UUTAnalyticsBlueprintLibrary_RecordCurrencyPurchase_Params params;
	params.GameCurrencyType = GameCurrencyType;
	params.GameCurrencyAmount = GameCurrencyAmount;
	params.RealCurrencyType = RealCurrencyType;
	params.RealMoneyCost = RealMoneyCost;
	params.PaymentProvider = PaymentProvider;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTAnalyticsBlueprintLibrary.RecordCurrencyGivenWithAttributes
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FString                 GameCurrencyType               (Parm, ZeroConstructor)
// int                            GameCurrencyAmount             (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FUTAnalyticsEventAttr> Attributes                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UUTAnalyticsBlueprintLibrary::STATIC_RecordCurrencyGivenWithAttributes(const struct FString& GameCurrencyType, int GameCurrencyAmount, TArray<struct FUTAnalyticsEventAttr> Attributes)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTAnalyticsBlueprintLibrary.RecordCurrencyGivenWithAttributes");

	UUTAnalyticsBlueprintLibrary_RecordCurrencyGivenWithAttributes_Params params;
	params.GameCurrencyType = GameCurrencyType;
	params.GameCurrencyAmount = GameCurrencyAmount;
	params.Attributes = Attributes;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTAnalyticsBlueprintLibrary.RecordCurrencyGiven
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString                 GameCurrencyType               (Parm, ZeroConstructor)
// int                            GameCurrencyAmount             (Parm, ZeroConstructor, IsPlainOldData)

void UUTAnalyticsBlueprintLibrary::STATIC_RecordCurrencyGiven(const struct FString& GameCurrencyType, int GameCurrencyAmount)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTAnalyticsBlueprintLibrary.RecordCurrencyGiven");

	UUTAnalyticsBlueprintLibrary_RecordCurrencyGiven_Params params;
	params.GameCurrencyType = GameCurrencyType;
	params.GameCurrencyAmount = GameCurrencyAmount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTAnalyticsBlueprintLibrary.MakeEventAttribute
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FString                 AttributeName                  (Parm, ZeroConstructor)
// struct FString                 AttributeValue                 (Parm, ZeroConstructor)
// struct FUTAnalyticsEventAttr   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUTAnalyticsEventAttr UUTAnalyticsBlueprintLibrary::STATIC_MakeEventAttribute(const struct FString& AttributeName, const struct FString& AttributeValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTAnalyticsBlueprintLibrary.MakeEventAttribute");

	UUTAnalyticsBlueprintLibrary_MakeEventAttribute_Params params;
	params.AttributeName = AttributeName;
	params.AttributeValue = AttributeValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTAnalyticsBlueprintLibrary.GetUserId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UUTAnalyticsBlueprintLibrary::STATIC_GetUserId()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTAnalyticsBlueprintLibrary.GetUserId");

	UUTAnalyticsBlueprintLibrary_GetUserId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTAnalyticsBlueprintLibrary.GetSessionId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UUTAnalyticsBlueprintLibrary::STATIC_GetSessionId()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTAnalyticsBlueprintLibrary.GetSessionId");

	UUTAnalyticsBlueprintLibrary_GetSessionId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTAnalyticsBlueprintLibrary.FlushEvents
// (Final, Native, Static, Public, BlueprintCallable)

void UUTAnalyticsBlueprintLibrary::STATIC_FlushEvents()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTAnalyticsBlueprintLibrary.FlushEvents");

	UUTAnalyticsBlueprintLibrary_FlushEvents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTAnalyticsBlueprintLibrary.EndSession
// (Final, Native, Static, Public, BlueprintCallable)

void UUTAnalyticsBlueprintLibrary::STATIC_EndSession()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTAnalyticsBlueprintLibrary.EndSession");

	UUTAnalyticsBlueprintLibrary_EndSession_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.UTLogOut
// (Exec, Native, Public)

void AUTBasePlayerController::UTLogOut()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.UTLogOut");

	AUTBasePlayerController_UTLogOut_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.UTDumpPartyState
// (Final, Exec, Native, Public)

void AUTBasePlayerController::UTDumpPartyState()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.UTDumpPartyState");

	AUTBasePlayerController_UTDumpPartyState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.UTDumpOnlineSessionState
// (Final, Exec, Native, Public)

void AUTBasePlayerController::UTDumpOnlineSessionState()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.UTDumpOnlineSessionState");

	AUTBasePlayerController_UTDumpOnlineSessionState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.TeamTalk
// (Native, Public)

void AUTBasePlayerController::TeamTalk()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.TeamTalk");

	AUTBasePlayerController_TeamTalk_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.TeamSay
// (Exec, Native, Public)
// Parameters:
// struct FString                 Message                        (Parm, ZeroConstructor)

void AUTBasePlayerController::TeamSay(const struct FString& Message)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.TeamSay");

	AUTBasePlayerController_TeamSay_Params params;
	params.Message = Message;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.Talk
// (Native, Public)

void AUTBasePlayerController::Talk()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.Talk");

	AUTBasePlayerController_Talk_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.StopVOIPTalking
// (Final, Exec, Native, Public)

void AUTBasePlayerController::StopVOIPTalking()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.StopVOIPTalking");

	AUTBasePlayerController_StopVOIPTalking_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.StartVOIPTalking
// (Final, Exec, Native, Public)

void AUTBasePlayerController::StartVOIPTalking()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.StartVOIPTalking");

	AUTBasePlayerController_StartVOIPTalking_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.ShowMenu
// (Exec, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 Parameters                     (Parm, ZeroConstructor)

void AUTBasePlayerController::ShowMenu(const struct FString& Parameters)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.ShowMenu");

	AUTBasePlayerController_ShowMenu_Params params;
	params.Parameters = Parameters;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.SetLoadingMovieToPlay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 MoviePath                      (Parm, ZeroConstructor)
// bool                           bSuppressLoadingText           (Parm, ZeroConstructor, IsPlainOldData)

void AUTBasePlayerController::SetLoadingMovieToPlay(const struct FString& MoviePath, bool bSuppressLoadingText)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.SetLoadingMovieToPlay");

	AUTBasePlayerController_SetLoadingMovieToPlay_Params params;
	params.MoviePath = MoviePath;
	params.bSuppressLoadingText = bSuppressLoadingText;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.ServerSetAvatar
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FName                   newAvatar                      (Parm, ZeroConstructor, IsPlainOldData)

void AUTBasePlayerController::ServerSetAvatar(const struct FName& newAvatar)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.ServerSetAvatar");

	AUTBasePlayerController_ServerSetAvatar_Params params;
	params.newAvatar = newAvatar;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.ServerSay
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FString                 Message                        (Parm, ZeroConstructor)
// bool                           bTeamMessage                   (Parm, ZeroConstructor, IsPlainOldData)

void AUTBasePlayerController::ServerSay(const struct FString& Message, bool bTeamMessage)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.ServerSay");

	AUTBasePlayerController_ServerSay_Params params;
	params.Message = Message;
	params.bTeamMessage = bTeamMessage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.ServerReceiveStatsID
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FString                 NewStatsID                     (Parm, ZeroConstructor)

void AUTBasePlayerController::ServerReceiveStatsID(const struct FString& NewStatsID)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.ServerReceiveStatsID");

	AUTBasePlayerController_ServerReceiveStatsID_Params params;
	params.NewStatsID = NewStatsID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.ServerReceiveStars
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            TotalStars                     (Parm, ZeroConstructor, IsPlainOldData)

void AUTBasePlayerController::ServerReceiveStars(int TotalStars)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.ServerReceiveStars");

	AUTBasePlayerController_ServerReceiveStars_Params params;
	params.TotalStars = TotalStars;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.ServerReceiveCosmetics
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FString                 CosmeticString                 (Parm, ZeroConstructor)

void AUTBasePlayerController::ServerReceiveCosmetics(const struct FString& CosmeticString)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.ServerReceiveCosmetics");

	AUTBasePlayerController_ServerReceiveCosmetics_Params params;
	params.CosmeticString = CosmeticString;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.ServerRconUnban
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FString                 UIDStr                         (Parm, ZeroConstructor)

void AUTBasePlayerController::ServerRconUnban(const struct FString& UIDStr)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.ServerRconUnban");

	AUTBasePlayerController_ServerRconUnban_Params params;
	params.UIDStr = UIDStr;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.ServerRconNormal
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AUTBasePlayerController::ServerRconNormal()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.ServerRconNormal");

	AUTBasePlayerController_ServerRconNormal_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.ServerRconMessage
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FString                 DestinationId                  (Parm, ZeroConstructor)
// struct FString                 Message                        (Parm, ZeroConstructor)

void AUTBasePlayerController::ServerRconMessage(const struct FString& DestinationId, const struct FString& Message)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.ServerRconMessage");

	AUTBasePlayerController_ServerRconMessage_Params params;
	params.DestinationId = DestinationId;
	params.Message = Message;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.ServerRconKick
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FString                 NameOrUIDStr                   (Parm, ZeroConstructor)
// bool                           bBan                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 Reason                         (Parm, ZeroConstructor)

void AUTBasePlayerController::ServerRconKick(const struct FString& NameOrUIDStr, bool bBan, const struct FString& Reason)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.ServerRconKick");

	AUTBasePlayerController_ServerRconKick_Params params;
	params.NameOrUIDStr = NameOrUIDStr;
	params.bBan = bBan;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.ServerRconExec
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FString                 Command                        (Parm, ZeroConstructor)

void AUTBasePlayerController::ServerRconExec(const struct FString& Command)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.ServerRconExec");

	AUTBasePlayerController_ServerRconExec_Params params;
	params.Command = Command;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.ServerRconDBExec
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FString                 Command                        (Parm, ZeroConstructor)

void AUTBasePlayerController::ServerRconDBExec(const struct FString& Command)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.ServerRconDBExec");

	AUTBasePlayerController_ServerRconDBExec_Params params;
	params.Command = Command;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.ServerRconAuth
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FString                 Password                       (Parm, ZeroConstructor)

void AUTBasePlayerController::ServerRconAuth(const struct FString& Password)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.ServerRconAuth");

	AUTBasePlayerController_ServerRconAuth_Params params;
	params.Password = Password;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.ServerLobbySay
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FString                 Message                        (Parm, ZeroConstructor)

void AUTBasePlayerController::ServerLobbySay(const struct FString& Message)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.ServerLobbySay");

	AUTBasePlayerController_ServerLobbySay_Params params;
	params.Message = Message;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.ServerFriendSay
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FString                 Message                        (Parm, ZeroConstructor)
// TArray<struct FUniqueNetIdRepl> FriendIds                      (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void AUTBasePlayerController::ServerFriendSay(const struct FString& Message, TArray<struct FUniqueNetIdRepl> FriendIds)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.ServerFriendSay");

	AUTBasePlayerController_ServerFriendSay_Params params;
	params.Message = Message;
	params.FriendIds = FriendIds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.ServerDebugTest
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FString                 TestCommand                    (Parm, ZeroConstructor)

void AUTBasePlayerController::ServerDebugTest(const struct FString& TestCommand)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.ServerDebugTest");

	AUTBasePlayerController_ServerDebugTest_Params params;
	params.TestCommand = TestCommand;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.ServerChangeClanName
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FString                 S                              (Parm, ZeroConstructor)

void AUTBasePlayerController::ServerChangeClanName(const struct FString& S)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.ServerChangeClanName");

	AUTBasePlayerController_ServerChangeClanName_Params params;
	params.S = S;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.Say
// (Exec, Native, Public)
// Parameters:
// struct FString                 Message                        (Parm, ZeroConstructor)

void AUTBasePlayerController::Say(const struct FString& Message)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.Say");

	AUTBasePlayerController_Say_Params params;
	params.Message = Message;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.SaveProfileSettings
// (Native, Public, BlueprintCallable)

void AUTBasePlayerController::SaveProfileSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.SaveProfileSettings");

	AUTBasePlayerController_SaveProfileSettings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.RepeatTutorial
// (Native, Public, BlueprintCallable)

void AUTBasePlayerController::RepeatTutorial()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.RepeatTutorial");

	AUTBasePlayerController_RepeatTutorial_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.RconUnban
// (Exec, Native, Public)
// Parameters:
// struct FString                 UIDStr                         (Parm, ZeroConstructor)

void AUTBasePlayerController::RconUnban(const struct FString& UIDStr)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.RconUnban");

	AUTBasePlayerController_RconUnban_Params params;
	params.UIDStr = UIDStr;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.RconNormal
// (Exec, Native, Public)

void AUTBasePlayerController::RconNormal()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.RconNormal");

	AUTBasePlayerController_RconNormal_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.RconMessage
// (Exec, Native, Public)
// Parameters:
// struct FString                 DestinationId                  (Parm, ZeroConstructor)
// struct FString                 Message                        (Parm, ZeroConstructor)

void AUTBasePlayerController::RconMessage(const struct FString& DestinationId, const struct FString& Message)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.RconMessage");

	AUTBasePlayerController_RconMessage_Params params;
	params.DestinationId = DestinationId;
	params.Message = Message;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.RconKick
// (Exec, Native, Public)
// Parameters:
// struct FString                 NameOrUIDStr                   (Parm, ZeroConstructor)
// bool                           bBan                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 Reason                         (Parm, ZeroConstructor)

void AUTBasePlayerController::RconKick(const struct FString& NameOrUIDStr, bool bBan, const struct FString& Reason)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.RconKick");

	AUTBasePlayerController_RconKick_Params params;
	params.NameOrUIDStr = NameOrUIDStr;
	params.bBan = bBan;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.RconExec
// (Exec, Native, Public)
// Parameters:
// struct FString                 Command                        (Parm, ZeroConstructor)

void AUTBasePlayerController::RconExec(const struct FString& Command)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.RconExec");

	AUTBasePlayerController_RconExec_Params params;
	params.Command = Command;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.RconDBExec
// (Exec, Native, Public)
// Parameters:
// struct FString                 Command                        (Parm, ZeroConstructor)

void AUTBasePlayerController::RconDBExec(const struct FString& Command)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.RconDBExec");

	AUTBasePlayerController_RconDBExec_Params params;
	params.Command = Command;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.RconAuth
// (Exec, Native, Public)
// Parameters:
// struct FString                 Password                       (Parm, ZeroConstructor)

void AUTBasePlayerController::RconAuth(const struct FString& Password)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.RconAuth");

	AUTBasePlayerController_RconAuth_Params params;
	params.Password = Password;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.PrevTutorial
// (Native, Public, BlueprintCallable)

void AUTBasePlayerController::PrevTutorial()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.PrevTutorial");

	AUTBasePlayerController_PrevTutorial_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.NextTutorial
// (Native, Public, BlueprintCallable)

void AUTBasePlayerController::NextTutorial()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.NextTutorial");

	AUTBasePlayerController_NextTutorial_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.MarkTutorialAsCompleted
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            TutorialMask                   (Parm, ZeroConstructor, IsPlainOldData)

void AUTBasePlayerController::MarkTutorialAsCompleted(int TutorialMask)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.MarkTutorialAsCompleted");

	AUTBasePlayerController_MarkTutorialAsCompleted_Params params;
	params.TutorialMask = TutorialMask;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.LobbySay
// (Final, Exec, Native, Public)
// Parameters:
// struct FString                 Message                        (Parm, ZeroConstructor)

void AUTBasePlayerController::LobbySay(const struct FString& Message)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.LobbySay");

	AUTBasePlayerController_LobbySay_Params params;
	params.Message = Message;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.LaunchTutorial
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   TutorialName                   (Parm, ZeroConstructor, IsPlainOldData)

void AUTBasePlayerController::LaunchTutorial(const struct FName& TutorialName)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.LaunchTutorial");

	AUTBasePlayerController_LaunchTutorial_Params params;
	params.TutorialName = TutorialName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.IsPlayerGameMuted
// (Native, Public, BlueprintCallable)
// Parameters:
// class AUTPlayerState*          PlayerToCheck                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTBasePlayerController::IsPlayerGameMuted(class AUTPlayerState* PlayerToCheck)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.IsPlayerGameMuted");

	AUTBasePlayerController_IsPlayerGameMuted_Params params;
	params.PlayerToCheck = PlayerToCheck;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTBasePlayerController.ImportKeyBinds
// (Final, Exec, Native, Public)

void AUTBasePlayerController::ImportKeyBinds()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.ImportKeyBinds");

	AUTBasePlayerController_ImportKeyBinds_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.HideMenu
// (Exec, Native, Public)

void AUTBasePlayerController::HideMenu()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.HideMenu");

	AUTBasePlayerController_HideMenu_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.GuaranteedKick
// (Native, Public, HasOutParms)
// Parameters:
// struct FText                   KickReason                     (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           bKickToHubIfPossible           (Parm, ZeroConstructor, IsPlainOldData)

void AUTBasePlayerController::GuaranteedKick(const struct FText& KickReason, bool bKickToHubIfPossible)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.GuaranteedKick");

	AUTBasePlayerController_GuaranteedKick_Params params;
	params.KickReason = KickReason;
	params.bKickToHubIfPossible = bKickToHubIfPossible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.GetUTLocalPlayer
// (Native, Public, BlueprintCallable)
// Parameters:
// class UUTLocalPlayer*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UUTLocalPlayer* AUTBasePlayerController::GetUTLocalPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.GetUTLocalPlayer");

	AUTBasePlayerController_GetUTLocalPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTBasePlayerController.GetTutorialSectionText
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<ETutorialSections> Section                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText AUTBasePlayerController::GetTutorialSectionText(TEnumAsByte<ETutorialSections> Section)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.GetTutorialSectionText");

	AUTBasePlayerController_GetTutorialSectionText_Params params;
	params.Section = Section;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTBasePlayerController.GetProfileSettings
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUTProfileSettings*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UUTProfileSettings* AUTBasePlayerController::GetProfileSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.GetProfileSettings");

	AUTBasePlayerController_GetProfileSettings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTBasePlayerController.GetPrevTutorialName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText AUTBasePlayerController::GetPrevTutorialName()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.GetPrevTutorialName");

	AUTBasePlayerController_GetPrevTutorialName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTBasePlayerController.GetNextTutorialName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText AUTBasePlayerController::GetNextTutorialName()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.GetNextTutorialName");

	AUTBasePlayerController_GetNextTutorialName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTBasePlayerController.FriendSay
// (Exec, Native, Public)
// Parameters:
// struct FString                 Message                        (Parm, ZeroConstructor)

void AUTBasePlayerController::FriendSay(const struct FString& Message)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.FriendSay");

	AUTBasePlayerController_FriendSay_Params params;
	params.Message = Message;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.ExportKeyBinds
// (Final, Exec, Native, Public)

void AUTBasePlayerController::ExportKeyBinds()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.ExportKeyBinds");

	AUTBasePlayerController_ExportKeyBinds_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.ExportGameRulesets
// (Final, Exec, Native, Public)
// Parameters:
// struct FString                 Filename                       (Parm, ZeroConstructor)

void AUTBasePlayerController::ExportGameRulesets(const struct FString& Filename)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.ExportGameRulesets");

	AUTBasePlayerController_ExportGameRulesets_Params params;
	params.Filename = Filename;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.DebugTest
// (Exec, Native, Public)
// Parameters:
// struct FString                 TestCommand                    (Parm, ZeroConstructor)

void AUTBasePlayerController::DebugTest(const struct FString& TestCommand)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.DebugTest");

	AUTBasePlayerController_DebugTest_Params params;
	params.TestCommand = TestCommand;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.ClientStopMovie
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)

void AUTBasePlayerController::ClientStopMovie()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.ClientStopMovie");

	AUTBasePlayerController_ClientStopMovie_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.ClientSetPresence
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FString                 NewPresenceString              (Parm, ZeroConstructor)
// bool                           bAllowInvites                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAllowJoinInProgress           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAllowJoinViaPresence          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAllowJoinViaPresenceFriendsOnly (Parm, ZeroConstructor, IsPlainOldData)

void AUTBasePlayerController::ClientSetPresence(const struct FString& NewPresenceString, bool bAllowInvites, bool bAllowJoinInProgress, bool bAllowJoinViaPresence, bool bAllowJoinViaPresenceFriendsOnly)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.ClientSetPresence");

	AUTBasePlayerController_ClientSetPresence_Params params;
	params.NewPresenceString = NewPresenceString;
	params.bAllowInvites = bAllowInvites;
	params.bAllowJoinInProgress = bAllowJoinInProgress;
	params.bAllowJoinViaPresence = bAllowJoinViaPresence;
	params.bAllowJoinViaPresenceFriendsOnly = bAllowJoinViaPresenceFriendsOnly;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.ClientSay
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AUTPlayerState*          Speaker                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 Message                        (Parm, ZeroConstructor)
// struct FName                   Destination                    (Parm, ZeroConstructor, IsPlainOldData)

void AUTBasePlayerController::ClientSay(class AUTPlayerState* Speaker, const struct FString& Message, const struct FName& Destination)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.ClientSay");

	AUTBasePlayerController_ClientSay_Params params;
	params.Speaker = Speaker;
	params.Message = Message;
	params.Destination = Destination;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.ClientReturnToLobby
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// bool                           bKicked                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIdle                          (Parm, ZeroConstructor, IsPlainOldData)

void AUTBasePlayerController::ClientReturnToLobby(bool bKicked, bool bIdle)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.ClientReturnToLobby");

	AUTBasePlayerController_ClientReturnToLobby_Params params;
	params.bKicked = bKicked;
	params.bIdle = bIdle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.ClientReturnedToMenus
// (Native, Public)

void AUTBasePlayerController::ClientReturnedToMenus()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.ClientReturnedToMenus");

	AUTBasePlayerController_ClientReturnedToMenus_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.ClientRequireContentItemListComplete
// (Net, NetReliable, Native, Event, Public, NetClient)

void AUTBasePlayerController::ClientRequireContentItemListComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.ClientRequireContentItemListComplete");

	AUTBasePlayerController_ClientRequireContentItemListComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.ClientRequireContentItemListBegin
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FString                 CloudId                        (Parm, ZeroConstructor)

void AUTBasePlayerController::ClientRequireContentItemListBegin(const struct FString& CloudId)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.ClientRequireContentItemListBegin");

	AUTBasePlayerController_ClientRequireContentItemListBegin_Params params;
	params.CloudId = CloudId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.ClientRequireContentItem
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FString                 PakFile                        (Parm, ZeroConstructor)
// struct FString                 MD5                            (Parm, ZeroConstructor)

void AUTBasePlayerController::ClientRequireContentItem(const struct FString& PakFile, const struct FString& MD5)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.ClientRequireContentItem");

	AUTBasePlayerController_ClientRequireContentItem_Params params;
	params.PakFile = PakFile;
	params.MD5 = MD5;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.ClientRankedGameAbandoned
// (Net, NetReliable, Native, Event, Public, NetClient)

void AUTBasePlayerController::ClientRankedGameAbandoned()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.ClientRankedGameAbandoned");

	AUTBasePlayerController_ClientRankedGameAbandoned_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.ClientPlayMovie
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// struct FString                 MovieName                      (Parm, ZeroConstructor)

void AUTBasePlayerController::ClientPlayMovie(const struct FString& MovieName)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.ClientPlayMovie");

	AUTBasePlayerController_ClientPlayMovie_Params params;
	params.MovieName = MovieName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.ClientMatchmakingGameComplete
// (Net, NetReliable, Native, Event, Public, NetClient)

void AUTBasePlayerController::ClientMatchmakingGameComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.ClientMatchmakingGameComplete");

	AUTBasePlayerController_ClientMatchmakingGameComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.ClientGenericInitialization
// (Net, NetReliable, Native, Event, Public, NetClient)

void AUTBasePlayerController::ClientGenericInitialization()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.ClientGenericInitialization");

	AUTBasePlayerController_ClientGenericInitialization_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.ClientCloseAllUI
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// bool                           bExceptDialogs                 (Parm, ZeroConstructor, IsPlainOldData)

void AUTBasePlayerController::ClientCloseAllUI(bool bExceptDialogs)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.ClientCloseAllUI");

	AUTBasePlayerController_ClientCloseAllUI_Params params;
	params.bExceptDialogs = bExceptDialogs;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.ClanName
// (Exec, Native, Public)
// Parameters:
// struct FString                 S                              (Parm, ZeroConstructor)

void AUTBasePlayerController::ClanName(const struct FString& S)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.ClanName");

	AUTBasePlayerController_ClanName_Params params;
	params.S = S;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasePlayerController.AreMenusOpen
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTBasePlayerController::AreMenusOpen()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.AreMenusOpen");

	AUTBasePlayerController_AreMenusOpen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTBasePlayerController.ApplyProfileSettings
// (Native, Public, BlueprintCallable)

void AUTBasePlayerController::ApplyProfileSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasePlayerController.ApplyProfileSettings");

	AUTBasePlayerController_ApplyProfileSettings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.VoiceDebug
// (Exec, Native, Public)
// Parameters:
// struct FString                 Command                        (Parm, ZeroConstructor)

void AUTPlayerController::VoiceDebug(const struct FString& Command)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.VoiceDebug");

	AUTPlayerController_VoiceDebug_Params params;
	params.Command = Command;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.VoiceChatReconnected
// (Final, Native, Public)

void AUTPlayerController::VoiceChatReconnected()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.VoiceChatReconnected");

	AUTPlayerController_VoiceChatReconnected_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.VoiceChatChannelJoinFailed
// (Final, Native, Public)

void AUTPlayerController::VoiceChatChannelJoinFailed()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.VoiceChatChannelJoinFailed");

	AUTPlayerController_VoiceChatChannelJoinFailed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ViewProjectile
// (Exec, Native, Public)

void AUTPlayerController::ViewProjectile()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ViewProjectile");

	AUTPlayerController_ViewProjectile_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ViewPowerup
// (Exec, Native, Public)
// Parameters:
// struct FString                 PowerupName                    (Parm, ZeroConstructor)

void AUTPlayerController::ViewPowerup(const struct FString& PowerupName)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ViewPowerup");

	AUTPlayerController_ViewPowerup_Params params;
	params.PowerupName = PowerupName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ViewPlayerNum
// (Exec, Native, Public)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  TeamNum                        (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::ViewPlayerNum(int Index, unsigned char TeamNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ViewPlayerNum");

	AUTPlayerController_ViewPlayerNum_Params params;
	params.Index = Index;
	params.TeamNum = TeamNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ViewNextPlayer
// (Exec, Native, Public)

void AUTPlayerController::ViewNextPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ViewNextPlayer");

	AUTPlayerController_ViewNextPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ViewFlag
// (Exec, Native, Public)
// Parameters:
// unsigned char                  Index                          (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::ViewFlag(unsigned char Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ViewFlag");

	AUTPlayerController_ViewFlag_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ViewClosestVisiblePlayer
// (Exec, Native, Public)

void AUTPlayerController::ViewClosestVisiblePlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ViewClosestVisiblePlayer");

	AUTPlayerController_ViewClosestVisiblePlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ViewCamera
// (Exec, Native, Public)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::ViewCamera(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ViewCamera");

	AUTPlayerController_ViewCamera_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.UTDemoPause
// (Exec, Native, Public)

void AUTPlayerController::UTDemoPause()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.UTDemoPause");

	AUTPlayerController_UTDemoPause_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.UTClientSetRotation
// (Net, NetReliable, Native, Event, Public, HasDefaults, NetClient, BlueprintCallable)
// Parameters:
// struct FRotator                NewRotation                    (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::UTClientSetRotation(const struct FRotator& NewRotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.UTClientSetRotation");

	AUTPlayerController_UTClientSetRotation_Params params;
	params.NewRotation = NewRotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.UTClientPlaySound
// (Net, Native, Event, Public, NetClient)
// Parameters:
// class USoundBase*              Sound                          (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::UTClientPlaySound(class USoundBase* Sound)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.UTClientPlaySound");

	AUTPlayerController_UTClientPlaySound_Params params;
	params.Sound = Sound;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.UTBugIt
// (Exec, Native, Public)
// Parameters:
// struct FString                 ScreenShotDescription          (Parm, ZeroConstructor)

void AUTPlayerController::UTBugIt(const struct FString& ScreenShotDescription)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.UTBugIt");

	AUTPlayerController_UTBugIt_Params params;
	params.ScreenShotDescription = ScreenShotDescription;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ToggleTacCom
// (Exec, Native, Public)

void AUTPlayerController::ToggleTacCom()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ToggleTacCom");

	AUTPlayerController_ToggleTacCom_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ToggleSlideOut
// (Exec, Native, Public)

void AUTPlayerController::ToggleSlideOut()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ToggleSlideOut");

	AUTPlayerController_ToggleSlideOut_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ToggleSingleTap
// (Exec, Native, Public)

void AUTPlayerController::ToggleSingleTap()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ToggleSingleTap");

	AUTPlayerController_ToggleSingleTap_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ToggleShowTimers
// (Exec, Native, Public)

void AUTPlayerController::ToggleShowTimers()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ToggleShowTimers");

	AUTPlayerController_ToggleShowTimers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ToggleShowDamage
// (Exec, Native, Public)

void AUTPlayerController::ToggleShowDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ToggleShowDamage");

	AUTPlayerController_ToggleShowDamage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ToggleShowBinds
// (Exec, Native, Public)

void AUTPlayerController::ToggleShowBinds()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ToggleShowBinds");

	AUTPlayerController_ToggleShowBinds_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ToggleScoreboard
// (Exec, Native, Public)
// Parameters:
// bool                           bShow                          (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::ToggleScoreboard(bool bShow)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ToggleScoreboard");

	AUTPlayerController_ToggleScoreboard_Params params;
	params.bShow = bShow;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.TogglePlayerInfo
// (Exec, Native, Public)

void AUTPlayerController::TogglePlayerInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.TogglePlayerInfo");

	AUTPlayerController_TogglePlayerInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ToggleMinimap
// (Exec, Native, Public)

void AUTPlayerController::ToggleMinimap()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ToggleMinimap");

	AUTPlayerController_ToggleMinimap_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ToggleBehindView
// (Exec, Native, Public)

void AUTPlayerController::ToggleBehindView()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ToggleBehindView");

	AUTPlayerController_ToggleBehindView_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ThrowWeapon
// (Final, Native, Public, BlueprintCallable)

void AUTPlayerController::ThrowWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ThrowWeapon");

	AUTPlayerController_ThrowWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.TestVote
// (Exec, Native, Public)

void AUTPlayerController::TestVote()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.TestVote");

	AUTPlayerController_TestVote_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.TestCallstack
// (Exec, Native, Public)

void AUTPlayerController::TestCallstack()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.TestCallstack");

	AUTPlayerController_TestCallstack_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.SwitchWeaponGroup
// (Exec, Native, Public)
// Parameters:
// int                            Group                          (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::SwitchWeaponGroup(int Group)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.SwitchWeaponGroup");

	AUTPlayerController_SwitchWeaponGroup_Params params;
	params.Group = Group;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.SwitchWeapon
// (Exec, Native, Protected)
// Parameters:
// int                            Group                          (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::SwitchWeapon(int Group)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.SwitchWeapon");

	AUTPlayerController_SwitchWeapon_Params params;
	params.Group = Group;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.SwitchToBestWeapon
// (Exec, Native, Public)

void AUTPlayerController::SwitchToBestWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.SwitchToBestWeapon");

	AUTPlayerController_SwitchToBestWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.Suicide
// (Exec, Native, Protected)

void AUTPlayerController::Suicide()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.Suicide");

	AUTPlayerController_Suicide_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.StopDropCarriedObject
// (Final, Exec, Native, Public)

void AUTPlayerController::StopDropCarriedObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.StopDropCarriedObject");

	AUTPlayerController_StopDropCarriedObject_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.StartCastingGuide
// (Exec, Native, Public)

void AUTPlayerController::StartCastingGuide()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.StartCastingGuide");

	AUTPlayerController_StartCastingGuide_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.SlowerEmote
// (Native, Public)

void AUTPlayerController::SlowerEmote()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.SlowerEmote");

	AUTPlayerController_SlowerEmote_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.SkullPickedUp
// (Native, Public, BlueprintCallable)

void AUTPlayerController::SkullPickedUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.SkullPickedUp");

	AUTPlayerController_SkullPickedUp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ShowWeaponWheel
// (Exec, Native, Public)

void AUTPlayerController::ShowWeaponWheel()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ShowWeaponWheel");

	AUTPlayerController_ShowWeaponWheel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ShowDropMenu
// (Final, Native, Public)

void AUTPlayerController::ShowDropMenu()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ShowDropMenu");

	AUTPlayerController_ShowDropMenu_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ShowComsMenu
// (Exec, Native, Public)

void AUTPlayerController::ShowComsMenu()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ShowComsMenu");

	AUTPlayerController_ShowComsMenu_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.SetWeaponHand
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EWeaponHand                    NewHand                        (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::SetWeaponHand(EWeaponHand NewHand)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.SetWeaponHand");

	AUTPlayerController_SetWeaponHand_Params params;
	params.NewHand = NewHand;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.SetWeaponBobScaling
// (Exec, Native, Public)
// Parameters:
// float                          NewScaling                     (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::SetWeaponBobScaling(float NewScaling)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.SetWeaponBobScaling");

	AUTPlayerController_SetWeaponBobScaling_Params params;
	params.NewScaling = NewScaling;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.SetViewedScorePS
// (Native, Public)
// Parameters:
// class AUTPlayerState*          ViewedPS                       (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  NewStatsPage                   (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::SetViewedScorePS(class AUTPlayerState* ViewedPS, unsigned char NewStatsPage)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.SetViewedScorePS");

	AUTPlayerController_SetViewedScorePS_Params params;
	params.ViewedPS = ViewedPS;
	params.NewStatsPage = NewStatsPage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.SetStylizedPP
// (Exec, Native, Public)
// Parameters:
// int                            NewPP                          (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::SetStylizedPP(int NewPP)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.SetStylizedPP");

	AUTPlayerController_SetStylizedPP_Params params;
	params.NewPP = NewPP;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.SetMouseSensitivityUT
// (Exec, Native, Public)
// Parameters:
// float                          NewSensitivity                 (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::SetMouseSensitivityUT(float NewSensitivity)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.SetMouseSensitivityUT");

	AUTPlayerController_SetMouseSensitivityUT_Params params;
	params.NewSensitivity = NewSensitivity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.SetMouseAccelPower
// (Final, Exec, Native, Public)
// Parameters:
// float                          NewAccelPower                  (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::SetMouseAccelPower(float NewAccelPower)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.SetMouseAccelPower");

	AUTPlayerController_SetMouseAccelPower_Params params;
	params.NewAccelPower = NewAccelPower;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.SetMouseAccelOffset
// (Final, Exec, Native, Public)
// Parameters:
// float                          NewAccelOffset                 (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::SetMouseAccelOffset(float NewAccelOffset)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.SetMouseAccelOffset");

	AUTPlayerController_SetMouseAccelOffset_Params params;
	params.NewAccelOffset = NewAccelOffset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.SetMouseAccelMax
// (Final, Exec, Native, Public)
// Parameters:
// float                          NewAccelMax                    (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::SetMouseAccelMax(float NewAccelMax)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.SetMouseAccelMax");

	AUTPlayerController_SetMouseAccelMax_Params params;
	params.NewAccelMax = NewAccelMax;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.SetMouseAccel
// (Final, Exec, Native, Public)
// Parameters:
// float                          NewAccel                       (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::SetMouseAccel(float NewAccel)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.SetMouseAccel");

	AUTPlayerController_SetMouseAccel_Params params;
	params.NewAccel = NewAccel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.SetGamepadSensitivityRight
// (Exec, Native, Public)
// Parameters:
// float                          NewSensitivity                 (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::SetGamepadSensitivityRight(float NewSensitivity)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.SetGamepadSensitivityRight");

	AUTPlayerController_SetGamepadSensitivityRight_Params params;
	params.NewSensitivity = NewSensitivity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.SetGamepadSensitivityLeft
// (Exec, Native, Public)
// Parameters:
// float                          NewSensitivity                 (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::SetGamepadSensitivityLeft(float NewSensitivity)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.SetGamepadSensitivityLeft");

	AUTPlayerController_SetGamepadSensitivityLeft_Params params;
	params.NewSensitivity = NewSensitivity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.SetEyeOffsetScaling
// (Exec, Native, Public)
// Parameters:
// float                          NewScaling                     (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::SetEyeOffsetScaling(float NewScaling)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.SetEyeOffsetScaling");

	AUTPlayerController_SetEyeOffsetScaling_Params params;
	params.NewScaling = NewScaling;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.SetEmoteSpeed
// (Exec, Native, Public)
// Parameters:
// float                          NewEmoteSpeed                  (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::SetEmoteSpeed(float NewEmoteSpeed)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.SetEmoteSpeed");

	AUTPlayerController_SetEmoteSpeed_Params params;
	params.NewEmoteSpeed = NewEmoteSpeed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ServerVoiceDebug
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FString                 Command                        (Parm, ZeroConstructor)

void AUTPlayerController::ServerVoiceDebug(const struct FString& Command)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ServerVoiceDebug");

	AUTPlayerController_ServerVoiceDebug_Params params;
	params.Command = Command;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ServerVoiceChatRejoinChannel
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AUTPlayerController::ServerVoiceChatRejoinChannel()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ServerVoiceChatRejoinChannel");

	AUTPlayerController_ServerVoiceChatRejoinChannel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ServerVoiceChatReconnected
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AUTPlayerController::ServerVoiceChatReconnected()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ServerVoiceChatReconnected");

	AUTPlayerController_ServerVoiceChatReconnected_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ServerViewProjectile
// (Net, Native, Event, Public, NetServer, NetValidate)

void AUTPlayerController::ServerViewProjectile()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ServerViewProjectile");

	AUTPlayerController_ServerViewProjectile_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ServerViewPlayerState
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class APlayerState*            PS                             (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::ServerViewPlayerState(class APlayerState* PS)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ServerViewPlayerState");

	AUTPlayerController_ServerViewPlayerState_Params params;
	params.PS = PS;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ServerViewPlaceholderAtLocation
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector                 Location                       (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::ServerViewPlaceholderAtLocation(const struct FVector& Location)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ServerViewPlaceholderAtLocation");

	AUTPlayerController_ServerViewPlaceholderAtLocation_Params params;
	params.Location = Location;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ServerViewPawn
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class APawn*                   PawnToView                     (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::ServerViewPawn(class APawn* PawnToView)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ServerViewPawn");

	AUTPlayerController_ServerViewPawn_Params params;
	params.PawnToView = PawnToView;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ServerViewFlagHolder
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// unsigned char                  TeamIndex                      (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::ServerViewFlagHolder(unsigned char TeamIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ServerViewFlagHolder");

	AUTPlayerController_ServerViewFlagHolder_Params params;
	params.TeamIndex = TeamIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ServerViewFlag
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// unsigned char                  Index                          (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::ServerViewFlag(unsigned char Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ServerViewFlag");

	AUTPlayerController_ServerViewFlag_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ServerUpdatePing
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                          ExactPing                      (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::ServerUpdatePing(float ExactPing)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ServerUpdatePing");

	AUTPlayerController_ServerUpdatePing_Params params;
	params.ExactPing = ExactPing;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ServerToggleWarmup
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AUTPlayerController::ServerToggleWarmup()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ServerToggleWarmup");

	AUTPlayerController_ServerToggleWarmup_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ServerThrowWeapon
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AUTPlayerController::ServerThrowWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ServerThrowWeapon");

	AUTPlayerController_ServerThrowWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ServerSwitchTeam
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AUTPlayerController::ServerSwitchTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ServerSwitchTeam");

	AUTPlayerController_ServerSwitchTeam_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ServerSuicide
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void AUTPlayerController::ServerSuicide()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ServerSuicide");

	AUTPlayerController_ServerSuicide_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ServerStartCastingGuide
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AUTPlayerController::ServerStartCastingGuide()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ServerStartCastingGuide");

	AUTPlayerController_ServerStartCastingGuide_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ServerSetViewedScorePS
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AUTPlayerState*          ViewedPS                       (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  NewStatsPage                   (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::ServerSetViewedScorePS(class AUTPlayerState* ViewedPS, unsigned char NewStatsPage)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ServerSetViewedScorePS");

	AUTPlayerController_ServerSetViewedScorePS_Params params;
	params.ViewedPS = ViewedPS;
	params.NewStatsPage = NewStatsPage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ServerSendComsMessage
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class AUTPlayerState*          Target                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            Switch                         (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::ServerSendComsMessage(class AUTPlayerState* Target, int Switch)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ServerSendComsMessage");

	AUTPlayerController_ServerSendComsMessage_Params params;
	params.Target = Target;
	params.Switch = Switch;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ServerSelectSpawnPoint
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class APlayerStart*            DesiredStart                   (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::ServerSelectSpawnPoint(class APlayerStart* DesiredStart)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ServerSelectSpawnPoint");

	AUTPlayerController_ServerSelectSpawnPoint_Params params;
	params.DesiredStart = DesiredStart;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ServerRestartPlayerAltFire
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AUTPlayerController::ServerRestartPlayerAltFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ServerRestartPlayerAltFire");

	AUTPlayerController_ServerRestartPlayerAltFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ServerRequestRally
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AUTPlayerController::ServerRequestRally()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ServerRequestRally");

	AUTPlayerController_ServerRequestRally_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ServerRegisterBanVote
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AUTPlayerState*          BadGuy                         (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::ServerRegisterBanVote(class AUTPlayerState* BadGuy)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ServerRegisterBanVote");

	AUTPlayerController_ServerRegisterBanVote_Params params;
	params.BadGuy = BadGuy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ServerReceiveCountryFlag
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FName                   NewCountryFlag                 (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::ServerReceiveCountryFlag(const struct FName& NewCountryFlag)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ServerReceiveCountryFlag");

	AUTPlayerController_ServerReceiveCountryFlag_Params params;
	params.NewCountryFlag = NewCountryFlag;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ServerRconNextMap
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FString                 NextMap                        (Parm, ZeroConstructor)

void AUTPlayerController::ServerRconNextMap(const struct FString& NextMap)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ServerRconNextMap");

	AUTPlayerController_ServerRconNextMap_Params params;
	params.NextMap = NextMap;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ServerRconMap
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FString                 NewMap                         (Parm, ZeroConstructor)

void AUTPlayerController::ServerRconMap(const struct FString& NewMap)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ServerRconMap");

	AUTPlayerController_ServerRconMap_Params params;
	params.NewMap = NewMap;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ServerPlayGroupTaunt
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AUTPlayerController::ServerPlayGroupTaunt()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ServerPlayGroupTaunt");

	AUTPlayerController_ServerPlayGroupTaunt_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ServerNP
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AUTPlayerController::ServerNP()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ServerNP");

	AUTPlayerController_ServerNP_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ServerNotifyProjectileHit
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AUTProjectile*           HitProj                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector_NetQuantize     HitLocation                    (Parm)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          TimeStamp                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            Damage                         (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::ServerNotifyProjectileHit(class AUTProjectile* HitProj, const struct FVector_NetQuantize& HitLocation, class AActor* DamageCauser, float TimeStamp, int Damage)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ServerNotifyProjectileHit");

	AUTPlayerController_ServerNotifyProjectileHit_Params params;
	params.HitProj = HitProj;
	params.HitLocation = HitLocation;
	params.DamageCauser = DamageCauser;
	params.TimeStamp = TimeStamp;
	params.Damage = Damage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ServerNegotiatePredictionPing
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                          NewPredictionPing              (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::ServerNegotiatePredictionPing(float NewPredictionPing)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ServerNegotiatePredictionPing");

	AUTPlayerController_ServerNegotiatePredictionPing_Params params;
	params.NewPredictionPing = NewPredictionPing;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ServerMutate
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FString                 MutateString                   (Parm, ZeroConstructor)

void AUTPlayerController::ServerMutate(const struct FString& MutateString)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ServerMutate");

	AUTPlayerController_ServerMutate_Params params;
	params.MutateString = MutateString;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ServerEmote
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            EmoteIndex                     (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::ServerEmote(int EmoteIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ServerEmote");

	AUTPlayerController_ServerEmote_Params params;
	params.EmoteIndex = EmoteIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ServerCasterReady
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AUTPlayerController::ServerCasterReady()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ServerCasterReady");

	AUTPlayerController_ServerCasterReady_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ServerBouncePing
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                          TimeStamp                      (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::ServerBouncePing(float TimeStamp)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ServerBouncePing");

	AUTPlayerController_ServerBouncePing_Params params;
	params.TimeStamp = TimeStamp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ServerActivatePowerUpPress
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AUTPlayerController::ServerActivatePowerUpPress()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ServerActivatePowerUpPress");

	AUTPlayerController_ServerActivatePowerUpPress_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.SendComsMessage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AUTPlayerState*          Target                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            Switch                         (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::SendComsMessage(class AUTPlayerState* Target, int Switch)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.SendComsMessage");

	AUTPlayerController_SendComsMessage_Params params;
	params.Target = Target;
	params.Switch = Switch;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.SelectTranslocator
// (Final, Exec, Native, Protected)

void AUTPlayerController::SelectTranslocator()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.SelectTranslocator");

	AUTPlayerController_SelectTranslocator_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.RestartVOIP
// (Native, Protected)

void AUTPlayerController::RestartVOIP()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.RestartVOIP");

	AUTPlayerController_RestartVOIP_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ResolveKeybindToFKey
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FString                 Command                        (Parm, ZeroConstructor)
// TArray<struct FKey>            Keys                           (Parm, OutParm, ZeroConstructor)
// bool                           bIncludeGamepad                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIncludeAxis                   (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::ResolveKeybindToFKey(const struct FString& Command, bool bIncludeGamepad, bool bIncludeAxis, TArray<struct FKey>* Keys)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ResolveKeybindToFKey");

	AUTPlayerController_ResolveKeybindToFKey_Params params;
	params.Command = Command;
	params.bIncludeGamepad = bIncludeGamepad;
	params.bIncludeAxis = bIncludeAxis;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Keys != nullptr)
		*Keys = params.Keys;
}


// Function UnrealTournament.UTPlayerController.ResolveKeybind
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FString                 Command                        (Parm, ZeroConstructor)
// TArray<struct FString>         Keys                           (Parm, OutParm, ZeroConstructor)
// bool                           bIncludeGamepad                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIncludeAxis                   (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::ResolveKeybind(const struct FString& Command, bool bIncludeGamepad, bool bIncludeAxis, TArray<struct FString>* Keys)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ResolveKeybind");

	AUTPlayerController_ResolveKeybind_Params params;
	params.Command = Command;
	params.bIncludeGamepad = bIncludeGamepad;
	params.bIncludeAxis = bIncludeAxis;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Keys != nullptr)
		*Keys = params.Keys;
}


// Function UnrealTournament.UTPlayerController.RequestRally
// (Exec, Native, Public)

void AUTPlayerController::RequestRally()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.RequestRally");

	AUTPlayerController_RequestRally_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.RefreshWeaponGroups
// (Final, Native, Public, BlueprintCallable)

void AUTPlayerController::RefreshWeaponGroups()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.RefreshWeaponGroups");

	AUTPlayerController_RefreshWeaponGroups_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.RconNextMap
// (Exec, Native, Public)
// Parameters:
// struct FString                 NextMap                        (Parm, ZeroConstructor)

void AUTPlayerController::RconNextMap(const struct FString& NextMap)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.RconNextMap");

	AUTPlayerController_RconNextMap_Params params;
	params.NextMap = NextMap;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.RconMap
// (Exec, Native, Public)
// Parameters:
// struct FString                 NewMap                         (Parm, ZeroConstructor)

void AUTPlayerController::RconMap(const struct FString& NewMap)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.RconMap");

	AUTPlayerController_RconMap_Params params;
	params.NewMap = NewMap;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.PumpkinPickedUp
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          GainedAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          GoalAmount                     (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::PumpkinPickedUp(float GainedAmount, float GoalAmount)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.PumpkinPickedUp");

	AUTPlayerController_PumpkinPickedUp_Params params;
	params.GainedAmount = GainedAmount;
	params.GoalAmount = GoalAmount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.Predict
// (Exec, Native, Public)
// Parameters:
// float                          NewDesiredPredictionPing       (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::Predict(float NewDesiredPredictionPing)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.Predict");

	AUTPlayerController_Predict_Params params;
	params.NewDesiredPredictionPing = NewDesiredPredictionPing;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.PlayTaunt2
// (Native, Public)

void AUTPlayerController::PlayTaunt2()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.PlayTaunt2");

	AUTPlayerController_PlayTaunt2_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.PlayTaunt
// (Native, Public)

void AUTPlayerController::PlayTaunt()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.PlayTaunt");

	AUTPlayerController_PlayTaunt_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.PlayMenuSelectSound
// (Native, Public)

void AUTPlayerController::PlayMenuSelectSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.PlayMenuSelectSound");

	AUTPlayerController_PlayMenuSelectSound_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.PlayGroupTaunt
// (Native, Public)

void AUTPlayerController::PlayGroupTaunt()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.PlayGroupTaunt");

	AUTPlayerController_PlayGroupTaunt_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.OnRepVoiceChatLoginToken
// (Final, Native, Public)

void AUTPlayerController::OnRepVoiceChatLoginToken()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.OnRepVoiceChatLoginToken");

	AUTPlayerController_OnRepVoiceChatLoginToken_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.OnRepVoiceChatJoinToken
// (Final, Native, Public)

void AUTPlayerController::OnRepVoiceChatJoinToken()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.OnRepVoiceChatJoinToken");

	AUTPlayerController_OnRepVoiceChatJoinToken_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.OnRep_HUDClass
// (Native, Public)

void AUTPlayerController::OnRep_HUDClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.OnRep_HUDClass");

	AUTPlayerController_OnRep_HUDClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.OnRep_CastingViewIndex
// (Final, Native, Public)

void AUTPlayerController::OnRep_CastingViewIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.OnRep_CastingViewIndex");

	AUTPlayerController_OnRep_CastingViewIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.OnRep_CastingGuide
// (Final, Native, Public)

void AUTPlayerController::OnRep_CastingGuide()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.OnRep_CastingGuide");

	AUTPlayerController_OnRep_CastingGuide_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.NP
// (Exec, Native, Public)

void AUTPlayerController::NP()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.NP");

	AUTPlayerController_NP_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.NetStats
// (Exec, Native, Public)

void AUTPlayerController::NetStats()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.NetStats");

	AUTPlayerController_NetStats_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.Mutate
// (Exec, Native, Public)
// Parameters:
// struct FString                 MutateString                   (Parm, ZeroConstructor)

void AUTPlayerController::Mutate(const struct FString& MutateString)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.Mutate");

	AUTPlayerController_Mutate_Params params;
	params.MutateString = MutateString;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.K2_ReceiveLocalizedMessage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  Message                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            Switch                         (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerState*            RelatedPlayerState_2           (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerState*            RelatedPlayerState_3           (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 OptionalObject                 (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::K2_ReceiveLocalizedMessage(class UClass* Message, int Switch, class APlayerState* RelatedPlayerState_2, class APlayerState* RelatedPlayerState_3, class UObject* OptionalObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.K2_ReceiveLocalizedMessage");

	AUTPlayerController_K2_ReceiveLocalizedMessage_Params params;
	params.Message = Message;
	params.Switch = Switch;
	params.RelatedPlayerState_2 = RelatedPlayerState_2;
	params.RelatedPlayerState_3 = RelatedPlayerState_3;
	params.OptionalObject = OptionalObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.IsLineUpActive
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTPlayerController::IsLineUpActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.IsLineUpActive");

	AUTPlayerController_IsLineUpActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTPlayerController.HudSettings
// (Exec, Native, Public)

void AUTPlayerController::HudSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.HudSettings");

	AUTPlayerController_HudSettings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.HideWeaponWheel
// (Exec, Native, Public)

void AUTPlayerController::HideWeaponWheel()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.HideWeaponWheel");

	AUTPlayerController_HideWeaponWheel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.HideComsMenu
// (Exec, Native, Public)

void AUTPlayerController::HideComsMenu()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.HideComsMenu");

	AUTPlayerController_HideComsMenu_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.GhostStop
// (Exec, Native, Public)

void AUTPlayerController::GhostStop()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.GhostStop");

	AUTPlayerController_GhostStop_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.GhostStart
// (Exec, Native, Public)

void AUTPlayerController::GhostStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.GhostStart");

	AUTPlayerController_GhostStart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.GhostPlay
// (Exec, Native, Public)

void AUTPlayerController::GhostPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.GhostPlay");

	AUTPlayerController_GhostPlay_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.GetUTCharacter
// (Native, Public, BlueprintCallable)
// Parameters:
// class AUTCharacter*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AUTCharacter* AUTPlayerController::GetUTCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.GetUTCharacter");

	AUTPlayerController_GetUTCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTPlayerController.GetSpectatingRotation
// (Native, Public, HasOutParms, HasDefaults)
// Parameters:
// struct FVector                 ViewLoc                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FRotator                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FRotator AUTPlayerController::GetSpectatingRotation(const struct FVector& ViewLoc, float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.GetSpectatingRotation");

	AUTPlayerController_GetSpectatingRotation_Params params;
	params.ViewLoc = ViewLoc;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTPlayerController.FlushVOIP
// (Exec, Native, Public)

void AUTPlayerController::FlushVOIP()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.FlushVOIP");

	AUTPlayerController_FlushVOIP_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.FindGoodView
// (Native, Public, HasOutParms, HasDefaults)
// Parameters:
// struct FVector                 TargetLoc                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           bIsUpdate                      (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::FindGoodView(const struct FVector& TargetLoc, bool bIsUpdate)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.FindGoodView");

	AUTPlayerController_FindGoodView_Params params;
	params.TargetLoc = TargetLoc;
	params.bIsUpdate = bIsUpdate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.FasterEmote
// (Native, Public)

void AUTPlayerController::FasterEmote()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.FasterEmote");

	AUTPlayerController_FasterEmote_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.EnableAutoCam
// (Exec, Native, Public)

void AUTPlayerController::EnableAutoCam()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.EnableAutoCam");

	AUTPlayerController_EnableAutoCam_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.Emote
// (Exec, Native, Public)
// Parameters:
// int                            EmoteIndex                     (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::Emote(int EmoteIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.Emote");

	AUTPlayerController_Emote_Params params;
	params.EmoteIndex = EmoteIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.DumpMapVote
// (Final, Exec, Native, Protected)

void AUTPlayerController::DumpMapVote()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.DumpMapVote");

	AUTPlayerController_DumpMapVote_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.DropCarriedObject
// (Final, Exec, Native, Public)

void AUTPlayerController::DropCarriedObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.DropCarriedObject");

	AUTPlayerController_DropCarriedObject_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.DemoTimeDilation
// (Exec, Native, Public)
// Parameters:
// float                          DeltaAmount                    (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::DemoTimeDilation(float DeltaAmount)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.DemoTimeDilation");

	AUTPlayerController_DemoTimeDilation_Params params;
	params.DeltaAmount = DeltaAmount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.DemoSetTimeDilation
// (Exec, Native, Public)
// Parameters:
// float                          Amount                         (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::DemoSetTimeDilation(float Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.DemoSetTimeDilation");

	AUTPlayerController_DemoSetTimeDilation_Params params;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.DemoSeek
// (Exec, Native, Public)
// Parameters:
// float                          DeltaSeconds                   (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::DemoSeek(float DeltaSeconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.DemoSeek");

	AUTPlayerController_DemoSeek_Params params;
	params.DeltaSeconds = DeltaSeconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.DemoRestart
// (Exec, Native, Public)

void AUTPlayerController::DemoRestart()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.DemoRestart");

	AUTPlayerController_DemoRestart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.DemoGoToLive
// (Exec, Native, Public)

void AUTPlayerController::DemoGoToLive()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.DemoGoToLive");

	AUTPlayerController_DemoGoToLive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.DemoGoTo
// (Exec, Native, Public)
// Parameters:
// float                          Seconds                        (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::DemoGoTo(float Seconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.DemoGoTo");

	AUTPlayerController_DemoGoTo_Params params;
	params.Seconds = Seconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ClientWarnEnemyBehind
// (Net, Native, Event, Public, NetClient)
// Parameters:
// class AUTPlayerState*          TeamPS                         (Parm, ZeroConstructor, IsPlainOldData)
// class AUTCharacter*            Targeter                       (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  TeammateVoice                  (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::ClientWarnEnemyBehind(class AUTPlayerState* TeamPS, class AUTCharacter* Targeter, class UClass* TeammateVoice)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ClientWarnEnemyBehind");

	AUTPlayerController_ClientWarnEnemyBehind_Params params;
	params.TeamPS = TeamPS;
	params.Targeter = Targeter;
	params.TeammateVoice = TeammateVoice;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ClientViewSpectatorPawn
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FViewTargetTransitionParams TransitionParams               (Parm)

void AUTPlayerController::ClientViewSpectatorPawn(const struct FViewTargetTransitionParams& TransitionParams)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ClientViewSpectatorPawn");

	AUTPlayerController_ClientViewSpectatorPawn_Params params;
	params.TransitionParams = TransitionParams;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ClientVerifyFiringInputs
// (Net, Native, Event, Public, NetClient)

void AUTPlayerController::ClientVerifyFiringInputs()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ClientVerifyFiringInputs");

	AUTPlayerController_ClientVerifyFiringInputs_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ClientUpdateWarmup
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// bool                           bNewWarmingUp                  (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::ClientUpdateWarmup(bool bNewWarmingUp)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ClientUpdateWarmup");

	AUTPlayerController_ClientUpdateWarmup_Params params;
	params.bNewWarmingUp = bNewWarmingUp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ClientUpdateTeamStats
// (Net, Native, Event, Public, NetClient)
// Parameters:
// unsigned char                  TeamNum                        (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  TeamStatsIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          NewValue                       (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::ClientUpdateTeamStats(unsigned char TeamNum, unsigned char TeamStatsIndex, float NewValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ClientUpdateTeamStats");

	AUTPlayerController_ClientUpdateTeamStats_Params params;
	params.TeamNum = TeamNum;
	params.TeamStatsIndex = TeamStatsIndex;
	params.NewValue = NewValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ClientUpdateSkillRating
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FString                 MatchRatingType                (Parm, ZeroConstructor)

void AUTPlayerController::ClientUpdateSkillRating(const struct FString& MatchRatingType)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ClientUpdateSkillRating");

	AUTPlayerController_ClientUpdateSkillRating_Params params;
	params.MatchRatingType = MatchRatingType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ClientUpdateScoreStats
// (Net, Native, Event, Public, NetClient)
// Parameters:
// class AUTPlayerState*          ViewedPS                       (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  StatsPage                      (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  StatsIndex                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          NewValue                       (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::ClientUpdateScoreStats(class AUTPlayerState* ViewedPS, unsigned char StatsPage, unsigned char StatsIndex, float NewValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ClientUpdateScoreStats");

	AUTPlayerController_ClientUpdateScoreStats_Params params;
	params.ViewedPS = ViewedPS;
	params.StatsPage = StatsPage;
	params.StatsIndex = StatsIndex;
	params.NewValue = NewValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ClientUpdateDamageDone
// (Net, Native, Event, Public, NetClient)
// Parameters:
// int                            DamageDone                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            RoundDamageDone                (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::ClientUpdateDamageDone(int DamageDone, int RoundDamageDone)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ClientUpdateDamageDone");

	AUTPlayerController_ClientUpdateDamageDone_Params params;
	params.DamageDone = DamageDone;
	params.RoundDamageDone = RoundDamageDone;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ClientToggleScoreboard
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// bool                           bShow                          (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::ClientToggleScoreboard(bool bShow)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ClientToggleScoreboard");

	AUTPlayerController_ClientToggleScoreboard_Params params;
	params.bShow = bShow;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ClientSwitchToBestWeapon
// (Net, NetReliable, Native, Event, Public, NetClient)

void AUTPlayerController::ClientSwitchToBestWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ClientSwitchToBestWeapon");

	AUTPlayerController_ClientSwitchToBestWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ClientStopKillcam
// (Net, NetReliable, Native, Event, Public, NetClient)

void AUTPlayerController::ClientStopKillcam()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ClientStopKillcam");

	AUTPlayerController_ClientStopKillcam_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ClientStartRally
// (Net, NetReliable, Native, Event, Public, HasDefaults, NetClient)
// Parameters:
// class AUTRallyPoint*           RallyTarget                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 NewRallyLocation               (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void AUTPlayerController::ClientStartRally(class AUTRallyPoint* RallyTarget, const struct FVector& NewRallyLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ClientStartRally");

	AUTPlayerController_ClientStartRally_Params params;
	params.RallyTarget = RallyTarget;
	params.NewRallyLocation = NewRallyLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ClientShowMapVote
// (Net, NetReliable, Native, Event, Public, NetClient)

void AUTPlayerController::ClientShowMapVote()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ClientShowMapVote");

	AUTPlayerController_ClientShowMapVote_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ClientReturnPing
// (Net, Native, Event, Public, NetClient)
// Parameters:
// float                          TimeStamp                      (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::ClientReturnPing(float TimeStamp)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ClientReturnPing");

	AUTPlayerController_ClientReturnPing_Params params;
	params.TimeStamp = TimeStamp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ClientReceivePersonalMessage
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class UClass*                  Message                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            Switch                         (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerState*            RelatedPlayerState_2           (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerState*            RelatedPlayerState_3           (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 OptionalObject                 (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::ClientReceivePersonalMessage(class UClass* Message, int Switch, class APlayerState* RelatedPlayerState_2, class APlayerState* RelatedPlayerState_3, class UObject* OptionalObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ClientReceivePersonalMessage");

	AUTPlayerController_ClientReceivePersonalMessage_Params params;
	params.Message = Message;
	params.Switch = Switch;
	params.RelatedPlayerState_2 = RelatedPlayerState_2;
	params.RelatedPlayerState_3 = RelatedPlayerState_3;
	params.OptionalObject = OptionalObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ClientQueueCoolMoment
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FUniqueNetIdRepl        NetId                          (Parm)
// float                          TimeToRewind                   (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::ClientQueueCoolMoment(const struct FUniqueNetIdRepl& NetId, float TimeToRewind)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ClientQueueCoolMoment");

	AUTPlayerController_ClientQueueCoolMoment_Params params;
	params.NetId = NetId;
	params.TimeToRewind = TimeToRewind;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ClientPumpkinPickedUp
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// float                          GainedAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          GoalAmount                     (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::ClientPumpkinPickedUp(float GainedAmount, float GoalAmount)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ClientPumpkinPickedUp");

	AUTPlayerController_ClientPumpkinPickedUp_Params params;
	params.GainedAmount = GainedAmount;
	params.GoalAmount = GoalAmount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ClientProgressRally
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// float                          Delay                          (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::ClientProgressRally(float Delay)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ClientProgressRally");

	AUTPlayerController_ClientProgressRally_Params params;
	params.Delay = Delay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ClientPrepareForLineUp
// (Net, NetReliable, Native, Event, Public, NetClient)

void AUTPlayerController::ClientPrepareForLineUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ClientPrepareForLineUp");

	AUTPlayerController_ClientPrepareForLineUp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ClientPrepareForIntermission
// (Net, NetReliable, Native, Event, Public, NetClient)

void AUTPlayerController::ClientPrepareForIntermission()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ClientPrepareForIntermission");

	AUTPlayerController_ClientPrepareForIntermission_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ClientPlayKillcam
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AController*             KillingController              (Parm, ZeroConstructor, IsPlainOldData)
// class APawn*                   PawnToFocus                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector_NetQuantize     FocusLoc                       (Parm)
// int                            FocusYaw                       (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::ClientPlayKillcam(class AController* KillingController, class APawn* PawnToFocus, const struct FVector_NetQuantize& FocusLoc, int FocusYaw)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ClientPlayKillcam");

	AUTPlayerController_ClientPlayKillcam_Params params;
	params.KillingController = KillingController;
	params.PawnToFocus = PawnToFocus;
	params.FocusLoc = FocusLoc;
	params.FocusYaw = FocusYaw;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ClientPlayInstantReplay
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class APawn*                   PawnToFocus                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          TimeToRewind                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          StartDelay                     (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::ClientPlayInstantReplay(class APawn* PawnToFocus, float TimeToRewind, float StartDelay)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ClientPlayInstantReplay");

	AUTPlayerController_ClientPlayInstantReplay_Params params;
	params.PawnToFocus = PawnToFocus;
	params.TimeToRewind = TimeToRewind;
	params.StartDelay = StartDelay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ClientPlayBadSelectionSound
// (Net, Native, Event, Public, NetClient)

void AUTPlayerController::ClientPlayBadSelectionSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ClientPlayBadSelectionSound");

	AUTPlayerController_ClientPlayBadSelectionSound_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ClientNotifyTakeHit
// (Net, Native, Event, Public, NetClient)
// Parameters:
// bool                           bFriendlyFire                  (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  ShotDirYaw                     (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  DamageTypeClass                (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::ClientNotifyTakeHit(bool bFriendlyFire, unsigned char Damage, unsigned char ShotDirYaw, class UClass* DamageTypeClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ClientNotifyTakeHit");

	AUTPlayerController_ClientNotifyTakeHit_Params params;
	params.bFriendlyFire = bFriendlyFire;
	params.Damage = Damage;
	params.ShotDirYaw = ShotDirYaw;
	params.DamageTypeClass = DamageTypeClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ClientNotifyCausedHit
// (Net, Native, Event, Public, NetClient)
// Parameters:
// class AActor*                  HitActor                       (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bArmorDamage                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bOverhealth                    (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::ClientNotifyCausedHit(class AActor* HitActor, unsigned char Damage, bool bArmorDamage, bool bOverhealth)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ClientNotifyCausedHit");

	AUTPlayerController_ClientNotifyCausedHit_Params params;
	params.HitActor = HitActor;
	params.Damage = Damage;
	params.bArmorDamage = bArmorDamage;
	params.bOverhealth = bOverhealth;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ClientLineUpIntroPlayerChange
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AUTPlayerState*          PlayerChanged                  (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::ClientLineUpIntroPlayerChange(class AUTPlayerState* PlayerChanged)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ClientLineUpIntroPlayerChange");

	AUTPlayerController_ClientLineUpIntroPlayerChange_Params params;
	params.PlayerChanged = PlayerChanged;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ClientHideMapVote
// (Net, NetReliable, Native, Event, Public, NetClient)

void AUTPlayerController::ClientHideMapVote()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ClientHideMapVote");

	AUTPlayerController_ClientHideMapVote_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ClientHearSound
// (Net, Native, Event, Public, NetClient)
// Parameters:
// class USoundBase*              TheSound                       (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  SoundPlayer                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector_NetQuantize     SoundLocation                  (Parm)
// bool                           bStopWhenOwnerDestroyed        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAmplifyVolume                 (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ESoundAmplificationType> AmpType                        (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::ClientHearSound(class USoundBase* TheSound, class AActor* SoundPlayer, const struct FVector_NetQuantize& SoundLocation, bool bStopWhenOwnerDestroyed, bool bAmplifyVolume, TEnumAsByte<ESoundAmplificationType> AmpType)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ClientHearSound");

	AUTPlayerController_ClientHearSound_Params params;
	params.TheSound = TheSound;
	params.SoundPlayer = SoundPlayer;
	params.SoundLocation = SoundLocation;
	params.bStopWhenOwnerDestroyed = bStopWhenOwnerDestroyed;
	params.bAmplifyVolume = bAmplifyVolume;
	params.AmpType = AmpType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ClientGotWeaponStayPickup
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AUTPickupWeapon*         Pickup                         (Parm, ZeroConstructor, IsPlainOldData)
// class APawn*                   TouchedBy                      (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::ClientGotWeaponStayPickup(class AUTPickupWeapon* Pickup, class APawn* TouchedBy)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ClientGotWeaponStayPickup");

	AUTPlayerController_ClientGotWeaponStayPickup_Params params;
	params.Pickup = Pickup;
	params.TouchedBy = TouchedBy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ClientDrawLine
// (Net, NetReliable, Native, Event, Public, HasDefaults, NetClient, Const)
// Parameters:
// struct FVector                 Start                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 End                            (Parm, ZeroConstructor, IsPlainOldData)
// struct FColor                  Color                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::ClientDrawLine(const struct FVector& Start, const struct FVector& End, const struct FColor& Color, float Duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ClientDrawLine");

	AUTPlayerController_ClientDrawLine_Params params;
	params.Start = Start;
	params.End = End;
	params.Color = Color;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ClientDebugRewind
// (Net, Native, Event, Public, NetClient)
// Parameters:
// struct FVector_NetQuantize     TargetLocation                 (Parm)
// struct FVector_NetQuantize     RewindLocation                 (Parm)
// struct FVector_NetQuantize     PrePosition                    (Parm)
// struct FVector_NetQuantize     PostPosition                   (Parm)
// float                          TargetCapsuleHeight            (Parm, ZeroConstructor, IsPlainOldData)
// float                          PredictionTime                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          Percent                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bTeleported                    (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::ClientDebugRewind(const struct FVector_NetQuantize& TargetLocation, const struct FVector_NetQuantize& RewindLocation, const struct FVector_NetQuantize& PrePosition, const struct FVector_NetQuantize& PostPosition, float TargetCapsuleHeight, float PredictionTime, float Percent, bool bTeleported)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ClientDebugRewind");

	AUTPlayerController_ClientDebugRewind_Params params;
	params.TargetLocation = TargetLocation;
	params.RewindLocation = RewindLocation;
	params.PrePosition = PrePosition;
	params.PostPosition = PostPosition;
	params.TargetCapsuleHeight = TargetCapsuleHeight;
	params.PredictionTime = PredictionTime;
	params.Percent = Percent;
	params.bTeleported = bTeleported;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ClientCompleteRally
// (Net, NetReliable, Native, Event, Public, NetClient)

void AUTPlayerController::ClientCompleteRally()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ClientCompleteRally");

	AUTPlayerController_ClientCompleteRally_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ClientBackendNotify
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FString                 TypeStr                        (Parm, ZeroConstructor)
// struct FString                 Data                           (Parm, ZeroConstructor)

void AUTPlayerController::ClientBackendNotify(const struct FString& TypeStr, const struct FString& Data)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ClientBackendNotify");

	AUTPlayerController_ClientBackendNotify_Params params;
	params.TypeStr = TypeStr;
	params.Data = Data;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ClientAnnounceRoundScore
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AUTTeamInfo*             WinningTeam                    (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerState*            ScoringPlayer                  (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  RoundBonus                     (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  Reason                         (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::ClientAnnounceRoundScore(class AUTTeamInfo* WinningTeam, class APlayerState* ScoringPlayer, unsigned char RoundBonus, unsigned char Reason)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ClientAnnounceRoundScore");

	AUTPlayerController_ClientAnnounceRoundScore_Params params;
	params.WinningTeam = WinningTeam;
	params.ScoringPlayer = ScoringPlayer;
	params.RoundBonus = RoundBonus;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ClearTokens
// (Final, Exec, Native, Public)

void AUTPlayerController::ClearTokens()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ClearTokens");

	AUTPlayerController_ClearTokens_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ChangeTeam
// (Exec, Native, Protected)
// Parameters:
// unsigned char                  NewTeamIndex                   (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::ChangeTeam(unsigned char NewTeamIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ChangeTeam");

	AUTPlayerController_ChangeTeam_Params params;
	params.NewTeamIndex = NewTeamIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.BehindView
// (Exec, Native, Public)
// Parameters:
// bool                           bWantBehindView                (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerController::BehindView(bool bWantBehindView)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.BehindView");

	AUTPlayerController_BehindView_Params params;
	params.bWantBehindView = bWantBehindView;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerController.ActivateSpecial
// (Final, Native, Protected)

void AUTPlayerController::ActivateSpecial()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerController.ActivateSpecial");

	AUTPlayerController_ActivateSpecial_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTAnnouncer.StartNextAnnouncement
// (Native, Public)
// Parameters:
// bool                           bUseSpacing                    (Parm, ZeroConstructor, IsPlainOldData)

void UUTAnnouncer::StartNextAnnouncement(bool bUseSpacing)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTAnnouncer.StartNextAnnouncement");

	UUTAnnouncer_StartNextAnnouncement_Params params;
	params.bUseSpacing = bUseSpacing;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTAnnouncer.PrecacheAnnouncement
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   SoundName                      (Parm, ZeroConstructor, IsPlainOldData)

void UUTAnnouncer::PrecacheAnnouncement(const struct FName& SoundName)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTAnnouncer.PrecacheAnnouncement");

	UUTAnnouncer_PrecacheAnnouncement_Params params;
	params.SoundName = SoundName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTAnnouncer.PlayNextAnnouncement
// (Native, Public, BlueprintCallable)

void UUTAnnouncer::PlayNextAnnouncement()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTAnnouncer.PlayNextAnnouncement");

	UUTAnnouncer_PlayNextAnnouncement_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTAnnouncer.PlayAnnouncement
// (Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  MessageClass                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            Switch                         (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerState*            PlayerState1                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class APlayerState*            PlayerState2                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 OptionalObject                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UUTAnnouncer::PlayAnnouncement(class UClass* MessageClass, int Switch, class APlayerState* PlayerState1, class APlayerState* PlayerState2, class UObject* OptionalObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTAnnouncer.PlayAnnouncement");

	UUTAnnouncer_PlayAnnouncement_Params params;
	params.MessageClass = MessageClass;
	params.Switch = Switch;
	params.PlayerState1 = PlayerState1;
	params.PlayerState2 = PlayerState2;
	params.OptionalObject = OptionalObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTAnnouncer.AnnouncementFinished
// (Native, Protected)

void UUTAnnouncer::AnnouncementFinished()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTAnnouncer.AnnouncementFinished");

	UUTAnnouncer_AnnouncementFinished_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTAvoidMarker.OnOverlapBegin
// (Native, Public, HasOutParms)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AUTAvoidMarker::OnOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTAvoidMarker.OnOverlapBegin");

	AUTAvoidMarker_OnOverlapBegin_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGib.OnPhysicsCollision
// (Native, Public, HasOutParms, HasDefaults)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FVector                 NormalImpulse                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AUTGib::OnPhysicsCollision(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGib.OnPhysicsCollision");

	AUTGib_OnPhysicsCollision_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTDamageType.ShouldGib
// (BlueprintCosmetic, Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class AUTCharacter*            Victim                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUTDamageType::ShouldGib(class AUTCharacter* Victim)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTDamageType.ShouldGib");

	UUTDamageType_ShouldGib_Params params;
	params.Victim = Victim;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTDamageType.ScoreKill
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class AUTPlayerState*          KillerState                    (Parm, ZeroConstructor, IsPlainOldData)
// class AUTPlayerState*          VictimState                    (Parm, ZeroConstructor, IsPlainOldData)
// class APawn*                   KilledPawn                     (Parm, ZeroConstructor, IsPlainOldData)

void UUTDamageType::ScoreKill(class AUTPlayerState* KillerState, class AUTPlayerState* VictimState, class APawn* KilledPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTDamageType.ScoreKill");

	UUTDamageType_ScoreKill_Params params;
	params.KillerState = KillerState;
	params.VictimState = VictimState;
	params.KilledPawn = KilledPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTDamageType.PlayHitEffects
// (BlueprintCosmetic, Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class AUTCharacter*            HitPawn                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bPlayedArmorEffect             (Parm, ZeroConstructor, IsPlainOldData)

void UUTDamageType::PlayHitEffects(class AUTCharacter* HitPawn, bool bPlayedArmorEffect)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTDamageType.PlayHitEffects");

	UUTDamageType_PlayHitEffects_Params params;
	params.HitPawn = HitPawn;
	params.bPlayedArmorEffect = bPlayedArmorEffect;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTDamageType.PlayGibEffects
// (BlueprintCosmetic, Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class AUTGib*                  Gib                            (Parm, ZeroConstructor, IsPlainOldData)

void UUTDamageType::PlayGibEffects(class AUTGib* Gib)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTDamageType.PlayGibEffects");

	UUTDamageType_PlayGibEffects_Params params;
	params.Gib = Gib;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTDamageType.PlayDeathEffects
// (BlueprintCosmetic, Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class AUTCharacter*            DyingPawn                      (Parm, ZeroConstructor, IsPlainOldData)

void UUTDamageType::PlayDeathEffects(class AUTCharacter* DyingPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTDamageType.PlayDeathEffects");

	UUTDamageType_PlayDeathEffects_Params params;
	params.DyingPawn = DyingPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTDamageType.OverrideDeathSound
// (BlueprintCosmetic, Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class AUTCharacter*            Victim                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUTDamageType::OverrideDeathSound(class AUTCharacter* Victim)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTDamageType.OverrideDeathSound");

	UUTDamageType_OverrideDeathSound_Params params;
	params.Victim = Victim;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTDamageType.GetDeathAnim
// (BlueprintCosmetic, Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class AUTCharacter*            DyingPawn                      (Parm, ZeroConstructor, IsPlainOldData)
// class UAnimMontage*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAnimMontage* UUTDamageType::GetDeathAnim(class AUTCharacter* DyingPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTDamageType.GetDeathAnim");

	UUTDamageType_GetDeathAnim_Params params;
	params.DyingPawn = DyingPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTCosmetic.SetBodiesToSimulatePhysics
// (Native, Public, BlueprintCallable)

void AUTCosmetic::SetBodiesToSimulatePhysics()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCosmetic.SetBodiesToSimulatePhysics");

	AUTCosmetic_SetBodiesToSimulatePhysics_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCosmetic.OverrideGib
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// struct FName                   BoneName                       (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* AUTCosmetic::OverrideGib(const struct FName& BoneName)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCosmetic.OverrideGib");

	AUTCosmetic_OverrideGib_Params params;
	params.BoneName = BoneName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTCosmetic.OnWearerHeadshot
// (Native, Event, Public, BlueprintEvent)

void AUTCosmetic::OnWearerHeadshot()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCosmetic.OnWearerHeadshot");

	AUTCosmetic_OnWearerHeadshot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCosmetic.OnWearerEmoteStarted
// (Event, Public, BlueprintEvent)

void AUTCosmetic::OnWearerEmoteStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCosmetic.OnWearerEmoteStarted");

	AUTCosmetic_OnWearerEmoteStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCosmetic.OnWearerEmoteEnded
// (Event, Public, BlueprintEvent)

void AUTCosmetic::OnWearerEmoteEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCosmetic.OnWearerEmoteEnded");

	AUTCosmetic_OnWearerEmoteEnded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCosmetic.OnWearerDeath
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UClass*                  DamageType                     (Parm, ZeroConstructor, IsPlainOldData)

void AUTCosmetic::OnWearerDeath(class UClass* DamageType)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCosmetic.OnWearerDeath");

	AUTCosmetic_OnWearerDeath_Params params;
	params.DamageType = DamageType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCosmetic.OnVariantSelected
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// int                            Variant                        (Parm, ZeroConstructor, IsPlainOldData)

void AUTCosmetic::OnVariantSelected(int Variant)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCosmetic.OnVariantSelected");

	AUTCosmetic_OnVariantSelected_Params params;
	params.Variant = Variant;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCosmetic.OnSpreeLevelChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            NewSpreeLevel                  (Parm, ZeroConstructor, IsPlainOldData)

void AUTCosmetic::OnSpreeLevelChanged(int NewSpreeLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCosmetic.OnSpreeLevelChanged");

	AUTCosmetic_OnSpreeLevelChanged_Params params;
	params.NewSpreeLevel = NewSpreeLevel;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCosmetic.OnFlashCountIncremented
// (Event, Public, BlueprintEvent)

void AUTCosmetic::OnFlashCountIncremented()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCosmetic.OnFlashCountIncremented");

	AUTCosmetic_OnFlashCountIncremented_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTHat.HeadshotRotationComplete
// (Final, Native, Public)

void AUTHat::HeadshotRotationComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHat.HeadshotRotationComplete");

	AUTHat_HeadshotRotationComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLocalMessage.ShouldCountInstances
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int                            MessageIndex                   (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 OptionalObject                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUTLocalMessage::ShouldCountInstances(int MessageIndex, class UObject* OptionalObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLocalMessage.ShouldCountInstances");

	UUTLocalMessage_ShouldCountInstances_Params params;
	params.MessageIndex = MessageIndex;
	params.OptionalObject = OptionalObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTLocalMessage.ResolveMessage
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int                            Switch                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bTargetsPlayerState1           (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerState*            RelatedPlayerState_2           (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerState*            RelatedPlayerState_3           (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 OptionalObject                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UUTLocalMessage::ResolveMessage(int Switch, bool bTargetsPlayerState1, class APlayerState* RelatedPlayerState_2, class APlayerState* RelatedPlayerState_3, class UObject* OptionalObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLocalMessage.ResolveMessage");

	UUTLocalMessage_ResolveMessage_Params params;
	params.Switch = Switch;
	params.bTargetsPlayerState1 = bTargetsPlayerState1;
	params.RelatedPlayerState_2 = RelatedPlayerState_2;
	params.RelatedPlayerState_3 = RelatedPlayerState_3;
	params.OptionalObject = OptionalObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTLocalMessage.PrecacheAnnouncements
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class UUTAnnouncer*            Announcer                      (Parm, ZeroConstructor, IsPlainOldData)

void UUTLocalMessage::PrecacheAnnouncements(class UUTAnnouncer* Announcer)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLocalMessage.PrecacheAnnouncements");

	UUTLocalMessage_PrecacheAnnouncements_Params params;
	params.Announcer = Announcer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLocalMessage.OnClientReceive
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class APlayerController*       LocalPC                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            Switch                         (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerState*            RelatedPlayerState_2           (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerState*            RelatedPlayerState_3           (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 OptionalObject                 (Parm, ZeroConstructor, IsPlainOldData)

void UUTLocalMessage::OnClientReceive(class APlayerController* LocalPC, int Switch, class APlayerState* RelatedPlayerState_2, class APlayerState* RelatedPlayerState_3, class UObject* OptionalObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLocalMessage.OnClientReceive");

	UUTLocalMessage_OnClientReceive_Params params;
	params.LocalPC = LocalPC;
	params.Switch = Switch;
	params.RelatedPlayerState_2 = RelatedPlayerState_2;
	params.RelatedPlayerState_3 = RelatedPlayerState_3;
	params.OptionalObject = OptionalObject;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLocalMessage.OnAnnouncementPlayed
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// int                            Switch                         (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 OptionalObject                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UUTLocalMessage::OnAnnouncementPlayed(int Switch, class UObject* OptionalObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLocalMessage.OnAnnouncementPlayed");

	UUTLocalMessage_OnAnnouncementPlayed_Params params;
	params.Switch = Switch;
	params.OptionalObject = OptionalObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLocalMessage.InterruptAnnouncement
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int                            Switch                         (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 OptionalObject                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  OtherMessageClass              (Parm, ZeroConstructor, IsPlainOldData)
// int                            OtherSwitch                    (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 OtherOptionalObject            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUTLocalMessage::InterruptAnnouncement(int Switch, class UObject* OptionalObject, class UClass* OtherMessageClass, int OtherSwitch, class UObject* OtherOptionalObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLocalMessage.InterruptAnnouncement");

	UUTLocalMessage_InterruptAnnouncement_Params params;
	params.Switch = Switch;
	params.OptionalObject = OptionalObject;
	params.OtherMessageClass = OtherMessageClass;
	params.OtherSwitch = OtherSwitch;
	params.OtherOptionalObject = OtherOptionalObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTLocalMessage.GetText
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            Switch                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bTargetsPlayerState1           (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerState*            RelatedPlayerState_2           (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerState*            RelatedPlayerState_3           (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 OptionalObject                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UUTLocalMessage::GetText(int Switch, bool bTargetsPlayerState1, class APlayerState* RelatedPlayerState_2, class APlayerState* RelatedPlayerState_3, class UObject* OptionalObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLocalMessage.GetText");

	UUTLocalMessage_GetText_Params params;
	params.Switch = Switch;
	params.bTargetsPlayerState1 = bTargetsPlayerState1;
	params.RelatedPlayerState_2 = RelatedPlayerState_2;
	params.RelatedPlayerState_3 = RelatedPlayerState_3;
	params.OptionalObject = OptionalObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTLocalMessage.GetScaleInTime
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int                            MessageIndex                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UUTLocalMessage::GetScaleInTime(int MessageIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLocalMessage.GetScaleInTime");

	UUTLocalMessage_GetScaleInTime_Params params;
	params.MessageIndex = MessageIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTLocalMessage.GetScaleInSize
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int                            MessageIndex                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UUTLocalMessage::GetScaleInSize(int MessageIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLocalMessage.GetScaleInSize");

	UUTLocalMessage_GetScaleInSize_Params params;
	params.MessageIndex = MessageIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTLocalMessage.GetMessageColor
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int                            MessageIndex                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FLinearColor UUTLocalMessage::GetMessageColor(int MessageIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLocalMessage.GetMessageColor");

	UUTLocalMessage_GetMessageColor_Params params;
	params.MessageIndex = MessageIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTLocalMessage.GetLifeTime
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            Switch                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UUTLocalMessage::GetLifeTime(int Switch)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLocalMessage.GetLifeTime");

	UUTLocalMessage_GetLifeTime_Params params;
	params.Switch = Switch;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTLocalMessage.GetAnnouncementUMGClassname
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            Switch                         (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 OptionalObject                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UUTLocalMessage::GetAnnouncementUMGClassname(int Switch, class UObject* OptionalObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLocalMessage.GetAnnouncementUMGClassname");

	UUTLocalMessage_GetAnnouncementUMGClassname_Params params;
	params.Switch = Switch;
	params.OptionalObject = OptionalObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTLocalMessage.GetAnnouncementSpacing
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int                            Switch                         (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 OptionalObject                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UUTLocalMessage::GetAnnouncementSpacing(int Switch, class UObject* OptionalObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLocalMessage.GetAnnouncementSpacing");

	UUTLocalMessage_GetAnnouncementSpacing_Params params;
	params.Switch = Switch;
	params.OptionalObject = OptionalObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTLocalMessage.GetAnnouncementSound
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int                            Switch                         (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 OptionalObject                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class USoundBase*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class USoundBase* UUTLocalMessage::GetAnnouncementSound(int Switch, class UObject* OptionalObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLocalMessage.GetAnnouncementSound");

	UUTLocalMessage_GetAnnouncementSound_Params params;
	params.Switch = Switch;
	params.OptionalObject = OptionalObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTLocalMessage.GetAnnouncementName
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int                            Switch                         (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 OptionalObject                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class APlayerState*            RelatedPlayerState_2           (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class APlayerState*            RelatedPlayerState_3           (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName UUTLocalMessage::GetAnnouncementName(int Switch, class UObject* OptionalObject, class APlayerState* RelatedPlayerState_2, class APlayerState* RelatedPlayerState_3)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLocalMessage.GetAnnouncementName");

	UUTLocalMessage_GetAnnouncementName_Params params;
	params.Switch = Switch;
	params.OptionalObject = OptionalObject;
	params.RelatedPlayerState_2 = RelatedPlayerState_2;
	params.RelatedPlayerState_3 = RelatedPlayerState_3;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTLocalMessage.CancelByAnnouncement
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int                            Switch                         (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 OptionalObject                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  OtherMessageClass              (Parm, ZeroConstructor, IsPlainOldData)
// int                            OtherSwitch                    (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 OtherOptionalObject            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUTLocalMessage::CancelByAnnouncement(int Switch, class UObject* OptionalObject, class UClass* OtherMessageClass, int OtherSwitch, class UObject* OtherOptionalObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLocalMessage.CancelByAnnouncement");

	UUTLocalMessage_CancelByAnnouncement_Params params;
	params.Switch = Switch;
	params.OptionalObject = OptionalObject;
	params.OtherMessageClass = OtherMessageClass;
	params.OtherSwitch = OtherSwitch;
	params.OtherOptionalObject = OtherOptionalObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTLocalMessage.Blueprint_GetText
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// int                            Switch                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bTargetsPlayerState1           (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerState*            RelatedPlayerState_2           (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerState*            RelatedPlayerState_3           (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 OptionalObject                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UUTLocalMessage::Blueprint_GetText(int Switch, bool bTargetsPlayerState1, class APlayerState* RelatedPlayerState_2, class APlayerState* RelatedPlayerState_3, class UObject* OptionalObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLocalMessage.Blueprint_GetText");

	UUTLocalMessage_Blueprint_GetText_Params params;
	params.Switch = Switch;
	params.bTargetsPlayerState1 = bTargetsPlayerState1;
	params.RelatedPlayerState_2 = RelatedPlayerState_2;
	params.RelatedPlayerState_3 = RelatedPlayerState_3;
	params.OptionalObject = OptionalObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTLocalMessage.Blueprint_GetLifeTime
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// int                            Switch                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UUTLocalMessage::Blueprint_GetLifeTime(int Switch)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLocalMessage.Blueprint_GetLifeTime");

	UUTLocalMessage_Blueprint_GetLifeTime_Params params;
	params.Switch = Switch;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTResetInterface.Reset
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UUTResetInterface::Reset()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTResetInterface.Reset");

	UUTResetInterface_Reset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameVolume.ScriptGetTeamNum
// (Event, Public, BlueprintEvent)
// Parameters:
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

unsigned char AUTGameVolume::ScriptGetTeamNum()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameVolume.ScriptGetTeamNum");

	AUTGameVolume_ScriptGetTeamNum_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTPlayerState.UpdateWeaponSkinPrefFromProfile
// (Native, Public)
// Parameters:
// class AUTWeapon*               Weapon                         (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerState::UpdateWeaponSkinPrefFromProfile(class AUTWeapon* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.UpdateWeaponSkinPrefFromProfile");

	AUTPlayerState_UpdateWeaponSkinPrefFromProfile_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.SetRemainingBoosts
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// unsigned char                  NewRemainingBoosts             (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerState::SetRemainingBoosts(unsigned char NewRemainingBoosts)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.SetRemainingBoosts");

	AUTPlayerState_SetRemainingBoosts_Params params;
	params.NewRemainingBoosts = NewRemainingBoosts;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.SetCharacterVoice
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 CharacterVoicePath             (Parm, ZeroConstructor)

void AUTPlayerState::SetCharacterVoice(const struct FString& CharacterVoicePath)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.SetCharacterVoice");

	AUTPlayerState_SetCharacterVoice_Params params;
	params.CharacterVoicePath = CharacterVoicePath;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.SetCharacter
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 CharacterPath                  (Parm, ZeroConstructor)

void AUTPlayerState::SetCharacter(const struct FString& CharacterPath)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.SetCharacter");

	AUTPlayerState_SetCharacter_Params params;
	params.CharacterPath = CharacterPath;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.SetCarriedObject
// (Native, Public)
// Parameters:
// class AUTCarriedObject*        NewCarriedObject               (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerState::SetCarriedObject(class AUTCarriedObject* NewCarriedObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.SetCarriedObject");

	AUTPlayerState_SetCarriedObject_Params params;
	params.NewCarriedObject = NewCarriedObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.ServerSlowerEmote
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AUTPlayerState::ServerSlowerEmote()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.ServerSlowerEmote");

	AUTPlayerState_ServerSlowerEmote_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.ServerSetEmoteSpeed
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                          NewEmoteSpeed                  (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerState::ServerSetEmoteSpeed(float NewEmoteSpeed)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.ServerSetEmoteSpeed");

	AUTPlayerState_ServerSetEmoteSpeed_Params params;
	params.NewEmoteSpeed = NewEmoteSpeed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.ServerSetCharacter
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// struct FString                 CharacterPath                  (Parm, ZeroConstructor)

void AUTPlayerState::ServerSetCharacter(const struct FString& CharacterPath)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.ServerSetCharacter");

	AUTPlayerState_ServerSetCharacter_Params params;
	params.CharacterPath = CharacterPath;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.ServerSetBoostItem
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            PowerupIndex                   (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerState::ServerSetBoostItem(int PowerupIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.ServerSetBoostItem");

	AUTPlayerState_ServerSetBoostItem_Params params;
	params.PowerupIndex = PowerupIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.ServerRequestChangeTeam
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// unsigned char                  NewTeamIndex                   (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerState::ServerRequestChangeTeam(unsigned char NewTeamIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.ServerRequestChangeTeam");

	AUTPlayerState_ServerRequestChangeTeam_Params params;
	params.NewTeamIndex = NewTeamIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.ServerReceiveWeaponSkin
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FString                 NewWeaponSkin                  (Parm, ZeroConstructor)

void AUTPlayerState::ServerReceiveWeaponSkin(const struct FString& NewWeaponSkin)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.ServerReceiveWeaponSkin");

	AUTPlayerState_ServerReceiveWeaponSkin_Params params;
	params.NewWeaponSkin = NewWeaponSkin;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.ServerReceiveTauntClass
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FString                 NewTauntClass                  (Parm, ZeroConstructor)

void AUTPlayerState::ServerReceiveTauntClass(const struct FString& NewTauntClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.ServerReceiveTauntClass");

	AUTPlayerState_ServerReceiveTauntClass_Params params;
	params.NewTauntClass = NewTauntClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.ServerReceiveTaunt2Class
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FString                 NewTauntClass                  (Parm, ZeroConstructor)

void AUTPlayerState::ServerReceiveTaunt2Class(const struct FString& NewTauntClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.ServerReceiveTaunt2Class");

	AUTPlayerState_ServerReceiveTaunt2Class_Params params;
	params.NewTauntClass = NewTauntClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.ServerReceiveLeaderHatClass
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FString                 NewLeaderHatClass              (Parm, ZeroConstructor)

void AUTPlayerState::ServerReceiveLeaderHatClass(const struct FString& NewLeaderHatClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.ServerReceiveLeaderHatClass");

	AUTPlayerState_ServerReceiveLeaderHatClass_Params params;
	params.NewLeaderHatClass = NewLeaderHatClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.ServerReceiveIntroClass
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FString                 NewIntroClass                  (Parm, ZeroConstructor)

void AUTPlayerState::ServerReceiveIntroClass(const struct FString& NewIntroClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.ServerReceiveIntroClass");

	AUTPlayerState_ServerReceiveIntroClass_Params params;
	params.NewIntroClass = NewIntroClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.ServerReceiveHatVariant
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            NewVariant                     (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerState::ServerReceiveHatVariant(int NewVariant)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.ServerReceiveHatVariant");

	AUTPlayerState_ServerReceiveHatVariant_Params params;
	params.NewVariant = NewVariant;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.ServerReceiveHatClass
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FString                 NewHatClass                    (Parm, ZeroConstructor)

void AUTPlayerState::ServerReceiveHatClass(const struct FString& NewHatClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.ServerReceiveHatClass");

	AUTPlayerState_ServerReceiveHatClass_Params params;
	params.NewHatClass = NewHatClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.ServerReceiveGroupTauntClass
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FString                 NewGroupTauntClass             (Parm, ZeroConstructor)

void AUTPlayerState::ServerReceiveGroupTauntClass(const struct FString& NewGroupTauntClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.ServerReceiveGroupTauntClass");

	AUTPlayerState_ServerReceiveGroupTauntClass_Params params;
	params.NewGroupTauntClass = NewGroupTauntClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.ServerReceiveEyewearVariant
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            NewVariant                     (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerState::ServerReceiveEyewearVariant(int NewVariant)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.ServerReceiveEyewearVariant");

	AUTPlayerState_ServerReceiveEyewearVariant_Params params;
	params.NewVariant = NewVariant;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.ServerReceiveEyewearClass
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FString                 NewEyewearClass                (Parm, ZeroConstructor)

void AUTPlayerState::ServerReceiveEyewearClass(const struct FString& NewEyewearClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.ServerReceiveEyewearClass");

	AUTPlayerState_ServerReceiveEyewearClass_Params params;
	params.NewEyewearClass = NewEyewearClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.ServerNextChatDestination
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AUTPlayerState::ServerNextChatDestination()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.ServerNextChatDestination");

	AUTPlayerState_ServerNextChatDestination_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.ServerFasterEmote
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AUTPlayerState::ServerFasterEmote()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.ServerFasterEmote");

	AUTPlayerState_ServerFasterEmote_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.RegisterVote
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AUTReplicatedMapInfo*    VoteInfo                       (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerState::RegisterVote(class AUTReplicatedMapInfo* VoteInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.RegisterVote");

	AUTPlayerState_RegisterVote_Params params;
	params.VoteInfo = VoteInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.PlayTauntByIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            TauntIndex                     (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerState::PlayTauntByIndex(int TauntIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.PlayTauntByIndex");

	AUTPlayerState_PlayTauntByIndex_Params params;
	params.TauntIndex = TauntIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.PlayTauntByClass
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  TauntToPlay                    (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerState::PlayTauntByClass(class UClass* TauntToPlay)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.PlayTauntByClass");

	AUTPlayerState_PlayTauntByClass_Params params;
	params.TauntToPlay = TauntToPlay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.PlayGroupTaunt
// (Final, Native, Public, BlueprintCallable)

void AUTPlayerState::PlayGroupTaunt()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.PlayGroupTaunt");

	AUTPlayerState_PlayGroupTaunt_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.OnWeaponSpreeDamage
// (Final, Native, Public)

void AUTPlayerState::OnWeaponSpreeDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.OnWeaponSpreeDamage");

	AUTPlayerState_OnWeaponSpreeDamage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.OnRespawnWaitReceived
// (Final, Native, Public)

void AUTPlayerState::OnRespawnWaitReceived()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.OnRespawnWaitReceived");

	AUTPlayerState_OnRespawnWaitReceived_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.OnRepTaunt
// (Native, Public)

void AUTPlayerState::OnRepTaunt()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.OnRepTaunt");

	AUTPlayerState_OnRepTaunt_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.OnRepSpecialTeamPlayer
// (Native, Public)

void AUTPlayerState::OnRepSpecialTeamPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.OnRepSpecialTeamPlayer");

	AUTPlayerState_OnRepSpecialTeamPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.OnRepSpecialPlayer
// (Native, Public)

void AUTPlayerState::OnRepSpecialPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.OnRepSpecialPlayer");

	AUTPlayerState_OnRepSpecialPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.OnRepOverrideHat
// (Native, Public)

void AUTPlayerState::OnRepOverrideHat()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.OnRepOverrideHat");

	AUTPlayerState_OnRepOverrideHat_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.OnRepHatVariant
// (Native, Public)

void AUTPlayerState::OnRepHatVariant()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.OnRepHatVariant");

	AUTPlayerState_OnRepHatVariant_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.OnRepHatLeader
// (Native, Public)

void AUTPlayerState::OnRepHatLeader()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.OnRepHatLeader");

	AUTPlayerState_OnRepHatLeader_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.OnRepHat
// (Native, Public)

void AUTPlayerState::OnRepHat()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.OnRepHat");

	AUTPlayerState_OnRepHat_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.OnRepEyewearVariant
// (Native, Public)

void AUTPlayerState::OnRepEyewearVariant()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.OnRepEyewearVariant");

	AUTPlayerState_OnRepEyewearVariant_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.OnRepEyewear
// (Native, Public)

void AUTPlayerState::OnRepEyewear()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.OnRepEyewear");

	AUTPlayerState_OnRepEyewear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.OnRepEmoteSpeed
// (Native, Public)

void AUTPlayerState::OnRepEmoteSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.OnRepEmoteSpeed");

	AUTPlayerState_OnRepEmoteSpeed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.OnRep_HasHighScore
// (Final, Native, Public)

void AUTPlayerState::OnRep_HasHighScore()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.OnRep_HasHighScore");

	AUTPlayerState_OnRep_HasHighScore_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.OnRep_ActiveGroupTaunt
// (Native, Public)

void AUTPlayerState::OnRep_ActiveGroupTaunt()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.OnRep_ActiveGroupTaunt");

	AUTPlayerState_OnRep_ActiveGroupTaunt_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.OnPlayerCardUpdated
// (Final, Native, Public)

void AUTPlayerState::OnPlayerCardUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.OnPlayerCardUpdated");

	AUTPlayerState_OnPlayerCardUpdated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.OnPlayerCardLoadError
// (Final, Native, Protected)

void AUTPlayerState::OnPlayerCardLoadError()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.OnPlayerCardLoadError");

	AUTPlayerState_OnPlayerCardLoadError_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.OnPlayerCardLoadCompleted
// (Final, Native, Protected)

void AUTPlayerState::OnPlayerCardLoadCompleted()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.OnPlayerCardLoadCompleted");

	AUTPlayerState_OnPlayerCardLoadCompleted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.OnOutOfLives
// (Final, Native, Public)

void AUTPlayerState::OnOutOfLives()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.OnOutOfLives");

	AUTPlayerState_OnOutOfLives_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.OnDeathsReceived
// (Final, Native, Public)

void AUTPlayerState::OnDeathsReceived()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.OnDeathsReceived");

	AUTPlayerState_OnDeathsReceived_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.OnCarriedObjectChanged
// (Final, Native, Public)

void AUTPlayerState::OnCarriedObjectChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.OnCarriedObjectChanged");

	AUTPlayerState_OnCarriedObjectChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.NotifyTeamChanged
// (Native, Event, Public, BlueprintEvent)

void AUTPlayerState::NotifyTeamChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.NotifyTeamChanged");

	AUTPlayerState_NotifyTeamChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.NotIdle
// (Final, Native, Public)

void AUTPlayerState::NotIdle()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.NotIdle");

	AUTPlayerState_NotIdle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.IsOnlySpectator
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTPlayerState::IsOnlySpectator()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.IsOnlySpectator");

	AUTPlayerState_IsOnlySpectator_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTPlayerState.IsABeginner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AUTBaseGameMode*         DefaultGameMode                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTPlayerState::IsABeginner(class AUTBaseGameMode* DefaultGameMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.IsABeginner");

	AUTPlayerState_IsABeginner_Params params;
	params.DefaultGameMode = DefaultGameMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTPlayerState.IncrementKills
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  DamageType                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bEnemyKill                     (Parm, ZeroConstructor, IsPlainOldData)
// class AUTPlayerState*          VictimPS                       (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerState::IncrementKills(class UClass* DamageType, bool bEnemyKill, class AUTPlayerState* VictimPS)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.IncrementKills");

	AUTPlayerState_IncrementKills_Params params;
	params.DamageType = DamageType;
	params.bEnemyKill = bEnemyKill;
	params.VictimPS = VictimPS;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.IncrementKillAssists
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  DamageType                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bEnemyKill                     (Parm, ZeroConstructor, IsPlainOldData)
// class AUTPlayerState*          VictimPS                       (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerState::IncrementKillAssists(class UClass* DamageType, bool bEnemyKill, class AUTPlayerState* VictimPS)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.IncrementKillAssists");

	AUTPlayerState_IncrementKillAssists_Params params;
	params.DamageType = DamageType;
	params.bEnemyKill = bEnemyKill;
	params.VictimPS = VictimPS;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.IncrementDeaths
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  DamageType                     (Parm, ZeroConstructor, IsPlainOldData)
// class AUTPlayerState*          KillerPlayerState              (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerState::IncrementDeaths(class UClass* DamageType, class AUTPlayerState* KillerPlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.IncrementDeaths");

	AUTPlayerState_IncrementDeaths_Params params;
	params.DamageType = DamageType;
	params.KillerPlayerState = KillerPlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.HandleTeamChanged
// (Native, Public)
// Parameters:
// class AController*             Controller                     (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerState::HandleTeamChanged(class AController* Controller)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.HandleTeamChanged");

	AUTPlayerState_HandleTeamChanged_Params params;
	params.Controller = Controller;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.GetUTCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AUTCharacter*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AUTCharacter* AUTPlayerState::GetUTCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.GetUTCharacter");

	AUTPlayerState_GetUTCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTPlayerState.GetTeamNum
// (Native, Public, Const)
// Parameters:
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

unsigned char AUTPlayerState::GetTeamNum()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.GetTeamNum");

	AUTPlayerState_GetTeamNum_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTPlayerState.GetTeamInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AUTTeamInfo*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AUTTeamInfo* AUTPlayerState::GetTeamInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.GetTeamInfo");

	AUTPlayerState_GetTeamInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTPlayerState.GetStatsValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   StatsName                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AUTPlayerState::GetStatsValue(const struct FName& StatsName)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.GetStatsValue");

	AUTPlayerState_GetStatsValue_Params params;
	params.StatsName = StatsName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTPlayerState.GetRoundStatsValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   StatsName                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AUTPlayerState::GetRoundStatsValue(const struct FName& StatsName)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.GetRoundStatsValue");

	AUTPlayerState_GetRoundStatsValue_Params params;
	params.StatsName = StatsName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTPlayerState.GetRankCheck
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AUTBaseGameMode*         DefaultGame                    (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AUTPlayerState::GetRankCheck(class AUTBaseGameMode* DefaultGame)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.GetRankCheck");

	AUTPlayerState_GetRankCheck_Params params;
	params.DefaultGame = DefaultGame;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTPlayerState.GetPrevXP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AUTPlayerState::GetPrevXP()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.GetPrevXP");

	AUTPlayerState_GetPrevXP_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTPlayerState.GetBadgeFromELO
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AUTBaseGameMode*         DefaultGame                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRankedSession                 (Parm, ZeroConstructor, IsPlainOldData)
// int                            BadgeLevel                     (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// int                            SubLevel                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void AUTPlayerState::GetBadgeFromELO(class AUTBaseGameMode* DefaultGame, bool bRankedSession, int* BadgeLevel, int* SubLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.GetBadgeFromELO");

	AUTPlayerState_GetBadgeFromELO_Params params;
	params.DefaultGame = DefaultGame;
	params.bRankedSession = bRankedSession;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (BadgeLevel != nullptr)
		*BadgeLevel = params.BadgeLevel;
	if (SubLevel != nullptr)
		*SubLevel = params.SubLevel;
}


// Function UnrealTournament.UTPlayerState.ClientReceiveRconMessage
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FString                 Message                        (Parm, ZeroConstructor)

void AUTPlayerState::ClientReceiveRconMessage(const struct FString& Message)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.ClientReceiveRconMessage");

	AUTPlayerState_ClientReceiveRconMessage_Params params;
	params.Message = Message;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.ClearCarriedObject
// (Native, Public)
// Parameters:
// class AUTCarriedObject*        OldCarriedObject               (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerState::ClearCarriedObject(class AUTCarriedObject* OldCarriedObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.ClearCarriedObject");

	AUTPlayerState_ClearCarriedObject_Params params;
	params.OldCarriedObject = OldCarriedObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.ClampXP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            MaxValue                       (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerState::ClampXP(int MaxValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.ClampXP");

	AUTPlayerState_ClampXP_Params params;
	params.MaxValue = MaxValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.CanAwardOnlineXP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTPlayerState::CanAwardOnlineXP()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.CanAwardOnlineXP");

	AUTPlayerState_CanAwardOnlineXP_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTPlayerState.AdjustScore
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// int                            ScoreAdjustment                (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerState::AdjustScore(int ScoreAdjustment)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.AdjustScore");

	AUTPlayerState_AdjustScore_Params params;
	params.ScoreAdjustment = ScoreAdjustment;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.AddCoolFactorMinorEvent
// (Final, Native, Public)

void AUTPlayerState::AddCoolFactorMinorEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.AddCoolFactorMinorEvent");

	AUTPlayerState_AddCoolFactorMinorEvent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPlayerState.AddCoolFactorEvent
// (Final, Native, Public)
// Parameters:
// float                          CoolFactorAddition             (Parm, ZeroConstructor, IsPlainOldData)

void AUTPlayerState::AddCoolFactorEvent(float CoolFactorAddition)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPlayerState.AddCoolFactorEvent");

	AUTPlayerState_AddCoolFactorEvent_Params params;
	params.CoolFactorAddition = CoolFactorAddition;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBaseGameMode.GetHostId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString AUTBaseGameMode::GetHostId()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBaseGameMode.GetHostId");

	AUTBaseGameMode_GetHostId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTBaseGameMode.EvalBoolOptions
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FString                 InOpt                          (Parm, ZeroConstructor)
// bool                           Default                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTBaseGameMode::STATIC_EvalBoolOptions(const struct FString& InOpt, bool Default)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBaseGameMode.EvalBoolOptions");

	AUTBaseGameMode_EvalBoolOptions_Params params;
	params.InOpt = InOpt;
	params.Default = Default;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTBaseGameMode.AllowTextMessage
// (Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FString                 Msg                            (Parm, OutParm, ZeroConstructor)
// bool                           bIsTeamMessage                 (Parm, ZeroConstructor, IsPlainOldData)
// class AUTBasePlayerController* Sender                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTBaseGameMode::AllowTextMessage(bool bIsTeamMessage, class AUTBasePlayerController* Sender, struct FString* Msg)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBaseGameMode.AllowTextMessage");

	AUTBaseGameMode_AllowTextMessage_Params params;
	params.bIsTeamMessage = bIsTeamMessage;
	params.Sender = Sender;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Msg != nullptr)
		*Msg = params.Msg;

	return params.ReturnValue;
}


// Function UnrealTournament.UTServerBeaconClient.ServerRequestQuickplay
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FString                 MatchType                      (Parm, ZeroConstructor)
// int                            ELORank                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bBeginner                      (Parm, ZeroConstructor, IsPlainOldData)

void AUTServerBeaconClient::ServerRequestQuickplay(const struct FString& MatchType, int ELORank, bool bBeginner)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTServerBeaconClient.ServerRequestQuickplay");

	AUTServerBeaconClient_ServerRequestQuickplay_Params params;
	params.MatchType = MatchType;
	params.ELORank = ELORank;
	params.bBeginner = bBeginner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTServerBeaconClient.ServerRequestNextInstancePlayer
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            InstanceIndex                  (Parm, ZeroConstructor, IsPlainOldData)
// int                            LastInstancePlayersIndex       (Parm, ZeroConstructor, IsPlainOldData)

void AUTServerBeaconClient::ServerRequestNextInstancePlayer(int InstanceIndex, int LastInstancePlayersIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTServerBeaconClient.ServerRequestNextInstancePlayer");

	AUTServerBeaconClient_ServerRequestNextInstancePlayer_Params params;
	params.InstanceIndex = InstanceIndex;
	params.LastInstancePlayersIndex = LastInstancePlayersIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTServerBeaconClient.ServerRequestNextInstance
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            LastInstanceIndex              (Parm, ZeroConstructor, IsPlainOldData)

void AUTServerBeaconClient::ServerRequestNextInstance(int LastInstanceIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTServerBeaconClient.ServerRequestNextInstance");

	AUTServerBeaconClient_ServerRequestNextInstance_Params params;
	params.LastInstanceIndex = LastInstanceIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTServerBeaconClient.ServerRequestInstanceJoin
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FString                 InstanceId                     (Parm, ZeroConstructor)
// bool                           bSpectator                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            Rank                           (Parm, ZeroConstructor, IsPlainOldData)

void AUTServerBeaconClient::ServerRequestInstanceJoin(const struct FString& InstanceId, bool bSpectator, int Rank)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTServerBeaconClient.ServerRequestInstanceJoin");

	AUTServerBeaconClient_ServerRequestInstanceJoin_Params params;
	params.InstanceId = InstanceId;
	params.bSpectator = bSpectator;
	params.Rank = Rank;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTServerBeaconClient.ServerRequestInfo
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AUTServerBeaconClient::ServerRequestInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTServerBeaconClient.ServerRequestInfo");

	AUTServerBeaconClient_ServerRequestInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTServerBeaconClient.ServerPing
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AUTServerBeaconClient::ServerPing()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTServerBeaconClient.ServerPing");

	AUTServerBeaconClient_ServerPing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTServerBeaconClient.ClientWaitForQuickplay
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// uint32_t                       bNewInstance                   (Parm, ZeroConstructor, IsPlainOldData)

void AUTServerBeaconClient::ClientWaitForQuickplay(uint32_t bNewInstance)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTServerBeaconClient.ClientWaitForQuickplay");

	AUTServerBeaconClient_ClientWaitForQuickplay_Params params;
	params.bNewInstance = bNewInstance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTServerBeaconClient.ClientRequestInstanceResult
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// TEnumAsByte<EInstanceJoinResult> JoinResult                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 Params                         (Parm, ZeroConstructor)

void AUTServerBeaconClient::ClientRequestInstanceResult(TEnumAsByte<EInstanceJoinResult> JoinResult, const struct FString& Params)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTServerBeaconClient.ClientRequestInstanceResult");

	AUTServerBeaconClient_ClientRequestInstanceResult_Params params;
	params.JoinResult = JoinResult;
	params.Params = Params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTServerBeaconClient.ClientReceiveInstancePlayer
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// int                            InstanceIndex                  (Parm, ZeroConstructor, IsPlainOldData)
// int                            InInstancePlayersCount         (Parm, ZeroConstructor, IsPlainOldData)
// struct FMatchPlayerListStruct  inPlayerInfo                   (ConstParm, Parm, ReferenceParm)

void AUTServerBeaconClient::ClientReceiveInstancePlayer(int InstanceIndex, int InInstancePlayersCount, const struct FMatchPlayerListStruct& inPlayerInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTServerBeaconClient.ClientReceiveInstancePlayer");

	AUTServerBeaconClient_ClientReceiveInstancePlayer_Params params;
	params.InstanceIndex = InstanceIndex;
	params.InInstancePlayersCount = InInstancePlayersCount;
	params.inPlayerInfo = inPlayerInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTServerBeaconClient.ClientReceiveInstance
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// int                            InInstanceCount                (Parm, ZeroConstructor, IsPlainOldData)
// int                            TotalInstances                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FServerInstanceData     InstanceInfo                   (ConstParm, Parm, ReferenceParm)

void AUTServerBeaconClient::ClientReceiveInstance(int InInstanceCount, int TotalInstances, const struct FServerInstanceData& InstanceInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTServerBeaconClient.ClientReceiveInstance");

	AUTServerBeaconClient_ClientReceiveInstance_Params params;
	params.InInstanceCount = InInstanceCount;
	params.TotalInstances = TotalInstances;
	params.InstanceInfo = InstanceInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTServerBeaconClient.ClientReceiveInfo
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FServerBeaconInfo       ServerInfo                     (ConstParm, Parm)
// int                            NumInstances                   (Parm, ZeroConstructor, IsPlainOldData)

void AUTServerBeaconClient::ClientReceiveInfo(const struct FServerBeaconInfo& ServerInfo, int NumInstances)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTServerBeaconClient.ClientReceiveInfo");

	AUTServerBeaconClient_ClientReceiveInfo_Params params;
	params.ServerInfo = ServerInfo;
	params.NumInstances = NumInstances;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTServerBeaconClient.ClientReceivedAllInstancePlayers
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// int                            InstanceIndex                  (Parm, ZeroConstructor, IsPlainOldData)
// int                            FinalCount                     (Parm, ZeroConstructor, IsPlainOldData)

void AUTServerBeaconClient::ClientReceivedAllInstancePlayers(int InstanceIndex, int FinalCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTServerBeaconClient.ClientReceivedAllInstancePlayers");

	AUTServerBeaconClient_ClientReceivedAllInstancePlayers_Params params;
	params.InstanceIndex = InstanceIndex;
	params.FinalCount = FinalCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTServerBeaconClient.ClientReceivedAllInstance
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// int                            FinalCount                     (Parm, ZeroConstructor, IsPlainOldData)

void AUTServerBeaconClient::ClientReceivedAllInstance(int FinalCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTServerBeaconClient.ClientReceivedAllInstance");

	AUTServerBeaconClient_ClientReceivedAllInstance_Params params;
	params.FinalCount = FinalCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTServerBeaconClient.ClientQuickplayNotAvailable
// (Net, NetReliable, Native, Event, Public, NetClient)

void AUTServerBeaconClient::ClientQuickplayNotAvailable()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTServerBeaconClient.ClientQuickplayNotAvailable");

	AUTServerBeaconClient_ClientQuickplayNotAvailable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTServerBeaconClient.ClientPong
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// int                            inServerTickRate               (Parm, ZeroConstructor, IsPlainOldData)

void AUTServerBeaconClient::ClientPong(int inServerTickRate)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTServerBeaconClient.ClientPong");

	AUTServerBeaconClient_ClientPong_Params params;
	params.inServerTickRate = inServerTickRate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTServerBeaconClient.ClientJoinQuickplay
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FString                 InstanceGuid                   (Parm, ZeroConstructor)

void AUTServerBeaconClient::ClientJoinQuickplay(const struct FString& InstanceGuid)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTServerBeaconClient.ClientJoinQuickplay");

	AUTServerBeaconClient_ClientJoinQuickplay_Params params;
	params.InstanceGuid = InstanceGuid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTReplicatedMapInfo.OnRep_VoteCount
// (Native, Protected)

void AUTReplicatedMapInfo::OnRep_VoteCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTReplicatedMapInfo.OnRep_VoteCount");

	AUTReplicatedMapInfo_OnRep_VoteCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTReplicatedMapInfo.OnRep_MapScreenshotReference
// (Native, Protected)

void AUTReplicatedMapInfo::OnRep_MapScreenshotReference()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTReplicatedMapInfo.OnRep_MapScreenshotReference");

	AUTReplicatedMapInfo_OnRep_MapScreenshotReference_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTReplicatedMapInfo.OnRep_MapPackageName
// (Native, Protected)

void AUTReplicatedMapInfo::OnRep_MapPackageName()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTReplicatedMapInfo.OnRep_MapPackageName");

	AUTReplicatedMapInfo_OnRep_MapPackageName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTServerBeaconLobbyClient.Lobby_UpdatePlayer
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint32_t                       InstanceId                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FRemotePlayerInfo       PlayerInfo                     (Parm)
// bool                           bLastUpdate                    (Parm, ZeroConstructor, IsPlainOldData)

void AUTServerBeaconLobbyClient::Lobby_UpdatePlayer(uint32_t InstanceId, const struct FRemotePlayerInfo& PlayerInfo, bool bLastUpdate)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTServerBeaconLobbyClient.Lobby_UpdatePlayer");

	AUTServerBeaconLobbyClient_Lobby_UpdatePlayer_Params params;
	params.InstanceId = InstanceId;
	params.PlayerInfo = PlayerInfo;
	params.bLastUpdate = bLastUpdate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTServerBeaconLobbyClient.Lobby_UpdateMatch
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint32_t                       InstanceId                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FMatchUpdate            MatchUpdate                    (ConstParm, Parm, ReferenceParm)

void AUTServerBeaconLobbyClient::Lobby_UpdateMatch(uint32_t InstanceId, const struct FMatchUpdate& MatchUpdate)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTServerBeaconLobbyClient.Lobby_UpdateMatch");

	AUTServerBeaconLobbyClient_Lobby_UpdateMatch_Params params;
	params.InstanceId = InstanceId;
	params.MatchUpdate = MatchUpdate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTServerBeaconLobbyClient.Lobby_StartGame
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint32_t                       InstanceId                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FMatchUpdate            MatchUpdate                    (ConstParm, Parm, ReferenceParm)

void AUTServerBeaconLobbyClient::Lobby_StartGame(uint32_t InstanceId, const struct FMatchUpdate& MatchUpdate)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTServerBeaconLobbyClient.Lobby_StartGame");

	AUTServerBeaconLobbyClient_Lobby_StartGame_Params params;
	params.InstanceId = InstanceId;
	params.MatchUpdate = MatchUpdate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTServerBeaconLobbyClient.Lobby_RequestNextBanFromServer
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint32_t                       InstanceId                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            LastIndex                      (Parm, ZeroConstructor, IsPlainOldData)

void AUTServerBeaconLobbyClient::Lobby_RequestNextBanFromServer(uint32_t InstanceId, int LastIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTServerBeaconLobbyClient.Lobby_RequestNextBanFromServer");

	AUTServerBeaconLobbyClient_Lobby_RequestNextBanFromServer_Params params;
	params.InstanceId = InstanceId;
	params.LastIndex = LastIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTServerBeaconLobbyClient.Lobby_RequestFirstBanFromServer
// (Native, Public)
// Parameters:
// uint32_t                       InstanceId                     (Parm, ZeroConstructor, IsPlainOldData)

void AUTServerBeaconLobbyClient::Lobby_RequestFirstBanFromServer(uint32_t InstanceId)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTServerBeaconLobbyClient.Lobby_RequestFirstBanFromServer");

	AUTServerBeaconLobbyClient_Lobby_RequestFirstBanFromServer_Params params;
	params.InstanceId = InstanceId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTServerBeaconLobbyClient.Lobby_ReceiveUserMessage
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FString                 Message                        (Parm, ZeroConstructor)
// struct FString                 SenderName                     (Parm, ZeroConstructor)

void AUTServerBeaconLobbyClient::Lobby_ReceiveUserMessage(const struct FString& Message, const struct FString& SenderName)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTServerBeaconLobbyClient.Lobby_ReceiveUserMessage");

	AUTServerBeaconLobbyClient_Lobby_ReceiveUserMessage_Params params;
	params.Message = Message;
	params.SenderName = SenderName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTServerBeaconLobbyClient.Lobby_NotifyInstanceIsReady
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// uint32_t                       InstanceId                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FGuid                   InstanceGuid                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 MapName                        (Parm, ZeroConstructor)

void AUTServerBeaconLobbyClient::Lobby_NotifyInstanceIsReady(uint32_t InstanceId, const struct FGuid& InstanceGuid, const struct FString& MapName)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTServerBeaconLobbyClient.Lobby_NotifyInstanceIsReady");

	AUTServerBeaconLobbyClient_Lobby_NotifyInstanceIsReady_Params params;
	params.InstanceId = InstanceId;
	params.InstanceGuid = InstanceGuid;
	params.MapName = MapName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTServerBeaconLobbyClient.Lobby_IsDedicatedInstance
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FGuid                   InstanceGuid                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 InHubKey                       (Parm, ZeroConstructor)
// struct FString                 ServerName                     (Parm, ZeroConstructor)
// struct FString                 ServerGameMode                 (Parm, ZeroConstructor)
// struct FString                 ServerDescription              (Parm, ZeroConstructor)
// int                            MaxPlayers                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bTeamGame                      (Parm, ZeroConstructor, IsPlainOldData)

void AUTServerBeaconLobbyClient::Lobby_IsDedicatedInstance(const struct FGuid& InstanceGuid, const struct FString& InHubKey, const struct FString& ServerName, const struct FString& ServerGameMode, const struct FString& ServerDescription, int MaxPlayers, bool bTeamGame)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTServerBeaconLobbyClient.Lobby_IsDedicatedInstance");

	AUTServerBeaconLobbyClient_Lobby_IsDedicatedInstance_Params params;
	params.InstanceGuid = InstanceGuid;
	params.InHubKey = InHubKey;
	params.ServerName = ServerName;
	params.ServerGameMode = ServerGameMode;
	params.ServerDescription = ServerDescription;
	params.MaxPlayers = MaxPlayers;
	params.bTeamGame = bTeamGame;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTServerBeaconLobbyClient.Lobby_InstanceEmpty
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint32_t                       InstanceId                     (Parm, ZeroConstructor, IsPlainOldData)

void AUTServerBeaconLobbyClient::Lobby_InstanceEmpty(uint32_t InstanceId)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTServerBeaconLobbyClient.Lobby_InstanceEmpty");

	AUTServerBeaconLobbyClient_Lobby_InstanceEmpty_Params params;
	params.InstanceId = InstanceId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTServerBeaconLobbyClient.Lobby_EndGame
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint32_t                       InstanceId                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FMatchUpdate            MatchUpdate                    (ConstParm, Parm, ReferenceParm)

void AUTServerBeaconLobbyClient::Lobby_EndGame(uint32_t InstanceId, const struct FMatchUpdate& MatchUpdate)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTServerBeaconLobbyClient.Lobby_EndGame");

	AUTServerBeaconLobbyClient_Lobby_EndGame_Params params;
	params.InstanceId = InstanceId;
	params.MatchUpdate = MatchUpdate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTServerBeaconLobbyClient.Instance_ReceiveUserMessage
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FString                 TargetUniqueId                 (Parm, ZeroConstructor)
// struct FString                 Message                        (Parm, ZeroConstructor)

void AUTServerBeaconLobbyClient::Instance_ReceiveUserMessage(const struct FString& TargetUniqueId, const struct FString& Message)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTServerBeaconLobbyClient.Instance_ReceiveUserMessage");

	AUTServerBeaconLobbyClient_Instance_ReceiveUserMessage_Params params;
	params.TargetUniqueId = TargetUniqueId;
	params.Message = Message;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTServerBeaconLobbyClient.Instance_ReceiveBan
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FUniqueNetIdRepl        BanId                          (Parm)
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// int                            Total                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFinished                      (Parm, ZeroConstructor, IsPlainOldData)

void AUTServerBeaconLobbyClient::Instance_ReceiveBan(const struct FUniqueNetIdRepl& BanId, int Index, int Total, bool bFinished)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTServerBeaconLobbyClient.Instance_ReceiveBan");

	AUTServerBeaconLobbyClient_Instance_ReceiveBan_Params params;
	params.BanId = BanId;
	params.Index = Index;
	params.Total = Total;
	params.bFinished = bFinished;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTServerBeaconLobbyClient.Instance_ReceieveRconMessage
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FString                 TargetUniqueId                 (Parm, ZeroConstructor)
// struct FString                 AdminMessage                   (Parm, ZeroConstructor)

void AUTServerBeaconLobbyClient::Instance_ReceieveRconMessage(const struct FString& TargetUniqueId, const struct FString& AdminMessage)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTServerBeaconLobbyClient.Instance_ReceieveRconMessage");

	AUTServerBeaconLobbyClient_Instance_ReceieveRconMessage_Params params;
	params.TargetUniqueId = TargetUniqueId;
	params.AdminMessage = AdminMessage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTServerBeaconLobbyClient.Instance_Kick
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FString                 TargetUniqueId                 (Parm, ZeroConstructor)

void AUTServerBeaconLobbyClient::Instance_Kick(const struct FString& TargetUniqueId)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTServerBeaconLobbyClient.Instance_Kick");

	AUTServerBeaconLobbyClient_Instance_Kick_Params params;
	params.TargetUniqueId = TargetUniqueId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTServerBeaconLobbyClient.Instance_ForceShutdown
// (Net, NetReliable, Native, Event, Public, NetClient)

void AUTServerBeaconLobbyClient::Instance_ForceShutdown()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTServerBeaconLobbyClient.Instance_ForceShutdown");

	AUTServerBeaconLobbyClient_Instance_ForceShutdown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTServerBeaconLobbyClient.Instance_AuthorizeAdmin
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FString                 AdminId                        (Parm, ZeroConstructor)
// bool                           bIsAdmin                       (Parm, ZeroConstructor, IsPlainOldData)

void AUTServerBeaconLobbyClient::Instance_AuthorizeAdmin(const struct FString& AdminId, bool bIsAdmin)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTServerBeaconLobbyClient.Instance_AuthorizeAdmin");

	AUTServerBeaconLobbyClient_Instance_AuthorizeAdmin_Params params;
	params.AdminId = AdminId;
	params.bIsAdmin = bIsAdmin;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTServerBeaconLobbyClient.AuthorizeDedicatedInstance
// (Net, NetReliable, Native, Event, Public, HasDefaults, NetClient)
// Parameters:
// struct FGuid                   HubGuid                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            InstanceId                     (Parm, ZeroConstructor, IsPlainOldData)

void AUTServerBeaconLobbyClient::AuthorizeDedicatedInstance(const struct FGuid& HubGuid, int InstanceId)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTServerBeaconLobbyClient.AuthorizeDedicatedInstance");

	AUTServerBeaconLobbyClient_AuthorizeDedicatedInstance_Params params;
	params.HubGuid = HubGuid;
	params.InstanceId = InstanceId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameMode.TravelToNextMap
// (Native, Event, Public, BlueprintEvent)

void AUTGameMode::TravelToNextMap()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameMode.TravelToNextMap");

	AUTGameMode_TravelToNextMap_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameMode.SetWorldGravity
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                          NewGravity                     (Parm, ZeroConstructor, IsPlainOldData)

void AUTGameMode::SetWorldGravity(float NewGravity)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameMode.SetWorldGravity");

	AUTGameMode_SetWorldGravity_Params params;
	params.NewGravity = NewGravity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameMode.SetPlayerDefaults
// (Native, Public, BlueprintCallable)
// Parameters:
// class APawn*                   PlayerPawn                     (Parm, ZeroConstructor, IsPlainOldData)

void AUTGameMode::SetPlayerDefaults(class APawn* PlayerPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameMode.SetPlayerDefaults");

	AUTGameMode_SetPlayerDefaults_Params params;
	params.PlayerPawn = PlayerPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameMode.SetBotCount
// (Exec, Native, Public, BlueprintCallable)
// Parameters:
// unsigned char                  NewCount                       (Parm, ZeroConstructor, IsPlainOldData)

void AUTGameMode::SetBotCount(unsigned char NewCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameMode.SetBotCount");

	AUTGameMode_SetBotCount_Params params;
	params.NewCount = NewCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameMode.ScoreTeamKill
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)
// Parameters:
// class AController*             Killer                         (Parm, ZeroConstructor, IsPlainOldData)
// class AController*             Other                          (Parm, ZeroConstructor, IsPlainOldData)
// class APawn*                   KilledPawn                     (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  DamageType                     (Parm, ZeroConstructor, IsPlainOldData)

void AUTGameMode::ScoreTeamKill(class AController* Killer, class AController* Other, class APawn* KilledPawn, class UClass* DamageType)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameMode.ScoreTeamKill");

	AUTGameMode_ScoreTeamKill_Params params;
	params.Killer = Killer;
	params.Other = Other;
	params.KilledPawn = KilledPawn;
	params.DamageType = DamageType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameMode.ScorePickup
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)
// Parameters:
// class AUTPickup*               Pickup                         (Parm, ZeroConstructor, IsPlainOldData)
// class AUTPlayerState*          PickedUpBy                     (Parm, ZeroConstructor, IsPlainOldData)
// class AUTPlayerState*          LastPickedUpBy                 (Parm, ZeroConstructor, IsPlainOldData)

void AUTGameMode::ScorePickup(class AUTPickup* Pickup, class AUTPlayerState* PickedUpBy, class AUTPlayerState* LastPickedUpBy)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameMode.ScorePickup");

	AUTGameMode_ScorePickup_Params params;
	params.Pickup = Pickup;
	params.PickedUpBy = PickedUpBy;
	params.LastPickedUpBy = LastPickedUpBy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameMode.ScoreObject
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)
// Parameters:
// class AUTCarriedObject*        GameObject                     (Parm, ZeroConstructor, IsPlainOldData)
// class AUTCharacter*            HolderPawn                     (Parm, ZeroConstructor, IsPlainOldData)
// class AUTPlayerState*          Holder                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   Reason                         (Parm, ZeroConstructor, IsPlainOldData)

void AUTGameMode::ScoreObject(class AUTCarriedObject* GameObject, class AUTCharacter* HolderPawn, class AUTPlayerState* Holder, const struct FName& Reason)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameMode.ScoreObject");

	AUTGameMode_ScoreObject_Params params;
	params.GameObject = GameObject;
	params.HolderPawn = HolderPawn;
	params.Holder = Holder;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameMode.ScoreKill
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)
// Parameters:
// class AController*             Killer                         (Parm, ZeroConstructor, IsPlainOldData)
// class AController*             Other                          (Parm, ZeroConstructor, IsPlainOldData)
// class APawn*                   KilledPawn                     (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  DamageType                     (Parm, ZeroConstructor, IsPlainOldData)

void AUTGameMode::ScoreKill(class AController* Killer, class AController* Other, class APawn* KilledPawn, class UClass* DamageType)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameMode.ScoreKill");

	AUTGameMode_ScoreKill_Params params;
	params.Killer = Killer;
	params.Other = Other;
	params.KilledPawn = KilledPawn;
	params.DamageType = DamageType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameMode.ScoreDamage
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)
// Parameters:
// int                            DamageAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// class AUTPlayerState*          Victim                         (Parm, ZeroConstructor, IsPlainOldData)
// class AUTPlayerState*          Attacker                       (Parm, ZeroConstructor, IsPlainOldData)

void AUTGameMode::ScoreDamage(int DamageAmount, class AUTPlayerState* Victim, class AUTPlayerState* Attacker)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameMode.ScoreDamage");

	AUTGameMode_ScoreDamage_Params params;
	params.DamageAmount = DamageAmount;
	params.Victim = Victim;
	params.Attacker = Attacker;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameMode.PreventDeath
// (Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// class APawn*                   KilledPawn                     (Parm, ZeroConstructor, IsPlainOldData)
// class AController*             Killer                         (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  DamageType                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              HitInfo                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTGameMode::PreventDeath(class APawn* KilledPawn, class AController* Killer, class UClass* DamageType, const struct FHitResult& HitInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameMode.PreventDeath");

	AUTGameMode_PreventDeath_Params params;
	params.KilledPawn = KilledPawn;
	params.Killer = Killer;
	params.DamageType = DamageType;
	params.HitInfo = HitInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTGameMode.PostInitGame
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 Options                        (Parm, ZeroConstructor)

void AUTGameMode::PostInitGame(const struct FString& Options)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameMode.PostInitGame");

	AUTGameMode_PostInitGame_Params params;
	params.Options = Options;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameMode.PlayerCanAltRestart
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class APlayerController*       Player                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTGameMode::PlayerCanAltRestart(class APlayerController* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameMode.PlayerCanAltRestart");

	AUTGameMode_PlayerCanAltRestart_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTGameMode.OverridePickupQuery
// (BlueprintAuthorityOnly, Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// class APawn*                   Other                          (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  ItemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Pickup                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAllowPickup                   (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTGameMode::OverridePickupQuery(class APawn* Other, class UClass* ItemClass, class AActor* Pickup, bool* bAllowPickup)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameMode.OverridePickupQuery");

	AUTGameMode_OverridePickupQuery_Params params;
	params.Other = Other;
	params.ItemClass = ItemClass;
	params.Pickup = Pickup;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (bAllowPickup != nullptr)
		*bAllowPickup = params.bAllowPickup;

	return params.ReturnValue;
}


// Function UnrealTournament.UTGameMode.NotifyPlayerDefaultsSet
// (Event, Public, BlueprintEvent)
// Parameters:
// class APawn*                   PlayerPawn                     (Parm, ZeroConstructor, IsPlainOldData)

void AUTGameMode::NotifyPlayerDefaultsSet(class APawn* PlayerPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameMode.NotifyPlayerDefaultsSet");

	AUTGameMode_NotifyPlayerDefaultsSet_Params params;
	params.PlayerPawn = PlayerPawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameMode.ModifyDamage
// (Native, Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// int                            Damage                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector                 Momentum                       (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// class APawn*                   Injured                        (Parm, ZeroConstructor, IsPlainOldData)
// class AController*             InstigatedBy                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              HitInfo                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  DamageType                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTGameMode::ModifyDamage(class APawn* Injured, class AController* InstigatedBy, const struct FHitResult& HitInfo, class AActor* DamageCauser, class UClass* DamageType, int* Damage, struct FVector* Momentum)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameMode.ModifyDamage");

	AUTGameMode_ModifyDamage_Params params;
	params.Injured = Injured;
	params.InstigatedBy = InstigatedBy;
	params.HitInfo = HitInfo;
	params.DamageCauser = DamageCauser;
	params.DamageType = DamageType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Damage != nullptr)
		*Damage = params.Damage;
	if (Momentum != nullptr)
		*Momentum = params.Momentum;

	return params.ReturnValue;
}


// Function UnrealTournament.UTGameMode.KillBots
// (Exec, Native, Public, BlueprintCallable)

void AUTGameMode::KillBots()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameMode.KillBots");

	AUTGameMode_KillBots_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameMode.KickIdlePlayers
// (Final, Native, Public, BlueprintCallable)

void AUTGameMode::KickIdlePlayers()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameMode.KickIdlePlayers");

	AUTGameMode_KickIdlePlayers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameMode.IsThereAWinner
// (BlueprintAuthorityOnly, Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// bool                           bTied                          (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class AUTPlayerState*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AUTPlayerState* AUTGameMode::IsThereAWinner(bool* bTied)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameMode.IsThereAWinner");

	AUTGameMode_IsThereAWinner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (bTied != nullptr)
		*bTied = params.bTied;

	return params.ReturnValue;
}


// Function UnrealTournament.UTGameMode.IsPlayerIdle
// (Final, Native, Public)
// Parameters:
// class AUTPlayerState*          PS                             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTGameMode::IsPlayerIdle(class AUTPlayerState* PS)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameMode.IsPlayerIdle");

	AUTGameMode_IsPlayerIdle_Params params;
	params.PS = PS;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTGameMode.GetGood
// (Exec, Native, Public)

void AUTGameMode::GetGood()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameMode.GetGood");

	AUTGameMode_GetGood_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameMode.ForceAddNamedBot
// (Exec, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 BotName                        (Parm, ZeroConstructor)
// unsigned char                  TeamNum                        (Parm, ZeroConstructor, IsPlainOldData)
// class AUTBotPlayer*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AUTBotPlayer* AUTGameMode::ForceAddNamedBot(const struct FString& BotName, unsigned char TeamNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameMode.ForceAddNamedBot");

	AUTGameMode_ForceAddNamedBot_Params params;
	params.BotName = BotName;
	params.TeamNum = TeamNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTGameMode.ForceAddBot
// (Exec, Native, Public, BlueprintCallable)
// Parameters:
// unsigned char                  TeamNum                        (Parm, ZeroConstructor, IsPlainOldData)
// class AUTBotPlayer*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AUTBotPlayer* AUTGameMode::ForceAddBot(unsigned char TeamNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameMode.ForceAddBot");

	AUTGameMode_ForceAddBot_Params params;
	params.TeamNum = TeamNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTGameMode.EndGame
// (Native, Public, BlueprintCallable)
// Parameters:
// class AUTPlayerState*          Winner                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   Reason                         (Parm, ZeroConstructor, IsPlainOldData)

void AUTGameMode::EndGame(class AUTPlayerState* Winner, const struct FName& Reason)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameMode.EndGame");

	AUTGameMode_EndGame_Params params;
	params.Winner = Winner;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameMode.DiscardInventory
// (Native, Public, BlueprintCallable)
// Parameters:
// class APawn*                   Other                          (Parm, ZeroConstructor, IsPlainOldData)
// class AController*             Killer                         (Parm, ZeroConstructor, IsPlainOldData)

void AUTGameMode::DiscardInventory(class APawn* Other, class AController* Killer)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameMode.DiscardInventory");

	AUTGameMode_DiscardInventory_Params params;
	params.Other = Other;
	params.Killer = Killer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameMode.Demigod
// (Exec, Native, Public, BlueprintCallable)

void AUTGameMode::Demigod()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameMode.Demigod");

	AUTGameMode_Demigod_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameMode.CheckScore
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)
// Parameters:
// class AUTPlayerState*          Scorer                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTGameMode::CheckScore(class AUTPlayerState* Scorer)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameMode.CheckScore");

	AUTGameMode_CheckScore_Params params;
	params.Scorer = Scorer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTGameMode.CheckRelevance
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  Other                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTGameMode::CheckRelevance(class AActor* Other)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameMode.CheckRelevance");

	AUTGameMode_CheckRelevance_Params params;
	params.Other = Other;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTGameMode.ChangeTeam
// (Native, Public, BlueprintCallable)
// Parameters:
// class AController*             Player                         (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  NewTeam                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bBroadcast                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTGameMode::ChangeTeam(class AController* Player, unsigned char NewTeam, bool bBroadcast)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameMode.ChangeTeam");

	AUTGameMode_ChangeTeam_Params params;
	params.Player = Player;
	params.NewTeam = NewTeam;
	params.bBroadcast = bBroadcast;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTGameMode.BroadcastSpectator
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Sender                         (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  Message                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            Switch                         (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerState*            RelatedPlayerState_2           (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerState*            RelatedPlayerState_3           (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 OptionalObject                 (Parm, ZeroConstructor, IsPlainOldData)

void AUTGameMode::BroadcastSpectator(class AActor* Sender, class UClass* Message, int Switch, class APlayerState* RelatedPlayerState_2, class APlayerState* RelatedPlayerState_3, class UObject* OptionalObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameMode.BroadcastSpectator");

	AUTGameMode_BroadcastSpectator_Params params;
	params.Sender = Sender;
	params.Message = Message;
	params.Switch = Switch;
	params.RelatedPlayerState_2 = RelatedPlayerState_2;
	params.RelatedPlayerState_3 = RelatedPlayerState_3;
	params.OptionalObject = OptionalObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameMode.BlueprintSendLocalized
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Sender                         (Parm, ZeroConstructor, IsPlainOldData)
// class AUTPlayerController*     Receiver                       (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  Message                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            Switch                         (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerState*            RelatedPlayerState_2           (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerState*            RelatedPlayerState_3           (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 OptionalObject                 (Parm, ZeroConstructor, IsPlainOldData)

void AUTGameMode::BlueprintSendLocalized(class AActor* Sender, class AUTPlayerController* Receiver, class UClass* Message, int Switch, class APlayerState* RelatedPlayerState_2, class APlayerState* RelatedPlayerState_3, class UObject* OptionalObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameMode.BlueprintSendLocalized");

	AUTGameMode_BlueprintSendLocalized_Params params;
	params.Sender = Sender;
	params.Receiver = Receiver;
	params.Message = Message;
	params.Switch = Switch;
	params.RelatedPlayerState_2 = RelatedPlayerState_2;
	params.RelatedPlayerState_3 = RelatedPlayerState_3;
	params.OptionalObject = OptionalObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameMode.BlueprintBroadcastLocalized
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Sender                         (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  Message                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            Switch                         (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerState*            RelatedPlayerState_2           (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerState*            RelatedPlayerState_3           (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 OptionalObject                 (Parm, ZeroConstructor, IsPlainOldData)

void AUTGameMode::BlueprintBroadcastLocalized(class AActor* Sender, class UClass* Message, int Switch, class APlayerState* RelatedPlayerState_2, class APlayerState* RelatedPlayerState_3, class UObject* OptionalObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameMode.BlueprintBroadcastLocalized");

	AUTGameMode_BlueprintBroadcastLocalized_Params params;
	params.Sender = Sender;
	params.Message = Message;
	params.Switch = Switch;
	params.RelatedPlayerState_2 = RelatedPlayerState_2;
	params.RelatedPlayerState_3 = RelatedPlayerState_3;
	params.OptionalObject = OptionalObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameMode.AddMutatorClass
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  MutClass                       (Parm, ZeroConstructor, IsPlainOldData)

void AUTGameMode::AddMutatorClass(class UClass* MutClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameMode.AddMutatorClass");

	AUTGameMode_AddMutatorClass_Params params;
	params.MutClass = MutClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameMode.AddMutator
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 MutatorPath                    (Parm, ZeroConstructor)

void AUTGameMode::AddMutator(const struct FString& MutatorPath)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameMode.AddMutator");

	AUTGameMode_AddMutator_Params params;
	params.MutatorPath = MutatorPath;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameMode.AddBots
// (Exec, Native, Public, BlueprintCallable)
// Parameters:
// unsigned char                  Num                            (Parm, ZeroConstructor, IsPlainOldData)

void AUTGameMode::AddBots(unsigned char Num)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameMode.AddBots");

	AUTGameMode_AddBots_Params params;
	params.Num = Num;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTProjectileMovementComponent.ServerUpdateState
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector                 InAcceleration                 (Parm, ZeroConstructor, IsPlainOldData)

void UUTProjectileMovementComponent::ServerUpdateState(const struct FVector& InAcceleration)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTProjectileMovementComponent.ServerUpdateState");

	UUTProjectileMovementComponent_ServerUpdateState_Params params;
	params.InAcceleration = InAcceleration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCarriedObject.Use
// (Native, Public)

void AUTCarriedObject::Use()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCarriedObject.Use");

	AUTCarriedObject_Use_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCarriedObject.UpdateOutline
// (Native, Public)

void AUTCarriedObject::UpdateOutline()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCarriedObject.UpdateOutline");

	AUTCarriedObject_UpdateOutline_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCarriedObject.TryPickup
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AUTCharacter*            Character                      (Parm, ZeroConstructor, IsPlainOldData)

void AUTCarriedObject::TryPickup(class AUTCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCarriedObject.TryPickup");

	AUTCarriedObject_TryPickup_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCarriedObject.SetHolder
// (Native, Public)
// Parameters:
// class AUTCharacter*            NewHolder                      (Parm, ZeroConstructor, IsPlainOldData)

void AUTCarriedObject::SetHolder(class AUTCharacter* NewHolder)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCarriedObject.SetHolder");

	AUTCarriedObject_SetHolder_Params params;
	params.NewHolder = NewHolder;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCarriedObject.SendHome
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AUTCarriedObject::SendHome()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCarriedObject.SendHome");

	AUTCarriedObject_SendHome_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCarriedObject.Score
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// struct FName                   Reason                         (Parm, ZeroConstructor, IsPlainOldData)
// class AUTCharacter*            ScoringPawn                    (Parm, ZeroConstructor, IsPlainOldData)
// class AUTPlayerState*          ScoringPS                      (Parm, ZeroConstructor, IsPlainOldData)

void AUTCarriedObject::Score(const struct FName& Reason, class AUTCharacter* ScoringPawn, class AUTPlayerState* ScoringPS)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCarriedObject.Score");

	AUTCarriedObject_Score_Params params;
	params.Reason = Reason;
	params.ScoringPawn = ScoringPawn;
	params.ScoringPS = ScoringPS;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCarriedObject.PlayAlarm
// (Final, Native, Public)

void AUTCarriedObject::PlayAlarm()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCarriedObject.PlayAlarm");

	AUTCarriedObject_PlayAlarm_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCarriedObject.OnStop
// (Native, Public, HasOutParms)
// Parameters:
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AUTCarriedObject::OnStop(const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCarriedObject.OnStop");

	AUTCarriedObject_OnStop_Params params;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCarriedObject.OnRep_Team
// (Native, Public)

void AUTCarriedObject::OnRep_Team()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCarriedObject.OnRep_Team");

	AUTCarriedObject_OnRep_Team_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCarriedObject.OnRep_Moving
// (Native, Protected)

void AUTCarriedObject::OnRep_Moving()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCarriedObject.OnRep_Moving");

	AUTCarriedObject_OnRep_Moving_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCarriedObject.OnOverlapBegin
// (Native, Protected, HasOutParms)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AUTCarriedObject::OnOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCarriedObject.OnOverlapBegin");

	AUTCarriedObject_OnOverlapBegin_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCarriedObject.OnObjectStateChanged
// (Native, Protected)

void AUTCarriedObject::OnObjectStateChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCarriedObject.OnObjectStateChanged");

	AUTCarriedObject_OnObjectStateChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCarriedObject.OnHolderChanged
// (Native, Protected)

void AUTCarriedObject::OnHolderChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCarriedObject.OnHolderChanged");

	AUTCarriedObject_OnHolderChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCarriedObject.NoLongerHeld
// (Native, Protected)
// Parameters:
// class AController*             InstigatedBy                   (Parm, ZeroConstructor, IsPlainOldData)

void AUTCarriedObject::NoLongerHeld(class AController* InstigatedBy)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCarriedObject.NoLongerHeld");

	AUTCarriedObject_NoLongerHeld_Params params;
	params.InstigatedBy = InstigatedBy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCarriedObject.MoveToHome
// (Native, Protected)

void AUTCarriedObject::MoveToHome()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCarriedObject.MoveToHome");

	AUTCarriedObject_MoveToHome_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCarriedObject.IsHome
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTCarriedObject::IsHome()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCarriedObject.IsHome");

	AUTCarriedObject_IsHome_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTCarriedObject.GetTeamNum
// (Native, Public, Const)
// Parameters:
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

unsigned char AUTCarriedObject::GetTeamNum()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCarriedObject.GetTeamNum");

	AUTCarriedObject_GetTeamNum_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTCarriedObject.Drop
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AController*             Killer                         (Parm, ZeroConstructor, IsPlainOldData)

void AUTCarriedObject::Drop(class AController* Killer)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCarriedObject.Drop");

	AUTCarriedObject_Drop_Params params;
	params.Killer = Killer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCarriedObject.DetachFrom
// (Native, Public)
// Parameters:
// class USkeletalMeshComponent*  AttachToMesh                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AUTCarriedObject::DetachFrom(class USkeletalMeshComponent* AttachToMesh)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCarriedObject.DetachFrom");

	AUTCarriedObject_DetachFrom_Params params;
	params.AttachToMesh = AttachToMesh;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCarriedObject.CheckTouching
// (Native, Public)

void AUTCarriedObject::CheckTouching()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCarriedObject.CheckTouching");

	AUTCarriedObject_CheckTouching_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCarriedObject.ChangeState
// (Native, Public)
// Parameters:
// struct FName                   NewCarriedObjectState          (Parm, ZeroConstructor, IsPlainOldData)

void AUTCarriedObject::ChangeState(const struct FName& NewCarriedObjectState)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCarriedObject.ChangeState");

	AUTCarriedObject_ChangeState_Params params;
	params.NewCarriedObjectState = NewCarriedObjectState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCarriedObject.AttachTo
// (Native, Public)
// Parameters:
// class USkeletalMeshComponent*  AttachToMesh                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AUTCarriedObject::AttachTo(class USkeletalMeshComponent* AttachToMesh)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCarriedObject.AttachTo");

	AUTCarriedObject_AttachTo_Params params;
	params.AttachToMesh = AttachToMesh;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTFlag.PlayCaptureEffect
// (Native, Public, BlueprintCallable)

void AUTFlag::PlayCaptureEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTFlag.PlayCaptureEffect");

	AUTFlag_PlayCaptureEffect_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacterMovement.WantsWallSlide
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUTCharacterMovement::WantsWallSlide()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacterMovement.WantsWallSlide");

	UUTCharacterMovement_WantsWallSlide_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTCharacterMovement.WantsFloorSlide
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUTCharacterMovement::WantsFloorSlide()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacterMovement.WantsFloorSlide");

	UUTCharacterMovement_WantsFloorSlide_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTCharacterMovement.UpdateWallSlide
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           bNewWantsWallSlide             (Parm, ZeroConstructor, IsPlainOldData)

void UUTCharacterMovement::UpdateWallSlide(bool bNewWantsWallSlide)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacterMovement.UpdateWallSlide");

	UUTCharacterMovement_UpdateWallSlide_Params params;
	params.bNewWantsWallSlide = bNewWantsWallSlide;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacterMovement.UpdateFloorSlide
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           bNewWantsFloorSlide            (Parm, ZeroConstructor, IsPlainOldData)

void UUTCharacterMovement::UpdateFloorSlide(bool bNewWantsFloorSlide)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacterMovement.UpdateFloorSlide");

	UUTCharacterMovement_UpdateFloorSlide_Params params;
	params.bNewWantsFloorSlide = bNewWantsFloorSlide;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacterMovement.PerformDodge
// (Final, Native, Public, HasOutParms, HasDefaults)
// Parameters:
// struct FVector                 DodgeDir                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FVector                 DodgeCross                     (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUTCharacterMovement::PerformDodge(struct FVector* DodgeDir, struct FVector* DodgeCross)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacterMovement.PerformDodge");

	UUTCharacterMovement_PerformDodge_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (DodgeDir != nullptr)
		*DodgeDir = params.DodgeDir;
	if (DodgeCross != nullptr)
		*DodgeCross = params.DodgeCross;

	return params.ReturnValue;
}


// Function UnrealTournament.UTCharacterMovement.GetSimpleFloorInfo
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ImpactPoint                    (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Normal                         (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void UUTCharacterMovement::GetSimpleFloorInfo(struct FVector* ImpactPoint, struct FVector* Normal)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacterMovement.GetSimpleFloorInfo");

	UUTCharacterMovement_GetSimpleFloorInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (ImpactPoint != nullptr)
		*ImpactPoint = params.ImpactPoint;
	if (Normal != nullptr)
		*Normal = params.Normal;
}


// Function UnrealTournament.UTCharacterMovement.FallingDamageReduction
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// float                          FallingDamage                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UUTCharacterMovement::FallingDamageReduction(float FallingDamage, const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacterMovement.FallingDamageReduction");

	UUTCharacterMovement_FallingDamageReduction_Params params;
	params.FallingDamage = FallingDamage;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTCharacterMovement.ClientNoBaseAdjustPosition
// (Net, Native, Event, Public, HasDefaults, NetClient)
// Parameters:
// float                          TimeStamp                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 NewLoc                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 NewVelocity                    (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  ServerMovementMode             (Parm, ZeroConstructor, IsPlainOldData)

void UUTCharacterMovement::ClientNoBaseAdjustPosition(float TimeStamp, const struct FVector& NewLoc, const struct FVector& NewVelocity, unsigned char ServerMovementMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacterMovement.ClientNoBaseAdjustPosition");

	UUTCharacterMovement_ClientNoBaseAdjustPosition_Params params;
	params.TimeStamp = TimeStamp;
	params.NewLoc = NewLoc;
	params.NewVelocity = NewVelocity;
	params.ServerMovementMode = ServerMovementMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacterMovement.ClearRestrictedJump
// (Native, Public)

void UUTCharacterMovement::ClearRestrictedJump()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacterMovement.ClearRestrictedJump");

	UUTCharacterMovement_ClearRestrictedJump_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacterMovement.ApplyImpactVelocity
// (Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 JumpDir                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIsFullImpactImpulse           (Parm, ZeroConstructor, IsPlainOldData)

void UUTCharacterMovement::ApplyImpactVelocity(const struct FVector& JumpDir, bool bIsFullImpactImpulse)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacterMovement.ApplyImpactVelocity");

	UUTCharacterMovement_ApplyImpactVelocity_Params params;
	params.JumpDir = JumpDir;
	params.bIsFullImpactImpulse = bIsFullImpactImpulse;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacterMovement.AddDampedImpulse
// (Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Impulse                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSelfInflicted                 (Parm, ZeroConstructor, IsPlainOldData)

void UUTCharacterMovement::AddDampedImpulse(const struct FVector& Impulse, bool bSelfInflicted)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacterMovement.AddDampedImpulse");

	UUTCharacterMovement_AddDampedImpulse_Params params;
	params.Impulse = Impulse;
	params.bSelfInflicted = bSelfInflicted;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.UTServerMoveSaved
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                          TimeStamp                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector_NetQuantize     InAccel                        (Parm)
// unsigned char                  PendingFlags                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          ViewYaw                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          ViewPitch                      (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::UTServerMoveSaved(float TimeStamp, const struct FVector_NetQuantize& InAccel, unsigned char PendingFlags, float ViewYaw, float ViewPitch)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.UTServerMoveSaved");

	AUTCharacter_UTServerMoveSaved_Params params;
	params.TimeStamp = TimeStamp;
	params.InAccel = InAccel;
	params.PendingFlags = PendingFlags;
	params.ViewYaw = ViewYaw;
	params.ViewPitch = ViewPitch;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.UTServerMoveQuick
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                          TimeStamp                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector_NetQuantize     InAccel                        (Parm)
// unsigned char                  PendingFlags                   (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::UTServerMoveQuick(float TimeStamp, const struct FVector_NetQuantize& InAccel, unsigned char PendingFlags)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.UTServerMoveQuick");

	AUTCharacter_UTServerMoveQuick_Params params;
	params.TimeStamp = TimeStamp;
	params.InAccel = InAccel;
	params.PendingFlags = PendingFlags;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.UTServerMoveOld
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                          OldTimeStamp                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector_NetQuantize     OldAccel                       (Parm)
// float                          OldYaw                         (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  OldMoveFlags                   (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::UTServerMoveOld(float OldTimeStamp, const struct FVector_NetQuantize& OldAccel, float OldYaw, unsigned char OldMoveFlags)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.UTServerMoveOld");

	AUTCharacter_UTServerMoveOld_Params params;
	params.OldTimeStamp = OldTimeStamp;
	params.OldAccel = OldAccel;
	params.OldYaw = OldYaw;
	params.OldMoveFlags = OldMoveFlags;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.UTServerMove
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                          TimeStamp                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector_NetQuantize     InAccel                        (Parm)
// struct FVector_NetQuantize     ClientLoc                      (Parm)
// unsigned char                  CompressedMoveFlags            (Parm, ZeroConstructor, IsPlainOldData)
// float                          ViewYaw                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          ViewPitch                      (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     ClientMovementBase             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FName                   ClientBaseBoneName             (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  ClientMovementMode             (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::UTServerMove(float TimeStamp, const struct FVector_NetQuantize& InAccel, const struct FVector_NetQuantize& ClientLoc, unsigned char CompressedMoveFlags, float ViewYaw, float ViewPitch, class UPrimitiveComponent* ClientMovementBase, const struct FName& ClientBaseBoneName, unsigned char ClientMovementMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.UTServerMove");

	AUTCharacter_UTServerMove_Params params;
	params.TimeStamp = TimeStamp;
	params.InAccel = InAccel;
	params.ClientLoc = ClientLoc;
	params.CompressedMoveFlags = CompressedMoveFlags;
	params.ViewYaw = ViewYaw;
	params.ViewPitch = ViewPitch;
	params.ClientMovementBase = ClientMovementBase;
	params.ClientBaseBoneName = ClientBaseBoneName;
	params.ClientMovementMode = ClientMovementMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.UseCarriedObject
// (Exec, Native, Protected)

void AUTCharacter::UseCarriedObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.UseCarriedObject");

	AUTCharacter_UseCarriedObject_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.UpdateWeaponSkinPrefFromProfile
// (Native, Public)
// Parameters:
// class AUTWeapon*               Weapon                         (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::UpdateWeaponSkinPrefFromProfile(class AUTWeapon* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.UpdateWeaponSkinPrefFromProfile");

	AUTCharacter_UpdateWeaponSkinPrefFromProfile_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.UpdateWeaponOverlays
// (Native, Public)

void AUTCharacter::UpdateWeaponOverlays()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.UpdateWeaponOverlays");

	AUTCharacter_UpdateWeaponOverlays_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.UpdateWeaponFiring
// (Native, Public)

void AUTCharacter::UpdateWeaponFiring()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.UpdateWeaponFiring");

	AUTCharacter_UpdateWeaponFiring_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.UpdateWeaponAttachment
// (Native, Public)

void AUTCharacter::UpdateWeaponAttachment()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.UpdateWeaponAttachment");

	AUTCharacter_UpdateWeaponAttachment_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.UpdateSkin
// (Native, Public)

void AUTCharacter::UpdateSkin()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.UpdateSkin");

	AUTCharacter_UpdateSkin_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.UpdateOutline
// (Native, Protected)

void AUTCharacter::UpdateOutline()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.UpdateOutline");

	AUTCharacter_UpdateOutline_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.UpdateHolsteredWeaponAttachment
// (Native, Public)

void AUTCharacter::UpdateHolsteredWeaponAttachment()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.UpdateHolsteredWeaponAttachment");

	AUTCharacter_UpdateHolsteredWeaponAttachment_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.UpdateCharOverlays
// (Native, Public)

void AUTCharacter::UpdateCharOverlays()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.UpdateCharOverlays");

	AUTCharacter_UpdateCharOverlays_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.UpdateCharOverlayFlags
// (Native, Public)

void AUTCharacter::UpdateCharOverlayFlags()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.UpdateCharOverlayFlags");

	AUTCharacter_UpdateCharOverlayFlags_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.UpdateArmorOverlay
// (Native, Public, BlueprintCallable)

void AUTCharacter::UpdateArmorOverlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.UpdateArmorOverlay");

	AUTCharacter_UpdateArmorOverlay_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.TurnOff
// (Native, Public, BlueprintCallable)

void AUTCharacter::TurnOff()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.TurnOff");

	AUTCharacter_TurnOff_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.TossInventory
// (BlueprintAuthorityOnly, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AUTInventory*            InvToToss                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ExtraVelocity                  (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::TossInventory(class AUTInventory* InvToToss, const struct FVector& ExtraVelocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.TossInventory");

	AUTCharacter_TossInventory_Params params;
	params.InvToToss = InvToToss;
	params.ExtraVelocity = ExtraVelocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.TakeFallingDamage
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          FallingSpeed                   (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::TakeFallingDamage(const struct FHitResult& Hit, float FallingSpeed)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.TakeFallingDamage");

	AUTCharacter_TakeFallingDamage_Params params;
	params.Hit = Hit;
	params.FallingSpeed = FallingSpeed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.SwitchWeapon
// (Native, Public, BlueprintCallable)
// Parameters:
// class AUTWeapon*               NewWeapon                      (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::SwitchWeapon(class AUTWeapon* NewWeapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.SwitchWeapon");

	AUTCharacter_SwitchWeapon_Params params;
	params.NewWeapon = NewWeapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.StopFiring
// (Native, Public, BlueprintCallable)

void AUTCharacter::StopFiring()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.StopFiring");

	AUTCharacter_StopFiring_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.StopFire
// (Native, Public, BlueprintCallable)
// Parameters:
// unsigned char                  FireModeNum                    (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::StopFire(unsigned char FireModeNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.StopFire");

	AUTCharacter_StopFire_Params params;
	params.FireModeNum = FireModeNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.StatusAmbientSoundUpdated
// (Final, Native, Public)

void AUTCharacter::StatusAmbientSoundUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.StatusAmbientSoundUpdated");

	AUTCharacter_StatusAmbientSoundUpdated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.StartFire
// (Native, Public, BlueprintCallable)
// Parameters:
// unsigned char                  FireModeNum                    (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::StartFire(unsigned char FireModeNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.StartFire");

	AUTCharacter_StartFire_Params params;
	params.FireModeNum = FireModeNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.SpawnGib
// (BlueprintCosmetic, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FGibSlotInfo            GibSlot                        (ConstParm, Parm, OutParm, ReferenceParm)
// class UClass*                  DmgType                        (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::SpawnGib(const struct FGibSlotInfo& GibSlot, class UClass* DmgType)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.SpawnGib");

	AUTCharacter_SpawnGib_Params params;
	params.GibSlot = GibSlot;
	params.DmgType = DmgType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.SpawnBloodDecal
// (BlueprintCosmetic, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 TraceStart                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector                 TraceDir                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void AUTCharacter::SpawnBloodDecal(const struct FVector& TraceStart, const struct FVector& TraceDir)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.SpawnBloodDecal");

	AUTCharacter_SpawnBloodDecal_Params params;
	params.TraceStart = TraceStart;
	params.TraceDir = TraceDir;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.SetWeaponOverlayEffect
// (BlueprintAuthorityOnly, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FOverlayEffect          NewOverlay                     (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::SetWeaponOverlayEffect(const struct FOverlayEffect& NewOverlay, bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.SetWeaponOverlayEffect");

	AUTCharacter_SetWeaponOverlayEffect_Params params;
	params.NewOverlay = NewOverlay;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.SetWeaponOverlay
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInterface*      NewOverlay                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::SetWeaponOverlay(class UMaterialInterface* NewOverlay, bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.SetWeaponOverlay");

	AUTCharacter_SetWeaponOverlay_Params params;
	params.NewOverlay = NewOverlay;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.SetWeaponAttachmentClass
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  NewWeaponAttachmentClass       (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::SetWeaponAttachmentClass(class UClass* NewWeaponAttachmentClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.SetWeaponAttachmentClass");

	AUTCharacter_SetWeaponAttachmentClass_Params params;
	params.NewWeaponAttachmentClass = NewWeaponAttachmentClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.SetWalkMovementReduction
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          InPct                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          InDuration                     (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::SetWalkMovementReduction(float InPct, float InDuration)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.SetWalkMovementReduction");

	AUTCharacter_SetWalkMovementReduction_Params params;
	params.InPct = InPct;
	params.InDuration = InDuration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.SetStatusAmbientSound
// (Native, Public, BlueprintCallable)
// Parameters:
// class USoundBase*              NewAmbientSound                (Parm, ZeroConstructor, IsPlainOldData)
// float                          SoundVolume                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          PitchMultipier                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bClear                         (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::SetStatusAmbientSound(class USoundBase* NewAmbientSound, float SoundVolume, float PitchMultipier, bool bClear)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.SetStatusAmbientSound");

	AUTCharacter_SetStatusAmbientSound_Params params;
	params.NewAmbientSound = NewAmbientSound;
	params.SoundVolume = SoundVolume;
	params.PitchMultipier = PitchMultipier;
	params.bClear = bClear;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.SetSkin
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInterface*      NewSkin                        (Parm, ZeroConstructor, IsPlainOldData)
// class UMaterialInterface*      NewSkin1P                      (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::SetSkin(class UMaterialInterface* NewSkin, class UMaterialInterface* NewSkin1P)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.SetSkin");

	AUTCharacter_SetSkin_Params params;
	params.NewSkin = NewSkin;
	params.NewSkin1P = NewSkin1P;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.SetRagdollGravityScale
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          NewScale                       (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::SetRagdollGravityScale(float NewScale)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.SetRagdollGravityScale");

	AUTCharacter_SetRagdollGravityScale_Params params;
	params.NewScale = NewScale;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.SetOutlineServer
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bNowOutlined                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bWhenUnoccluded                (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  TeamMask                       (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::SetOutlineServer(bool bNowOutlined, bool bWhenUnoccluded, unsigned char TeamMask)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.SetOutlineServer");

	AUTCharacter_SetOutlineServer_Params params;
	params.bNowOutlined = bNowOutlined;
	params.bWhenUnoccluded = bWhenUnoccluded;
	params.TeamMask = TeamMask;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.SetOutlineLocal
// (BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bNowOutlined                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bWhenUnoccluded                (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::SetOutlineLocal(bool bNowOutlined, bool bWhenUnoccluded)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.SetOutlineLocal");

	AUTCharacter_SetOutlineLocal_Params params;
	params.bNowOutlined = bNowOutlined;
	params.bWhenUnoccluded = bWhenUnoccluded;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.SetLocalAmbientSound
// (Native, Public, BlueprintCallable)
// Parameters:
// class USoundBase*              NewAmbientSound                (Parm, ZeroConstructor, IsPlainOldData)
// float                          SoundVolume                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bClear                         (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::SetLocalAmbientSound(class USoundBase* NewAmbientSound, float SoundVolume, bool bClear)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.SetLocalAmbientSound");

	AUTCharacter_SetLocalAmbientSound_Params params;
	params.NewAmbientSound = NewAmbientSound;
	params.SoundVolume = SoundVolume;
	params.bClear = bClear;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.SetInvisible
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bNowInvisible                  (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::SetInvisible(bool bNowInvisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.SetInvisible");

	AUTCharacter_SetInvisible_Params params;
	params.bNowInvisible = bNowInvisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.SetInitialHealth
// (Native, Event, Public, BlueprintEvent)

void AUTCharacter::SetInitialHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.SetInitialHealth");

	AUTCharacter_SetInitialHealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.SetHolsteredWeaponAttachmentClass
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  NewWeaponAttachmentClass       (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::SetHolsteredWeaponAttachmentClass(class UClass* NewWeaponAttachmentClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.SetHolsteredWeaponAttachmentClass");

	AUTCharacter_SetHolsteredWeaponAttachmentClass_Params params;
	params.NewWeaponAttachmentClass = NewWeaponAttachmentClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.SetHeadScale
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          NewHeadScale                   (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::SetHeadScale(float NewHeadScale)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.SetHeadScale");

	AUTCharacter_SetHeadScale_Params params;
	params.NewHeadScale = NewHeadScale;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.SetHatVariant
// (Native, Public)
// Parameters:
// int                            NewHatVariant                  (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::SetHatVariant(int NewHatVariant)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.SetHatVariant");

	AUTCharacter_SetHatVariant_Params params;
	params.NewHatVariant = NewHatVariant;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.SetHatClass
// (Native, Public)
// Parameters:
// class UClass*                  HatClass                       (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::SetHatClass(class UClass* HatClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.SetHatClass");

	AUTCharacter_SetHatClass_Params params;
	params.HatClass = HatClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.SetFlashLocation
// (Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 InFlashLoc                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// unsigned char                  InFireMode                     (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::SetFlashLocation(const struct FVector& InFlashLoc, unsigned char InFireMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.SetFlashLocation");

	AUTCharacter_SetFlashLocation_Params params;
	params.InFlashLoc = InFlashLoc;
	params.InFireMode = InFireMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.SetFlashExtra
// (Native, Public, BlueprintCallable)
// Parameters:
// unsigned char                  NewFlashExtra                  (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  InFireMode                     (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::SetFlashExtra(unsigned char NewFlashExtra, unsigned char InFireMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.SetFlashExtra");

	AUTCharacter_SetFlashExtra_Params params;
	params.NewFlashExtra = NewFlashExtra;
	params.InFireMode = InFireMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.SetFireRateMultiplier
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          InMult                         (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::SetFireRateMultiplier(float InMult)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.SetFireRateMultiplier");

	AUTCharacter_SetFireRateMultiplier_Params params;
	params.InMult = InMult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.SetEyewearVariant
// (Native, Public)
// Parameters:
// int                            NewEyewearVariant              (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::SetEyewearVariant(int NewEyewearVariant)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.SetEyewearVariant");

	AUTCharacter_SetEyewearVariant_Params params;
	params.NewEyewearVariant = NewEyewearVariant;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.SetEyewearClass
// (Native, Public)
// Parameters:
// class UClass*                  EyewearClass                   (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::SetEyewearClass(class UClass* EyewearClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.SetEyewearClass");

	AUTCharacter_SetEyewearClass_Params params;
	params.EyewearClass = EyewearClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.SetCharacterOverlayEffect
// (BlueprintAuthorityOnly, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FOverlayEffect          NewOverlay                     (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::SetCharacterOverlayEffect(const struct FOverlayEffect& NewOverlay, bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.SetCharacterOverlayEffect");

	AUTCharacter_SetCharacterOverlayEffect_Params params;
	params.NewOverlay = NewOverlay;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.SetCharacterOverlay
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInterface*      NewOverlay                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::SetCharacterOverlay(class UMaterialInterface* NewOverlay, bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.SetCharacterOverlay");

	AUTCharacter_SetCharacterOverlay_Params params;
	params.NewOverlay = NewOverlay;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.SetBodyColorFlash
// (Native, Public, BlueprintCallable)
// Parameters:
// class UCurveLinearColor*       ColorCurve                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRimOnly                       (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::SetBodyColorFlash(class UCurveLinearColor* ColorCurve, bool bRimOnly)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.SetBodyColorFlash");

	AUTCharacter_SetBodyColorFlash_Params params;
	params.ColorCurve = ColorCurve;
	params.bRimOnly = bRimOnly;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.SetAmbientSound
// (Native, Public, BlueprintCallable)
// Parameters:
// class USoundBase*              NewAmbientSound                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bClear                         (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::SetAmbientSound(class USoundBase* NewAmbientSound, bool bClear)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.SetAmbientSound");

	AUTCharacter_SetAmbientSound_Params params;
	params.NewAmbientSound = NewAmbientSound;
	params.bClear = bClear;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.ServerVerifyWeapon
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class AUTWeapon*               NewWeapon                      (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::ServerVerifyWeapon(class AUTWeapon* NewWeapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.ServerVerifyWeapon");

	AUTCharacter_ServerVerifyWeapon_Params params;
	params.NewWeapon = NewWeapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.ServerUseCarriedObject
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void AUTCharacter::ServerUseCarriedObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.ServerUseCarriedObject");

	AUTCharacter_ServerUseCarriedObject_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.ServerSwitchWeapon
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class AUTWeapon*               NewWeapon                      (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::ServerSwitchWeapon(class AUTWeapon* NewWeapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.ServerSwitchWeapon");

	AUTCharacter_ServerSwitchWeapon_Params params;
	params.NewWeapon = NewWeapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.ServerFeignDeath
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AUTCharacter::ServerFeignDeath()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.ServerFeignDeath");

	AUTCharacter_ServerFeignDeath_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.ServerDropPowerup
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AUTTimedPowerup*         Powerup                        (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::ServerDropPowerup(class AUTTimedPowerup* Powerup)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.ServerDropPowerup");

	AUTCharacter_ServerDropPowerup_Params params;
	params.Powerup = Powerup;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.ServerDropHealth
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AUTCharacter::ServerDropHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.ServerDropHealth");

	AUTCharacter_ServerDropHealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.ServerDropCarriedObject
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void AUTCharacter::ServerDropCarriedObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.ServerDropCarriedObject");

	AUTCharacter_ServerDropCarriedObject_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.ServerDropBoots
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AUTCharacter::ServerDropBoots()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.ServerDropBoots");

	AUTCharacter_ServerDropBoots_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.ServerDropArmor
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AUTCharacter::ServerDropArmor()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.ServerDropArmor");

	AUTCharacter_ServerDropArmor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.RestoreAmmoPct
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          Pct                            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bPctOfMax                      (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::RestoreAmmoPct(float Pct, bool bPctOfMax)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.RestoreAmmoPct");

	AUTCharacter_RestoreAmmoPct_Params params;
	params.Pct = Pct;
	params.bPctOfMax = bPctOfMax;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.ResetMaxSpeedPctModifier
// (Native, Public, BlueprintCallable)

void AUTCharacter::ResetMaxSpeedPctModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.ResetMaxSpeedPctModifier");

	AUTCharacter_ResetMaxSpeedPctModifier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.RemoveVisibilityMask
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// int                            Channel                        (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::RemoveVisibilityMask(int Channel)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.RemoveVisibilityMask");

	AUTCharacter_RemoveVisibilityMask_Params params;
	params.Channel = Channel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.RemoveInventory
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AUTInventory*            InvToRemove                    (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::RemoveInventory(class AUTInventory* InvToRemove)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.RemoveInventory");

	AUTCharacter_RemoveInventory_Params params;
	params.InvToRemove = InvToRemove;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.RemoveArmor
// (Native, Public, BlueprintCallable)
// Parameters:
// int                            Amount                         (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::RemoveArmor(int Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.RemoveArmor");

	AUTCharacter_RemoveArmor_Params params;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.PlayWaterSound
// (Native, Public, BlueprintCallable)
// Parameters:
// class USoundBase*              WaterSound                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTCharacter::PlayWaterSound(class USoundBase* WaterSound)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.PlayWaterSound");

	AUTCharacter_PlayWaterSound_Params params;
	params.WaterSound = WaterSound;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTCharacter.PlayWaterEntryEffect
// (Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 InWaterLoc                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector                 OutofWaterLoc                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void AUTCharacter::PlayWaterEntryEffect(const struct FVector& InWaterLoc, const struct FVector& OutofWaterLoc)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.PlayWaterEntryEffect");

	AUTCharacter_PlayWaterEntryEffect_Params params;
	params.InWaterLoc = InWaterLoc;
	params.OutofWaterLoc = OutofWaterLoc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.PlayTauntByClass
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  TauntToPlay                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          EmoteSpeed                     (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::PlayTauntByClass(class UClass* TauntToPlay, float EmoteSpeed)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.PlayTauntByClass");

	AUTCharacter_PlayTauntByClass_Params params;
	params.TauntToPlay = TauntToPlay;
	params.EmoteSpeed = EmoteSpeed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.PlayTakeHitEffects
// (BlueprintCosmetic, Native, Event, Public, BlueprintEvent)

void AUTCharacter::PlayTakeHitEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.PlayTakeHitEffects");

	AUTCharacter_PlayTakeHitEffects_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.PlayLandedEffect
// (Native, Event, Public, BlueprintEvent)

void AUTCharacter::PlayLandedEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.PlayLandedEffect");

	AUTCharacter_PlayLandedEffect_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.PlayJump
// (Native, Event, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                 JumpLocation                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector                 JumpDir                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void AUTCharacter::PlayJump(const struct FVector& JumpLocation, const struct FVector& JumpDir)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.PlayJump");

	AUTCharacter_PlayJump_Params params;
	params.JumpLocation = JumpLocation;
	params.JumpDir = JumpDir;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.PlayGroupTaunt
// (Final, Native, Public)
// Parameters:
// class UClass*                  TauntToPlay                    (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::PlayGroupTaunt(class UClass* TauntToPlay)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.PlayGroupTaunt");

	AUTCharacter_PlayGroupTaunt_Params params;
	params.TauntToPlay = TauntToPlay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.PlayFootstep
// (Native, Public, BlueprintCallable)
// Parameters:
// unsigned char                  FootNum                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFirstPerson                   (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::PlayFootstep(unsigned char FootNum, bool bFirstPerson)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.PlayFootstep");

	AUTCharacter_PlayFootstep_Params params;
	params.FootNum = FootNum;
	params.bFirstPerson = bFirstPerson;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.PlayFeignDeath
// (Native, Public)

void AUTCharacter::PlayFeignDeath()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.PlayFeignDeath");

	AUTCharacter_PlayFeignDeath_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.PlayDamageEffects
// (BlueprintCosmetic, Native, Event, Public, BlueprintEvent)

void AUTCharacter::PlayDamageEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.PlayDamageEffects");

	AUTCharacter_PlayDamageEffects_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.OVV
// (Final, Exec, Native, Public, HasDefaults)
// Parameters:
// struct FName                   InName                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Value                          (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::OVV(const struct FName& InName, const struct FVector& Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.OVV");

	AUTCharacter_OVV_Params params;
	params.InName = InName;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.OverrideFellOutOfWorld
// (Event, Public, BlueprintEvent)
// Parameters:
// class UClass*                  DamageType                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTCharacter::OverrideFellOutOfWorld(class UClass* DamageType)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.OverrideFellOutOfWorld");

	AUTCharacter_OverrideFellOutOfWorld_Params params;
	params.DamageType = DamageType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTCharacter.OV
// (Final, Exec, Native, Public)
// Parameters:
// struct FName                   InName                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::OV(const struct FName& InName, float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.OV");

	AUTCharacter_OV_Params params;
	params.InName = InName;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.OnWallDodge
// (Native, Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 DodgeLocation                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector                 DodgeDir                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void AUTCharacter::OnWallDodge(const struct FVector& DodgeLocation, const struct FVector& DodgeDir)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.OnWallDodge");

	AUTCharacter_OnWallDodge_Params params;
	params.DodgeLocation = DodgeLocation;
	params.DodgeDir = DodgeDir;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.OnTriggerRallyEffect
// (Native, Public)

void AUTCharacter::OnTriggerRallyEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.OnTriggerRallyEffect");

	AUTCharacter_OnTriggerRallyEffect_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.OnSlide
// (Native, Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 SlideLocation                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector                 SlideDir                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void AUTCharacter::OnSlide(const struct FVector& SlideLocation, const struct FVector& SlideDir)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.OnSlide");

	AUTCharacter_OnSlide_Params params;
	params.SlideLocation = SlideLocation;
	params.SlideDir = SlideDir;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.OnRepWeaponSkin
// (Native, Public)

void AUTCharacter::OnRepWeaponSkin()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.OnRepWeaponSkin");

	AUTCharacter_OnRepWeaponSkin_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.OnRepHeadArmorFlashCount
// (Native, Public)

void AUTCharacter::OnRepHeadArmorFlashCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.OnRepHeadArmorFlashCount");

	AUTCharacter_OnRepHeadArmorFlashCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.OnRepFloorSliding
// (Native, Public)

void AUTCharacter::OnRepFloorSliding()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.OnRepFloorSliding");

	AUTCharacter_OnRepFloorSliding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.OnRepDrivenVehicle
// (Native, Public)

void AUTCharacter::OnRepDrivenVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.OnRepDrivenVehicle");

	AUTCharacter_OnRepDrivenVehicle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.OnRepCosmeticSpreeCount
// (Native, Public)

void AUTCharacter::OnRepCosmeticSpreeCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.OnRepCosmeticSpreeCount");

	AUTCharacter_OnRepCosmeticSpreeCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.OnRepCosmeticFlashCount
// (Native, Public)

void AUTCharacter::OnRepCosmeticFlashCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.OnRepCosmeticFlashCount");

	AUTCharacter_OnRepCosmeticFlashCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.OnRep_UTReplicatedMovement
// (Native, Public)

void AUTCharacter::OnRep_UTReplicatedMovement()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.OnRep_UTReplicatedMovement");

	AUTCharacter_OnRep_UTReplicatedMovement_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.OnRep_ShouldWearLeaderHat
// (Final, Native, Public)

void AUTCharacter::OnRep_ShouldWearLeaderHat()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.OnRep_ShouldWearLeaderHat");

	AUTCharacter_OnRep_ShouldWearLeaderHat_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.OnRep_Invisible
// (BlueprintCosmetic, Native, Event, Public, BlueprintEvent)

void AUTCharacter::OnRep_Invisible()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.OnRep_Invisible");

	AUTCharacter_OnRep_Invisible_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.OnRagdollCollision
// (Native, Public, HasOutParms, HasDefaults)
// Parameters:
// class UPrimitiveComponent*     HitComponent                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FVector                 NormalImpulse                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AUTCharacter::OnRagdollCollision(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.OnRagdollCollision");

	AUTCharacter_OnRagdollCollision_Params params;
	params.HitComponent = HitComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.OnOverlapBegin
// (Native, Public)
// Parameters:
// class AActor*                  OverlappedActor                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::OnOverlapBegin(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.OnOverlapBegin");

	AUTCharacter_OnOverlapBegin_Params params;
	params.OverlappedActor = OverlappedActor;
	params.OtherActor = OtherActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.OnLandingAssist
// (Event, Public, BlueprintEvent)

void AUTCharacter::OnLandingAssist()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.OnLandingAssist");

	AUTCharacter_OnLandingAssist_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.OnHealthUpdated
// (Native, Public)

void AUTCharacter::OnHealthUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.OnHealthUpdated");

	AUTCharacter_OnHealthUpdated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.OnGroupTauntEnded
// (Final, Native, Public)
// Parameters:
// class UAnimMontage*            Montage                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInterrupted                   (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::OnGroupTauntEnded(class UAnimMontage* Montage, bool bInterrupted)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.OnGroupTauntEnded");

	AUTCharacter_OnGroupTauntEnded_Params params;
	params.Montage = Montage;
	params.bInterrupted = bInterrupted;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.OnFirstPersonWeaponEquipped
// (Event, Public, BlueprintEvent)
// Parameters:
// class AUTWeapon*               EquippedWeapon                 (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::OnFirstPersonWeaponEquipped(class AUTWeapon* EquippedWeapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.OnFirstPersonWeaponEquipped");

	AUTCharacter_OnFirstPersonWeaponEquipped_Params params;
	params.EquippedWeapon = EquippedWeapon;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.OnEmoteEnded
// (Final, Native, Public)
// Parameters:
// class UAnimMontage*            Montage                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInterrupted                   (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::OnEmoteEnded(class UAnimMontage* Montage, bool bInterrupted)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.OnEmoteEnded");

	AUTCharacter_OnEmoteEnded_Params params;
	params.Montage = Montage;
	params.bInterrupted = bInterrupted;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.OnDodge
// (Native, Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 DodgeLocation                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector                 DodgeDir                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void AUTCharacter::OnDodge(const struct FVector& DodgeLocation, const struct FVector& DodgeDir)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.OnDodge");

	AUTCharacter_OnDodge_Params params;
	params.DodgeLocation = DodgeLocation;
	params.DodgeDir = DodgeDir;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.OnArmorUpdated
// (Native, Public)

void AUTCharacter::OnArmorUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.OnArmorUpdated");

	AUTCharacter_OnArmorUpdated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.MovementEventUpdated
// (Native, Public, HasDefaults)
// Parameters:
// TEnumAsByte<EMovementEvent>    MovementEventType              (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Dir                            (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::MovementEventUpdated(TEnumAsByte<EMovementEvent> MovementEventType, const struct FVector& Dir)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.MovementEventUpdated");

	AUTCharacter_MovementEventUpdated_Params params;
	params.MovementEventType = MovementEventType;
	params.Dir = Dir;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.MovementEventReplicated
// (Native, Public)

void AUTCharacter::MovementEventReplicated()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.MovementEventReplicated");

	AUTCharacter_MovementEventReplicated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.ModifyDamageTaken
// (Native, Event, Protected, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// int                            AppliedDamage                  (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// int                            Damage                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector                 Momentum                       (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// class AUTInventory*            HitArmor                       (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FHitResult              HitInfo                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// class AController*             EventInstigator                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  DamageType                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTCharacter::ModifyDamageTaken(const struct FHitResult& HitInfo, class AController* EventInstigator, class AActor* DamageCauser, class UClass* DamageType, int* AppliedDamage, int* Damage, struct FVector* Momentum, class AUTInventory** HitArmor)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.ModifyDamageTaken");

	AUTCharacter_ModifyDamageTaken_Params params;
	params.HitInfo = HitInfo;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;
	params.DamageType = DamageType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (AppliedDamage != nullptr)
		*AppliedDamage = params.AppliedDamage;
	if (Damage != nullptr)
		*Damage = params.Damage;
	if (Momentum != nullptr)
		*Momentum = params.Momentum;
	if (HitArmor != nullptr)
		*HitArmor = params.HitArmor;

	return params.ReturnValue;
}


// Function UnrealTournament.UTCharacter.ModifyDamageCaused
// (Native, Event, Protected, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// int                            AppliedDamage                  (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// int                            Damage                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector                 Momentum                       (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FHitResult              HitInfo                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// class AActor*                  Victim                         (Parm, ZeroConstructor, IsPlainOldData)
// class AController*             EventInstigator                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  DamageType                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTCharacter::ModifyDamageCaused(const struct FHitResult& HitInfo, class AActor* Victim, class AController* EventInstigator, class AActor* DamageCauser, class UClass* DamageType, int* AppliedDamage, int* Damage, struct FVector* Momentum)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.ModifyDamageCaused");

	AUTCharacter_ModifyDamageCaused_Params params;
	params.HitInfo = HitInfo;
	params.Victim = Victim;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;
	params.DamageType = DamageType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (AppliedDamage != nullptr)
		*AppliedDamage = params.AppliedDamage;
	if (Damage != nullptr)
		*Damage = params.Damage;
	if (Momentum != nullptr)
		*Momentum = params.Momentum;

	return params.ReturnValue;
}


// Function UnrealTournament.UTCharacter.LocalAmbientSoundUpdated
// (Final, Native, Public)

void AUTCharacter::LocalAmbientSoundUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.LocalAmbientSoundUpdated");

	AUTCharacter_LocalAmbientSoundUpdated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.LeaderHatStatusChanged
// (Native, Event, Public, BlueprintEvent)

void AUTCharacter::LeaderHatStatusChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.LeaderHatStatusChanged");

	AUTCharacter_LeaderHatStatusChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.K2_FiringInfoUpdated
// (Event, Public, BlueprintEvent)

void AUTCharacter::K2_FiringInfoUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.K2_FiringInfoUpdated");

	AUTCharacter_K2_FiringInfoUpdated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.K2_FindInventoryType
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  Type                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bExactClass                    (Parm, ZeroConstructor, IsPlainOldData)
// class AUTInventory*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AUTInventory* AUTCharacter::K2_FindInventoryType(class UClass* Type, bool bExactClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.K2_FindInventoryType");

	AUTCharacter_K2_FindInventoryType_Params params;
	params.Type = Type;
	params.bExactClass = bExactClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTCharacter.K2_Died
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AController*             EventInstigator                (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  DamageType                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTCharacter::K2_Died(class AController* EventInstigator, class UClass* DamageType)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.K2_Died");

	AUTCharacter_K2_Died_Params params;
	params.EventInstigator = EventInstigator;
	params.DamageType = DamageType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTCharacter.K2_CreateInventory
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  NewInvClass                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAutoActivate                  (Parm, ZeroConstructor, IsPlainOldData)
// class AUTInventory*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AUTInventory* AUTCharacter::K2_CreateInventory(class UClass* NewInvClass, bool bAutoActivate)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.K2_CreateInventory");

	AUTCharacter_K2_CreateInventory_Params params;
	params.NewInvClass = NewInvClass;
	params.bAutoActivate = bAutoActivate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTCharacter.JumpVis
// (Final, Exec, Native, Public)

void AUTCharacter::JumpVis()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.JumpVis");

	AUTCharacter_JumpVis_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.IsWearingAnyCosmetic
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTCharacter::IsWearingAnyCosmetic()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.IsWearingAnyCosmetic");

	AUTCharacter_IsWearingAnyCosmetic_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTCharacter.IsTriggerDown
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// unsigned char                  InFireMode                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTCharacter::IsTriggerDown(unsigned char InFireMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.IsTriggerDown");

	AUTCharacter_IsTriggerDown_Params params;
	params.InFireMode = InFireMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTCharacter.IsThirdPersonTaunting
// (Final, Native, Public, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTCharacter::IsThirdPersonTaunting()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.IsThirdPersonTaunting");

	AUTCharacter_IsThirdPersonTaunting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTCharacter.IsSpawnProtected
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTCharacter::IsSpawnProtected()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.IsSpawnProtected");

	AUTCharacter_IsSpawnProtected_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTCharacter.IsRagdoll
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTCharacter::IsRagdoll()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.IsRagdoll");

	AUTCharacter_IsRagdoll_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTCharacter.IsOutlined
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// unsigned char                  TestTeam                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTCharacter::IsOutlined(unsigned char TestTeam)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.IsOutlined");

	AUTCharacter_IsOutlined_Params params;
	params.TestTeam = TestTeam;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTCharacter.IsLocallyViewed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTCharacter::IsLocallyViewed()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.IsLocallyViewed");

	AUTCharacter_IsLocallyViewed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTCharacter.IsHeadShot
// (Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 HitLocation                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ShotDirection                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          WeaponHeadScaling              (Parm, ZeroConstructor, IsPlainOldData)
// class AUTCharacter*            ShotInstigator                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          PredictionTime                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTCharacter::IsHeadShot(const struct FVector& HitLocation, const struct FVector& ShotDirection, float WeaponHeadScaling, class AUTCharacter* ShotInstigator, float PredictionTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.IsHeadShot");

	AUTCharacter_IsHeadShot_Params params;
	params.HitLocation = HitLocation;
	params.ShotDirection = ShotDirection;
	params.WeaponHeadScaling = WeaponHeadScaling;
	params.ShotInstigator = ShotInstigator;
	params.PredictionTime = PredictionTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTCharacter.IsFeigningDeath
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTCharacter::IsFeigningDeath()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.IsFeigningDeath");

	AUTCharacter_IsFeigningDeath_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTCharacter.IsDead
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTCharacter::IsDead()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.IsDead");

	AUTCharacter_IsDead_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTCharacter.InventoryEvent
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   EventName                      (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::InventoryEvent(const struct FName& EventName)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.InventoryEvent");

	AUTCharacter_InventoryEvent_Params params;
	params.EventName = EventName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.IncrementFlashCount
// (Native, Public, BlueprintCallable)
// Parameters:
// unsigned char                  InFireMode                     (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::IncrementFlashCount(unsigned char InFireMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.IncrementFlashCount");

	AUTCharacter_IncrementFlashCount_Params params;
	params.InFireMode = InFireMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.HasMaxAmmo
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  Type                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTCharacter::HasMaxAmmo(class UClass* Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.HasMaxAmmo");

	AUTCharacter_HasMaxAmmo_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTCharacter.HasHighScoreChanged
// (Native, Event, Public, BlueprintEvent)

void AUTCharacter::HasHighScoreChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.HasHighScoreChanged");

	AUTCharacter_HasHighScoreChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.HandleFallingDamage
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// float                          FallingSpeed                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTCharacter::HandleFallingDamage(float FallingSpeed, const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.HandleFallingDamage");

	AUTCharacter_HandleFallingDamage_Params params;
	params.FallingSpeed = FallingSpeed;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTCharacter.GiveArmor
// (Native, Public, BlueprintCallable)
// Parameters:
// class AUTArmor*                InArmorType                    (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::GiveArmor(class AUTArmor* InArmorType)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.GiveArmor");

	AUTCharacter_GiveArmor_Params params;
	params.InArmorType = InArmorType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.GibExplosion
// (BlueprintCosmetic, Native, Event, Public, BlueprintEvent)

void AUTCharacter::GibExplosion()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.GibExplosion");

	AUTCharacter_GibExplosion_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.GetWeaponBobScaling
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AUTCharacter::GetWeaponBobScaling()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.GetWeaponBobScaling");

	AUTCharacter_GetWeaponBobScaling_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTCharacter.GetTeamNum
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

unsigned char AUTCharacter::GetTeamNum()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.GetTeamNum");

	AUTCharacter_GetTeamNum_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTCharacter.GetTeamColor
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FLinearColor AUTCharacter::GetTeamColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.GetTeamColor");

	AUTCharacter_GetTeamColor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTCharacter.GetRewindLocation
// (Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// float                          PredictionTime                 (Parm, ZeroConstructor, IsPlainOldData)
// class AUTPlayerController*     DebugViewer                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector AUTCharacter::GetRewindLocation(float PredictionTime, class AUTPlayerController* DebugViewer)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.GetRewindLocation");

	AUTCharacter_GetRewindLocation_Params params;
	params.PredictionTime = PredictionTime;
	params.DebugViewer = DebugViewer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTCharacter.GetRemoteViewPitch
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AUTCharacter::GetRemoteViewPitch()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.GetRemoteViewPitch");

	AUTCharacter_GetRemoteViewPitch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTCharacter.GetPlayerCameraManager
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class APlayerCameraManager*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APlayerCameraManager* AUTCharacter::GetPlayerCameraManager()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.GetPlayerCameraManager");

	AUTCharacter_GetPlayerCameraManager_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTCharacter.GetFireRateMultiplier
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AUTCharacter::GetFireRateMultiplier()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.GetFireRateMultiplier");

	AUTCharacter_GetFireRateMultiplier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTCharacter.GetCurrentAimContext
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* AUTCharacter::GetCurrentAimContext()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.GetCurrentAimContext");

	AUTCharacter_GetCurrentAimContext_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTCharacter.GetCharOverlayMI
// (BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInstanceDynamic* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UMaterialInstanceDynamic* AUTCharacter::GetCharOverlayMI()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.GetCharOverlayMI");

	AUTCharacter_GetCharOverlayMI_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTCharacter.GetCharacterData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AUTCharacterContent*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AUTCharacterContent* AUTCharacter::GetCharacterData()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.GetCharacterData");

	AUTCharacter_GetCharacterData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTCharacter.GetCarriedObject
// (Native, Public, BlueprintCallable)
// Parameters:
// class AUTCarriedObject*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AUTCarriedObject* AUTCharacter::GetCarriedObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.GetCarriedObject");

	AUTCharacter_GetCarriedObject_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTCharacter.GetArmorAmount
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AUTCharacter::GetArmorAmount()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.GetArmorAmount");

	AUTCharacter_GetArmorAmount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTCharacter.GetAmmoAmount
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  Type                           (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AUTCharacter::GetAmmoAmount(class UClass* Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.GetAmmoAmount");

	AUTCharacter_GetAmmoAmount_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTCharacter.ForceFeignDeath
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                          MinRecoveryDelay               (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::ForceFeignDeath(float MinRecoveryDelay)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.ForceFeignDeath");

	AUTCharacter_ForceFeignDeath_Params params;
	params.MinRecoveryDelay = MinRecoveryDelay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.FiringInfoReplicated
// (Native, Public)

void AUTCharacter::FiringInfoReplicated()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.FiringInfoReplicated");

	AUTCharacter_FiringInfoReplicated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.FiringExtraUpdated
// (Native, Public)

void AUTCharacter::FiringExtraUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.FiringExtraUpdated");

	AUTCharacter_FiringExtraUpdated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.FireRateChanged
// (Final, Native, Public)

void AUTCharacter::FireRateChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.FireRateChanged");

	AUTCharacter_FireRateChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.FeignDeath
// (Exec, Native, Public, BlueprintCallable)

void AUTCharacter::FeignDeath()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.FeignDeath");

	AUTCharacter_FeignDeath_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.EnableWeaponSwitching
// (Native, Public, BlueprintCallable)

void AUTCharacter::EnableWeaponSwitching()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.EnableWeaponSwitching");

	AUTCharacter_EnableWeaponSwitching_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.DropFlag
// (Exec, Native, Public)

void AUTCharacter::DropFlag()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.DropFlag");

	AUTCharacter_DropFlag_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.DropCarriedObject
// (Exec, Native, Public)

void AUTCharacter::DropCarriedObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.DropCarriedObject");

	AUTCharacter_DropCarriedObject_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.DodgeOverride
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 DodgeDir                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector                 DodgeCross                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTCharacter::DodgeOverride(const struct FVector& DodgeDir, const struct FVector& DodgeCross)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.DodgeOverride");

	AUTCharacter_DodgeOverride_Params params;
	params.DodgeDir = DodgeDir;
	params.DodgeCross = DodgeCross;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTCharacter.DiscardAllInventory
// (Native, Public, BlueprintCallable)

void AUTCharacter::DiscardAllInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.DiscardAllInventory");

	AUTCharacter_DiscardAllInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.DisallowWeaponFiring
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           bDisallowed                    (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::DisallowWeaponFiring(bool bDisallowed)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.DisallowWeaponFiring");

	AUTCharacter_DisallowWeaponFiring_Params params;
	params.bDisallowed = bDisallowed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.DeathCleanupTimer
// (Final, Native, Protected)

void AUTCharacter::DeathCleanupTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.DeathCleanupTimer");

	AUTCharacter_DeathCleanupTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.DeathAnimEnd
// (Native, Public)
// Parameters:
// class UAnimMontage*            Montage                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInterrupted                   (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::DeathAnimEnd(class UAnimMontage* Montage, bool bInterrupted)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.DeathAnimEnd");

	AUTCharacter_DeathAnimEnd_Params params;
	params.Montage = Montage;
	params.bInterrupted = bInterrupted;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.ClientWeaponLost
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AUTWeapon*               LostWeapon                     (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::ClientWeaponLost(class AUTWeapon* LostWeapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.ClientWeaponLost");

	AUTCharacter_ClientWeaponLost_Params params;
	params.LostWeapon = LostWeapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.ClientVerifyWeapon
// (Net, NetReliable, Native, Event, Public, NetClient)

void AUTCharacter::ClientVerifyWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.ClientVerifyWeapon");

	AUTCharacter_ClientVerifyWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.ClientSwitchWeapon
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// class AUTWeapon*               NewWeapon                      (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::ClientSwitchWeapon(class AUTWeapon* NewWeapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.ClientSwitchWeapon");

	AUTCharacter_ClientSwitchWeapon_Params params;
	params.NewWeapon = NewWeapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.ClearFiringInfo
// (Native, Public, BlueprintCallable)

void AUTCharacter::ClearFiringInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.ClearFiringInfo");

	AUTCharacter_ClearFiringInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.ChangeAmbientSoundPitch
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USoundBase*              InAmbientSound                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          NewPitch                       (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::ChangeAmbientSoundPitch(class USoundBase* InAmbientSound, float NewPitch)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.ChangeAmbientSoundPitch");

	AUTCharacter_ChangeAmbientSoundPitch_Params params;
	params.InAmbientSound = InAmbientSound;
	params.NewPitch = NewPitch;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.CascadeGroupTaunt
// (Final, Native, Public)

void AUTCharacter::CascadeGroupTaunt()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.CascadeGroupTaunt");

	AUTCharacter_CascadeGroupTaunt_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.CanSlide
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTCharacter::CanSlide()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.CanSlide");

	AUTCharacter_CanSlide_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTCharacter.CanDodgeInternal
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTCharacter::CanDodgeInternal()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.CanDodgeInternal");

	AUTCharacter_CanDodgeInternal_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTCharacter.CanDodge
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTCharacter::CanDodge()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.CanDodge");

	AUTCharacter_CanDodge_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTCharacter.BoostSpeedForTime
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          SpeedBoostPct                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          TimeToBoost                    (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::BoostSpeedForTime(float SpeedBoostPct, float TimeToBoost)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.BoostSpeedForTime");

	AUTCharacter_BoostSpeedForTime_Params params;
	params.SpeedBoostPct = SpeedBoostPct;
	params.TimeToBoost = TimeToBoost;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.BlockFeignDeath
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTCharacter::BlockFeignDeath()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.BlockFeignDeath");

	AUTCharacter_BlockFeignDeath_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTCharacter.BlockedHeadShot
// (Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 HitLocation                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ShotDirection                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          WeaponHeadScaling              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bConsumeArmor                  (Parm, ZeroConstructor, IsPlainOldData)
// class AUTCharacter*            ShotInstigator                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTCharacter::BlockedHeadShot(const struct FVector& HitLocation, const struct FVector& ShotDirection, float WeaponHeadScaling, bool bConsumeArmor, class AUTCharacter* ShotInstigator)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.BlockedHeadShot");

	AUTCharacter_BlockedHeadShot_Params params;
	params.HitLocation = HitLocation;
	params.ShotDirection = ShotDirection;
	params.WeaponHeadScaling = WeaponHeadScaling;
	params.bConsumeArmor = bConsumeArmor;
	params.ShotInstigator = ShotInstigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTCharacter.AmbientSoundUpdated
// (Final, Native, Public)

void AUTCharacter::AmbientSoundUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.AmbientSoundUpdated");

	AUTCharacter_AmbientSoundUpdated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.AmbientSoundPitchUpdated
// (Final, Native, Public)

void AUTCharacter::AmbientSoundPitchUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.AmbientSoundPitchUpdated");

	AUTCharacter_AmbientSoundPitchUpdated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.AllowedSpecialMoveAnims
// (Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EAllowedSpecialMoveAnims> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EAllowedSpecialMoveAnims> AUTCharacter::AllowedSpecialMoveAnims()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.AllowedSpecialMoveAnims");

	AUTCharacter_AllowedSpecialMoveAnims_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTCharacter.AllAmmo
// (Native, Public, BlueprintCallable)

void AUTCharacter::AllAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.AllAmmo");

	AUTCharacter_AllAmmo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.AddVisibilityMask
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// int                            Channel                        (Parm, ZeroConstructor, IsPlainOldData)

void AUTCharacter::AddVisibilityMask(int Channel)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.AddVisibilityMask");

	AUTCharacter_AddVisibilityMask_Params params;
	params.Channel = Channel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCharacter.AddInventory
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AUTInventory*            InvToAdd                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAutoActivate                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTCharacter::AddInventory(class AUTInventory* InvToAdd, bool bAutoActivate)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.AddInventory");

	AUTCharacter_AddInventory_Params params;
	params.InvToAdd = InvToAdd;
	params.bAutoActivate = bAutoActivate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTCharacter.AddAmmo
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FStoredAmmo             AmmoToAdd                      (ConstParm, Parm, OutParm, ReferenceParm)

void AUTCharacter::AddAmmo(const struct FStoredAmmo& AmmoToAdd)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCharacter.AddAmmo");

	AUTCharacter_AddAmmo_Params params;
	params.AmmoToAdd = AmmoToAdd;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameObjective.OnObjectStateChanged
// (Native, Protected)

void AUTGameObjective::OnObjectStateChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameObjective.OnObjectStateChanged");

	AUTGameObjective_OnObjectStateChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCTFFlagBase.Reset
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void AUTCTFFlagBase::Reset()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCTFFlagBase.Reset");

	AUTCTFFlagBase_Reset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCTFFlagBase.OnOverlapBegin
// (Native, Public, HasOutParms)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AUTCTFFlagBase::OnOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCTFFlagBase.OnOverlapBegin");

	AUTCTFFlagBase_OnOverlapBegin_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCTFFlagBase.OnObjectWasPickedUp
// (Native, Event, Public, BlueprintEvent)

void AUTCTFFlagBase::OnObjectWasPickedUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCTFFlagBase.OnObjectWasPickedUp");

	AUTCTFFlagBase_OnObjectWasPickedUp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCTFFlagBase.OnFlagChanged
// (Native, Public)

void AUTCTFFlagBase::OnFlagChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCTFFlagBase.OnFlagChanged");

	AUTCTFFlagBase_OnFlagChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameState.UpdateHighlights
// (Native, Event, Public, BlueprintEvent)

void AUTGameState::UpdateHighlights()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameState.UpdateHighlights");

	AUTGameState_UpdateHighlights_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameState.SetWinner
// (Native, Public)
// Parameters:
// class AUTPlayerState*          NewWinner                      (Parm, ZeroConstructor, IsPlainOldData)

void AUTGameState::SetWinner(class AUTPlayerState* NewWinner)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameState.SetWinner");

	AUTGameState_SetWinner_Params params;
	params.NewWinner = NewWinner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameState.SetTimeLimit
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// int                            NewTimeLimit                   (Parm, ZeroConstructor, IsPlainOldData)

void AUTGameState::SetTimeLimit(int NewTimeLimit)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameState.SetTimeLimit");

	AUTGameState_SetTimeLimit_Params params;
	params.NewTimeLimit = NewTimeLimit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameState.SetRespawnWaitTime
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          NewWaitTime                    (Parm, ZeroConstructor, IsPlainOldData)

void AUTGameState::SetRespawnWaitTime(float NewWaitTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameState.SetRespawnWaitTime");

	AUTGameState_SetRespawnWaitTime_Params params;
	params.NewWaitTime = NewWaitTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameState.SetGoalScore
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// int                            NewGoalScore                   (Parm, ZeroConstructor, IsPlainOldData)

void AUTGameState::SetGoalScore(int NewGoalScore)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameState.SetGoalScore");

	AUTGameState_SetGoalScore_Params params;
	params.NewGoalScore = NewGoalScore;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameState.PreventWeaponFire
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTGameState::PreventWeaponFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameState.PreventWeaponFire");

	AUTGameState_PreventWeaponFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTGameState.OnWinnerReceived
// (Native, Public)

void AUTGameState::OnWinnerReceived()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameState.OnWinnerReceived");

	AUTGameState_OnWinnerReceived_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameState.OnUpdateFriendlyLocation
// (Final, Native, Public)

void AUTGameState::OnUpdateFriendlyLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameState.OnUpdateFriendlyLocation");

	AUTGameState_OnUpdateFriendlyLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameState.OnUpdateEnemyLocation
// (Final, Native, Public)

void AUTGameState::OnUpdateEnemyLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameState.OnUpdateEnemyLocation");

	AUTGameState_OnUpdateEnemyLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameState.OnTeamSideSwap
// (Native, Public)

void AUTGameState::OnTeamSideSwap()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameState.OnTeamSideSwap");

	AUTGameState_OnTeamSideSwap_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameState.OnSameTeam
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Actor1                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Actor2                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTGameState::OnSameTeam(class AActor* Actor1, class AActor* Actor2)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameState.OnSameTeam");

	AUTGameState_OnSameTeam_Params params;
	params.Actor1 = Actor1;
	params.Actor2 = Actor2;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTGameState.OnRepRemainingTime
// (Native, Protected)

void AUTGameState::OnRepRemainingTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameState.OnRepRemainingTime");

	AUTGameState_OnRepRemainingTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameState.OnRep_ServerSessionId
// (Native, Protected)

void AUTGameState::OnRep_ServerSessionId()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameState.OnRep_ServerSessionId");

	AUTGameState_OnRep_ServerSessionId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameState.OnRep_ServerName
// (Native, Public)

void AUTGameState::OnRep_ServerName()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameState.OnRep_ServerName");

	AUTGameState_OnRep_ServerName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameState.OnRep_ServerMOTD
// (Native, Public)

void AUTGameState::OnRep_ServerMOTD()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameState.OnRep_ServerMOTD");

	AUTGameState_OnRep_ServerMOTD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameState.OnRep_RemainingTime
// (Native, Public)

void AUTGameState::OnRep_RemainingTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameState.OnRep_RemainingTime");

	AUTGameState_OnRep_RemainingTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameState.OnRep_OverlayEffects
// (Native, Protected)

void AUTGameState::OnRep_OverlayEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameState.OnRep_OverlayEffects");

	AUTGameState_OnRep_OverlayEffects_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameState.OnReceiveHubGuid
// (Final, Native, Protected)

void AUTGameState::OnReceiveHubGuid()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameState.OnReceiveHubGuid");

	AUTGameState_OnReceiveHubGuid_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameState.IsSelectedBoostValid
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AUTPlayerState*          PlayerState                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTGameState::IsSelectedBoostValid(class AUTPlayerState* PlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameState.IsSelectedBoostValid");

	AUTGameState_IsSelectedBoostValid_Params params;
	params.PlayerState = PlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTGameState.IsMatchIntermission
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTGameState::IsMatchIntermission()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameState.IsMatchIntermission");

	AUTGameState_IsMatchIntermission_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTGameState.IsMatchInProgress
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTGameState::IsMatchInProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameState.IsMatchInProgress");

	AUTGameState_IsMatchInProgress_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTGameState.IsMatchInOvertime
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTGameState::IsMatchInOvertime()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameState.IsMatchInOvertime");

	AUTGameState_IsMatchInOvertime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTGameState.IsMatchInCountdown
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTGameState::IsMatchInCountdown()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameState.IsMatchInCountdown");

	AUTGameState_IsMatchInCountdown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTGameState.IsAllowedSpawnPoint
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AUTPlayerState*          Chooser                        (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerStart*            DesiredStart                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTGameState::IsAllowedSpawnPoint(class AUTPlayerState* Chooser, class APlayerStart* DesiredStart)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameState.IsAllowedSpawnPoint");

	AUTGameState_IsAllowedSpawnPoint_Params params;
	params.Chooser = Chooser;
	params.DesiredStart = DesiredStart;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTGameState.HasMatchStarted
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTGameState::HasMatchStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameState.HasMatchStarted");

	AUTGameState_HasMatchStarted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTGameState.GetSelectableBoostByIndex
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AUTPlayerState*          PlayerState                    (Parm, ZeroConstructor, IsPlainOldData)
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* AUTGameState::GetSelectableBoostByIndex(class AUTPlayerState* PlayerState, int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameState.GetSelectableBoostByIndex");

	AUTGameState_GetSelectableBoostByIndex_Params params;
	params.PlayerState = PlayerState;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTGameState.GetRespawnWaitTimeFor
// (Native, Public, BlueprintCallable)
// Parameters:
// class AUTPlayerState*          PS                             (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AUTGameState::GetRespawnWaitTimeFor(class AUTPlayerState* PS)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameState.GetRespawnWaitTimeFor");

	AUTGameState_GetRespawnWaitTimeFor_Params params;
	params.PS = PS;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTGameState.GetPlayerHighlights
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AUTPlayerState*          PlayerState                    (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FText>           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FText> AUTGameState::GetPlayerHighlights(class AUTPlayerState* PlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameState.GetPlayerHighlights");

	AUTGameState_GetPlayerHighlights_Params params;
	params.PlayerState = PlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTGameState.GetImportantPickups
// (Native, Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class AUTPickup*>       PickupList                     (Parm, OutParm, ZeroConstructor, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTGameState::GetImportantPickups(TArray<class AUTPickup*>* PickupList)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameState.GetImportantPickups");

	AUTGameState_GetImportantPickups_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (PickupList != nullptr)
		*PickupList = params.PickupList;

	return params.ReturnValue;
}


// Function UnrealTournament.UTGameState.GetGameModeClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* AUTGameState::GetGameModeClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameState.GetGameModeClass");

	AUTGameState_GetGameModeClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTGameState.ClearHighlights
// (Native, Public, BlueprintCallable)

void AUTGameState::ClearHighlights()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameState.ClearHighlights");

	AUTGameState_ClearHighlights_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameState.ChangeTeamSides
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// unsigned char                  Offset                         (Parm, ZeroConstructor, IsPlainOldData)

void AUTGameState::ChangeTeamSides(unsigned char Offset)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameState.ChangeTeamSides");

	AUTGameState_ChangeTeamSides_Params params;
	params.Offset = Offset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameState.AreAllPlayersReady
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTGameState::AreAllPlayersReady()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameState.AreAllPlayersReady");

	AUTGameState_AreAllPlayersReady_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTGameState.AddOverlayMaterial
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInterface*      NewOverlay                     (Parm, ZeroConstructor, IsPlainOldData)
// class UMaterialInterface*      NewOverlay1P                   (Parm, ZeroConstructor, IsPlainOldData)

void AUTGameState::AddOverlayMaterial(class UMaterialInterface* NewOverlay, class UMaterialInterface* NewOverlay1P)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameState.AddOverlayMaterial");

	AUTGameState_AddOverlayMaterial_Params params;
	params.NewOverlay = NewOverlay;
	params.NewOverlay1P = NewOverlay1P;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameState.AddOverlayEffect
// (BlueprintAuthorityOnly, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FOverlayEffect          NewOverlay                     (ConstParm, Parm, OutParm, ReferenceParm)
// struct FOverlayEffect          NewOverlay1P                   (ConstParm, Parm, OutParm, ReferenceParm)

void AUTGameState::AddOverlayEffect(const struct FOverlayEffect& NewOverlay, const struct FOverlayEffect& NewOverlay1P)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameState.AddOverlayEffect");

	AUTGameState_AddOverlayEffect_Params params;
	params.NewOverlay = NewOverlay;
	params.NewOverlay1P = NewOverlay1P;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameState.AddMinorHighlights
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AUTPlayerState*          PS                             (Parm, ZeroConstructor, IsPlainOldData)

void AUTGameState::AddMinorHighlights(class AUTPlayerState* PS)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameState.AddMinorHighlights");

	AUTGameState_AddMinorHighlights_Params params;
	params.PS = PS;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCTFGameState.GetFlagHolder
// (Native, Public, BlueprintCallable)
// Parameters:
// unsigned char                  TeamNum                        (Parm, ZeroConstructor, IsPlainOldData)
// class AUTPlayerState*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AUTPlayerState* AUTCTFGameState::GetFlagHolder(unsigned char TeamNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCTFGameState.GetFlagHolder");

	AUTCTFGameState_GetFlagHolder_Params params;
	params.TeamNum = TeamNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTCTFGameState.AddScoringPlay
// (BlueprintAuthorityOnly, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FCTFScoringPlay         NewScoringPlay                 (ConstParm, Parm, OutParm, ReferenceParm)

void AUTCTFGameState::AddScoringPlay(const struct FCTFScoringPlay& NewScoringPlay)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCTFGameState.AddScoringPlay");

	AUTCTFGameState_AddScoringPlay_Params params;
	params.NewScoringPlay = NewScoringPlay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCTFBaseGame.SetRedScore
// (Final, Exec, Native, Public)
// Parameters:
// int                            NewScore                       (Parm, ZeroConstructor, IsPlainOldData)

void AUTCTFBaseGame::SetRedScore(int NewScore)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCTFBaseGame.SetRedScore");

	AUTCTFBaseGame_SetRedScore_Params params;
	params.NewScore = NewScore;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCTFBaseGame.SetBlueScore
// (Final, Exec, Native, Public)
// Parameters:
// int                            NewScore                       (Parm, ZeroConstructor, IsPlainOldData)

void AUTCTFBaseGame::SetBlueScore(int NewScore)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCTFBaseGame.SetBlueScore");

	AUTCTFBaseGame_SetBlueScore_Params params;
	params.NewScore = NewScore;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCTFBaseGame.CheatScore
// (Exec, Native, Public)

void AUTCTFBaseGame::CheatScore()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCTFBaseGame.CheatScore");

	AUTCTFBaseGame_CheatScore_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTFlagRunGame.PlayRampUpMusic
// (Native, Public)

void AUTFlagRunGame::PlayRampUpMusic()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTFlagRunGame.PlayRampUpMusic");

	AUTFlagRunGame_PlayRampUpMusic_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTFlagRunGame.PlayEndMusic
// (Native, Public)

void AUTFlagRunGame::PlayEndMusic()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTFlagRunGame.PlayEndMusic");

	AUTFlagRunGame_PlayEndMusic_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTReplicatedEmitter.OnParticlesFinished
// (Native, Public)
// Parameters:
// class UParticleSystemComponent* FinishedPSC                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AUTReplicatedEmitter::OnParticlesFinished(class UParticleSystemComponent* FinishedPSC)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTReplicatedEmitter.OnParticlesFinished");

	AUTReplicatedEmitter_OnParticlesFinished_Params params;
	params.FinishedPSC = FinishedPSC;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTReplicatedEmitter.OnAttachedTo
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// class USceneComponent*         BaseComponent                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AUTReplicatedEmitter::OnAttachedTo(class USceneComponent* BaseComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTReplicatedEmitter.OnAttachedTo");

	AUTReplicatedEmitter_OnAttachedTo_Params params;
	params.BaseComponent = BaseComponent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTDroppedPickup.SetPickupSheen
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          SheenValue                     (Parm, ZeroConstructor, IsPlainOldData)

void AUTDroppedPickup::SetPickupSheen(float SheenValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTDroppedPickup.SetPickupSheen");

	AUTDroppedPickup_SetPickupSheen_Params params;
	params.SheenValue = SheenValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTDroppedPickup.SetInventory
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AUTInventory*            NewInventory                   (Parm, ZeroConstructor, IsPlainOldData)

void AUTDroppedPickup::SetInventory(class AUTInventory* NewInventory)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTDroppedPickup.SetInventory");

	AUTDroppedPickup_SetInventory_Params params;
	params.NewInventory = NewInventory;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTDroppedPickup.ProcessTouch
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class APawn*                   TouchedBy                      (Parm, ZeroConstructor, IsPlainOldData)

void AUTDroppedPickup::ProcessTouch(class APawn* TouchedBy)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTDroppedPickup.ProcessTouch");

	AUTDroppedPickup_ProcessTouch_Params params;
	params.TouchedBy = TouchedBy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTDroppedPickup.PlayTakenEffects
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                   TakenBy                        (Parm, ZeroConstructor, IsPlainOldData)

void AUTDroppedPickup::PlayTakenEffects(class APawn* TakenBy)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTDroppedPickup.PlayTakenEffects");

	AUTDroppedPickup_PlayTakenEffects_Params params;
	params.TakenBy = TakenBy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTDroppedPickup.PhysicsStopped
// (Native, Public, HasOutParms)
// Parameters:
// struct FHitResult              ImpactResult                   (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AUTDroppedPickup::PhysicsStopped(const struct FHitResult& ImpactResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTDroppedPickup.PhysicsStopped");

	AUTDroppedPickup_PhysicsStopped_Params params;
	params.ImpactResult = ImpactResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTDroppedPickup.OnRepWeaponSkin
// (Native, Protected)

void AUTDroppedPickup::OnRepWeaponSkin()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTDroppedPickup.OnRepWeaponSkin");

	AUTDroppedPickup_OnRepWeaponSkin_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTDroppedPickup.OnOverlapBegin
// (Native, Public, HasOutParms)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AUTDroppedPickup::OnOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTDroppedPickup.OnOverlapBegin");

	AUTDroppedPickup_OnOverlapBegin_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTDroppedPickup.InventoryTypeUpdated
// (BlueprintCosmetic, Native, Event, Public, BlueprintEvent)

void AUTDroppedPickup::InventoryTypeUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTDroppedPickup.InventoryTypeUpdated");

	AUTDroppedPickup_InventoryTypeUpdated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTDroppedPickup.GiveTo
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)
// Parameters:
// class APawn*                   Target                         (Parm, ZeroConstructor, IsPlainOldData)

void AUTDroppedPickup::GiveTo(class APawn* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTDroppedPickup.GiveTo");

	AUTDroppedPickup_GiveTo_Params params;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTDroppedPickup.GetPickupSound
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class USoundBase*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class USoundBase* AUTDroppedPickup::GetPickupSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTDroppedPickup.GetPickupSound");

	AUTDroppedPickup_GetPickupSound_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTDroppedPickup.EnableInstigatorTouch
// (Final, Native, Public)

void AUTDroppedPickup::EnableInstigatorTouch()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTDroppedPickup.EnableInstigatorTouch");

	AUTDroppedPickup_EnableInstigatorTouch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTDroppedPickup.DetourWeight
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                   Asker                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          PathDistance                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AUTDroppedPickup::DetourWeight(class APawn* Asker, float PathDistance)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTDroppedPickup.DetourWeight");

	AUTDroppedPickup_DetourWeight_Params params;
	params.Asker = Asker;
	params.PathDistance = PathDistance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTDroppedPickup.CheckTouching
// (Native, Public, BlueprintCallable)

void AUTDroppedPickup::CheckTouching()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTDroppedPickup.CheckTouching");

	AUTDroppedPickup_CheckTouching_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTDroppedPickup.BotDesireability
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                   Asker                          (Parm, ZeroConstructor, IsPlainOldData)
// class AController*             RequestOwner                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          PathDistance                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AUTDroppedPickup::BotDesireability(class APawn* Asker, class AController* RequestOwner, float PathDistance)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTDroppedPickup.BotDesireability");

	AUTDroppedPickup_BotDesireability_Params params;
	params.Asker = Asker;
	params.RequestOwner = RequestOwner;
	params.PathDistance = PathDistance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTDroppedPickup.AllowPickupBy
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class APawn*                   Other                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bDefaultAllowPickup            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTDroppedPickup::AllowPickupBy(class APawn* Other, bool bDefaultAllowPickup)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTDroppedPickup.AllowPickupBy");

	AUTDroppedPickup_AllowPickupBy_Params params;
	params.Other = Other;
	params.bDefaultAllowPickup = bDefaultAllowPickup;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTPickup.WakeUpTimer
// (Final, Native, Public)

void AUTPickup::WakeUpTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPickup.WakeUpTimer");

	AUTPickup_WakeUpTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPickup.WakeUp
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void AUTPickup::WakeUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPickup.WakeUp");

	AUTPickup_WakeUp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPickup.StartSleeping
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void AUTPickup::StartSleeping()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPickup.StartSleeping");

	AUTPickup_StartSleeping_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPickup.SetPickupHidden
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           bNowHidden                     (Parm, ZeroConstructor, IsPlainOldData)

void AUTPickup::SetPickupHidden(bool bNowHidden)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPickup.SetPickupHidden");

	AUTPickup_SetPickupHidden_Params params;
	params.bNowHidden = bNowHidden;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPickup.ProcessTouch
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class APawn*                   TouchedBy                      (Parm, ZeroConstructor, IsPlainOldData)

void AUTPickup::ProcessTouch(class APawn* TouchedBy)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPickup.ProcessTouch");

	AUTPickup_ProcessTouch_Params params;
	params.TouchedBy = TouchedBy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPickup.PlayTakenEffects
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           bReplicate                     (Parm, ZeroConstructor, IsPlainOldData)

void AUTPickup::PlayTakenEffects(bool bReplicate)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPickup.PlayTakenEffects");

	AUTPickup_PlayTakenEffects_Params params;
	params.bReplicate = bReplicate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPickup.PlayRespawnEffects
// (Native, Public, BlueprintCallable)

void AUTPickup::PlayRespawnEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPickup.PlayRespawnEffects");

	AUTPickup_PlayRespawnEffects_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPickup.OnRep_RespawnTimeRemaining
// (Native, Protected)

void AUTPickup::OnRep_RespawnTimeRemaining()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPickup.OnRep_RespawnTimeRemaining");

	AUTPickup_OnRep_RespawnTimeRemaining_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPickup.OnRep_Reset
// (Native, Protected)

void AUTPickup::OnRep_Reset()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPickup.OnRep_Reset");

	AUTPickup_OnRep_Reset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPickup.OnOverlapBegin
// (Native, Public, HasOutParms)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              SweepHitResult                 (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AUTPickup::OnOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepHitResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPickup.OnOverlapBegin");

	AUTPickup_OnOverlapBegin_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepHitResult = SweepHitResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPickup.IsTaken
// (Native, Public, BlueprintCallable)
// Parameters:
// class APawn*                   TestPawn                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTPickup::IsTaken(class APawn* TestPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPickup.IsTaken");

	AUTPickup_IsTaken_Params params;
	params.TestPawn = TestPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTPickup.IsSuperDesireable
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*             RequestOwner                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          CalculatedDesire               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTPickup::IsSuperDesireable(class AController* RequestOwner, float CalculatedDesire)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPickup.IsSuperDesireable");

	AUTPickup_IsSuperDesireable_Params params;
	params.RequestOwner = RequestOwner;
	params.CalculatedDesire = CalculatedDesire;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTPickup.GiveTo
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)
// Parameters:
// class APawn*                   Target                         (Parm, ZeroConstructor, IsPlainOldData)

void AUTPickup::GiveTo(class APawn* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPickup.GiveTo");

	AUTPickup_GiveTo_Params params;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPickup.GetRespawnTimeOffset
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APawn*                   Asker                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AUTPickup::GetRespawnTimeOffset(class APawn* Asker)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPickup.GetRespawnTimeOffset");

	AUTPickup_GetRespawnTimeOffset_Params params;
	params.Asker = Asker;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTPickup.GetMinimapIcon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FCanvasIcon             ReturnValue                    (Parm, OutParm, ReturnParm)

struct FCanvasIcon AUTPickup::GetMinimapIcon()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPickup.GetMinimapIcon");

	AUTPickup_GetMinimapIcon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTPickup.FlashOnMinimap
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTPickup::FlashOnMinimap()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPickup.FlashOnMinimap");

	AUTPickup_FlashOnMinimap_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTPickup.DetourWeight
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                   Asker                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          PathDistance                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AUTPickup::DetourWeight(class APawn* Asker, float PathDistance)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPickup.DetourWeight");

	AUTPickup_DetourWeight_Params params;
	params.Asker = Asker;
	params.PathDistance = PathDistance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTPickup.BotDesireability
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                   Asker                          (Parm, ZeroConstructor, IsPlainOldData)
// class AController*             RequestOwner                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          PathDistance                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AUTPickup::BotDesireability(class APawn* Asker, class AController* RequestOwner, float PathDistance)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPickup.BotDesireability");

	AUTPickup_BotDesireability_Params params;
	params.Asker = Asker;
	params.RequestOwner = RequestOwner;
	params.PathDistance = PathDistance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTPickup.AllowPickupBy
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                   Other                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bDefaultAllowPickup            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTPickup::AllowPickupBy(class APawn* Other, bool bDefaultAllowPickup)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPickup.AllowPickupBy");

	AUTPickup_AllowPickupBy_Params params;
	params.Other = Other;
	params.bDefaultAllowPickup = bDefaultAllowPickup;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTPickupHealth.GetHealMax
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AUTCharacter*            P                              (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AUTPickupHealth::GetHealMax(class AUTCharacter* P)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPickupHealth.GetHealMax");

	AUTPickupHealth_GetHealMax_Params params;
	params.P = P;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTTeamInfo.UpdateEnemyInfo
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class APawn*                   NewEnemy                       (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EAIEnemyUpdateType> UpdateType                     (Parm, ZeroConstructor, IsPlainOldData)

void AUTTeamInfo::UpdateEnemyInfo(class APawn* NewEnemy, TEnumAsByte<EAIEnemyUpdateType> UpdateType)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTTeamInfo.UpdateEnemyInfo");

	AUTTeamInfo_UpdateEnemyInfo_Params params;
	params.NewEnemy = NewEnemy;
	params.UpdateType = UpdateType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTTeamInfo.RemoveFromTeam
// (Native, Public, BlueprintCallable)
// Parameters:
// class AController*             C                              (Parm, ZeroConstructor, IsPlainOldData)

void AUTTeamInfo::RemoveFromTeam(class AController* C)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTTeamInfo.RemoveFromTeam");

	AUTTeamInfo_RemoveFromTeam_Params params;
	params.C = C;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTTeamInfo.ReceivedTeamIndex
// (Native, Public)

void AUTTeamInfo::ReceivedTeamIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTTeamInfo.ReceivedTeamIndex");

	AUTTeamInfo_ReceivedTeamIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTTeamInfo.NotifyObjectiveEvent
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  InObjective                    (Parm, ZeroConstructor, IsPlainOldData)
// class AController*             InstigatedBy                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   EventName                      (Parm, ZeroConstructor, IsPlainOldData)

void AUTTeamInfo::NotifyObjectiveEvent(class AActor* InObjective, class AController* InstigatedBy, const struct FName& EventName)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTTeamInfo.NotifyObjectiveEvent");

	AUTTeamInfo_NotifyObjectiveEvent_Params params;
	params.InObjective = InObjective;
	params.InstigatedBy = InstigatedBy;
	params.EventName = EventName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTTeamInfo.GetStatsValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   StatsName                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AUTTeamInfo::GetStatsValue(const struct FName& StatsName)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTTeamInfo.GetStatsValue");

	AUTTeamInfo_GetStatsValue_Params params;
	params.StatsName = StatsName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTTeamInfo.AddToTeam
// (Native, Public, BlueprintCallable)
// Parameters:
// class AController*             C                              (Parm, ZeroConstructor, IsPlainOldData)

void AUTTeamInfo::AddToTeam(class AController* C)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTTeamInfo.AddToTeam");

	AUTTeamInfo_AddToTeam_Params params;
	params.C = C;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTDroppedHealth.GetHealMax
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AUTCharacter*            P                              (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AUTDroppedHealth::GetHealMax(class AUTCharacter* P)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTDroppedHealth.GetHealMax");

	AUTDroppedHealth_GetHealMax_Params params;
	params.P = P;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTFlagRunPvEGame.EscalateMonsters
// (Native, Public)

void AUTFlagRunPvEGame::EscalateMonsters()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTFlagRunPvEGame.EscalateMonsters");

	AUTFlagRunPvEGame_EscalateMonsters_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTShowdownGame.StartIntermission
// (Native, Protected)

void AUTShowdownGame::StartIntermission()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTShowdownGame.StartIntermission");

	AUTShowdownGame_StartIntermission_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTShowdownGame.AddDamagePing
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AUTCharacter*            Char                           (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  VisibleToTeam                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          LifeTime                       (Parm, ZeroConstructor, IsPlainOldData)

void AUTShowdownGame::AddDamagePing(class AUTCharacter* Char, unsigned char VisibleToTeam, float LifeTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTShowdownGame.AddDamagePing");

	AUTShowdownGame_AddDamagePing_Params params;
	params.Char = Char;
	params.VisibleToTeam = VisibleToTeam;
	params.LifeTime = LifeTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTTimeDemoGameMode.StopTimeDemo
// (Event, Public, BlueprintEvent)

void AUTTimeDemoGameMode::StopTimeDemo()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTTimeDemoGameMode.StopTimeDemo");

	AUTTimeDemoGameMode_StopTimeDemo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTTimeDemoGameMode.StartTimeDemo
// (Event, Public, BlueprintEvent)

void AUTTimeDemoGameMode::StartTimeDemo()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTTimeDemoGameMode.StartTimeDemo");

	AUTTimeDemoGameMode_StartTimeDemo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLobbyPlayerState.ServerJoinMatch
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AUTLobbyMatchInfo*       MatchToJoin                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAsSpectator                   (Parm, ZeroConstructor, IsPlainOldData)

void AUTLobbyPlayerState::ServerJoinMatch(class AUTLobbyMatchInfo* MatchToJoin, bool bAsSpectator)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLobbyPlayerState.ServerJoinMatch");

	AUTLobbyPlayerState_ServerJoinMatch_Params params;
	params.MatchToJoin = MatchToJoin;
	params.bAsSpectator = bAsSpectator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLobbyPlayerState.ServerDestroyOrLeaveMatch
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AUTLobbyPlayerState::ServerDestroyOrLeaveMatch()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLobbyPlayerState.ServerDestroyOrLeaveMatch");

	AUTLobbyPlayerState_ServerDestroyOrLeaveMatch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLobbyPlayerState.ServerCreateInstance
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FString                 CustomName                     (Parm, ZeroConstructor)
// struct FString                 RulesetTag                     (Parm, ZeroConstructor)
// struct FString                 StartingMap                    (Parm, ZeroConstructor)
// bool                           bIsInParty                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRankLocked                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSpectatable                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bPrivateMatch                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bBeginnerMatch                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bUseBots                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            BotDifficulty                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRequireFilled                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bHostControl                   (Parm, ZeroConstructor, IsPlainOldData)

void AUTLobbyPlayerState::ServerCreateInstance(const struct FString& CustomName, const struct FString& RulesetTag, const struct FString& StartingMap, bool bIsInParty, bool bRankLocked, bool bSpectatable, bool bPrivateMatch, bool bBeginnerMatch, bool bUseBots, int BotDifficulty, bool bRequireFilled, bool bHostControl)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLobbyPlayerState.ServerCreateInstance");

	AUTLobbyPlayerState_ServerCreateInstance_Params params;
	params.CustomName = CustomName;
	params.RulesetTag = RulesetTag;
	params.StartingMap = StartingMap;
	params.bIsInParty = bIsInParty;
	params.bRankLocked = bRankLocked;
	params.bSpectatable = bSpectatable;
	params.bPrivateMatch = bPrivateMatch;
	params.bBeginnerMatch = bBeginnerMatch;
	params.bUseBots = bUseBots;
	params.BotDifficulty = BotDifficulty;
	params.bRequireFilled = bRequireFilled;
	params.bHostControl = bHostControl;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLobbyPlayerState.ServerCreateCustomInstance
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FString                 CustomName                     (Parm, ZeroConstructor)
// struct FString                 GameMode                       (Parm, ZeroConstructor)
// struct FString                 StartingMap                    (Parm, ZeroConstructor)
// bool                           bIsInParty                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 Description                    (Parm, ZeroConstructor)
// TArray<struct FString>         GameOptions                    (ConstParm, Parm, ZeroConstructor, ReferenceParm)
// int                            DesiredPlayerCount             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bTeamGame                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRankLocked                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSpectatable                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bPrivateMatch                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bBeginnerMatch                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bUseBots                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            BotDifficulty                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRequireFilled                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bHostControl                   (Parm, ZeroConstructor, IsPlainOldData)

void AUTLobbyPlayerState::ServerCreateCustomInstance(const struct FString& CustomName, const struct FString& GameMode, const struct FString& StartingMap, bool bIsInParty, const struct FString& Description, TArray<struct FString> GameOptions, int DesiredPlayerCount, bool bTeamGame, bool bRankLocked, bool bSpectatable, bool bPrivateMatch, bool bBeginnerMatch, bool bUseBots, int BotDifficulty, bool bRequireFilled, bool bHostControl)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLobbyPlayerState.ServerCreateCustomInstance");

	AUTLobbyPlayerState_ServerCreateCustomInstance_Params params;
	params.CustomName = CustomName;
	params.GameMode = GameMode;
	params.StartingMap = StartingMap;
	params.bIsInParty = bIsInParty;
	params.Description = Description;
	params.GameOptions = GameOptions;
	params.DesiredPlayerCount = DesiredPlayerCount;
	params.bTeamGame = bTeamGame;
	params.bRankLocked = bRankLocked;
	params.bSpectatable = bSpectatable;
	params.bPrivateMatch = bPrivateMatch;
	params.bBeginnerMatch = bBeginnerMatch;
	params.bUseBots = bUseBots;
	params.BotDifficulty = BotDifficulty;
	params.bRequireFilled = bRequireFilled;
	params.bHostControl = bHostControl;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLobbyPlayerState.Server_SendDataBlock
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// int                            bLock                          (Parm, ZeroConstructor, IsPlainOldData)

void AUTLobbyPlayerState::Server_SendDataBlock(int bLock)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLobbyPlayerState.Server_SendDataBlock");

	AUTLobbyPlayerState_Server_SendDataBlock_Params params;
	params.bLock = bLock;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLobbyPlayerState.Server_ReadyToBeginDataPush
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AUTLobbyPlayerState::Server_ReadyToBeginDataPush()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLobbyPlayerState.Server_ReadyToBeginDataPush");

	AUTLobbyPlayerState_Server_ReadyToBeginDataPush_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLobbyPlayerState.OnRep_CurrentMatch
// (Final, Native, Protected)

void AUTLobbyPlayerState::OnRep_CurrentMatch()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLobbyPlayerState.OnRep_CurrentMatch");

	AUTLobbyPlayerState_OnRep_CurrentMatch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLobbyPlayerState.NotifyBeginnerAutoLock
// (Net, NetReliable, Native, Event, Public, NetClient)

void AUTLobbyPlayerState::NotifyBeginnerAutoLock()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLobbyPlayerState.NotifyBeginnerAutoLock");

	AUTLobbyPlayerState_NotifyBeginnerAutoLock_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLobbyPlayerState.ClientMatchError
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FText                   MatchErrorMessage              (ConstParm, Parm, ReferenceParm)
// int                            OptionalInt                    (Parm, ZeroConstructor, IsPlainOldData)

void AUTLobbyPlayerState::ClientMatchError(const struct FText& MatchErrorMessage, int OptionalInt)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLobbyPlayerState.ClientMatchError");

	AUTLobbyPlayerState_ClientMatchError_Params params;
	params.MatchErrorMessage = MatchErrorMessage;
	params.OptionalInt = OptionalInt;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLobbyPlayerState.ClientConnectToInstance
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FString                 GameInstanceGUIDString         (Parm, ZeroConstructor)
// int                            InDesiredTeam                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAsSpectator                   (Parm, ZeroConstructor, IsPlainOldData)

void AUTLobbyPlayerState::ClientConnectToInstance(const struct FString& GameInstanceGUIDString, int InDesiredTeam, bool bAsSpectator)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLobbyPlayerState.ClientConnectToInstance");

	AUTLobbyPlayerState_ClientConnectToInstance_Params params;
	params.GameInstanceGUIDString = GameInstanceGUIDString;
	params.InDesiredTeam = InDesiredTeam;
	params.bAsSpectator = bAsSpectator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLobbyPlayerState.ClientAddedToMatch
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// bool                           bIsHost                        (Parm, ZeroConstructor, IsPlainOldData)

void AUTLobbyPlayerState::ClientAddedToMatch(bool bIsHost)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLobbyPlayerState.ClientAddedToMatch");

	AUTLobbyPlayerState_ClientAddedToMatch_Params params;
	params.bIsHost = bIsHost;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLobbyPlayerState.Client_ReceiveBlock
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// int                            bLock                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FAllowedData            Data                           (Parm)

void AUTLobbyPlayerState::Client_ReceiveBlock(int bLock, const struct FAllowedData& Data)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLobbyPlayerState.Client_ReceiveBlock");

	AUTLobbyPlayerState_Client_ReceiveBlock_Params params;
	params.bLock = bLock;
	params.Data = Data;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLobbyPlayerState.Client_BeginDataPush
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// int                            ExpectedSendCount              (Parm, ZeroConstructor, IsPlainOldData)

void AUTLobbyPlayerState::Client_BeginDataPush(int ExpectedSendCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLobbyPlayerState.Client_BeginDataPush");

	AUTLobbyPlayerState_Client_BeginDataPush_Params params;
	params.ExpectedSendCount = ExpectedSendCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLobbyPC.SetLobbyDebugLevel
// (Exec, Native, Public)
// Parameters:
// int                            NewLevel                       (Parm, ZeroConstructor, IsPlainOldData)

void AUTLobbyPC::SetLobbyDebugLevel(int NewLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLobbyPC.SetLobbyDebugLevel");

	AUTLobbyPC_SetLobbyDebugLevel_Params params;
	params.NewLevel = NewLevel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLobbyPC.ServerSendRedirectCount
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AUTLobbyPC::ServerSendRedirectCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLobbyPC.ServerSendRedirectCount");

	AUTLobbyPC_ServerSendRedirectCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLobbyPC.ServerSendAllRedirects
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AUTLobbyPC::ServerSendAllRedirects()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLobbyPC.ServerSendAllRedirects");

	AUTLobbyPC_ServerSendAllRedirects_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLobbyPC.ServerRconKillMatch
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AUTLobbyMatchInfo*       MatchToKill                    (Parm, ZeroConstructor, IsPlainOldData)

void AUTLobbyPC::ServerRconKillMatch(class AUTLobbyMatchInfo* MatchToKill)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLobbyPC.ServerRconKillMatch");

	AUTLobbyPC_ServerRconKillMatch_Params params;
	params.MatchToKill = MatchToKill;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLobbyPC.ServerChat
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FName                   Destination                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 Message                        (Parm, ZeroConstructor)

void AUTLobbyPC::ServerChat(const struct FName& Destination, const struct FString& Message)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLobbyPC.ServerChat");

	AUTLobbyPC_ServerChat_Params params;
	params.Destination = Destination;
	params.Message = Message;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLobbyPC.MatchChat
// (Exec, Native, Public)
// Parameters:
// struct FString                 Message                        (Parm, ZeroConstructor)

void AUTLobbyPC::MatchChat(const struct FString& Message)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLobbyPC.MatchChat");

	AUTLobbyPC_MatchChat_Params params;
	params.Message = Message;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLobbyPC.GlobalChat
// (Exec, Native, Public)
// Parameters:
// struct FString                 Message                        (Parm, ZeroConstructor)

void AUTLobbyPC::GlobalChat(const struct FString& Message)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLobbyPC.GlobalChat");

	AUTLobbyPC_GlobalChat_Params params;
	params.Message = Message;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLobbyPC.ClientReceiveRedirectCount
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// int                            NewCount                       (Parm, ZeroConstructor, IsPlainOldData)

void AUTLobbyPC::ClientReceiveRedirectCount(int NewCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLobbyPC.ClientReceiveRedirectCount");

	AUTLobbyPC_ClientReceiveRedirectCount_Params params;
	params.NewCount = NewCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLobbyPC.ClientReceiveRedirect
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FPackageRedirectReference Redirect                       (ConstParm, Parm, ReferenceParm)

void AUTLobbyPC::ClientReceiveRedirect(const struct FPackageRedirectReference& Redirect)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLobbyPC.ClientReceiveRedirect");

	AUTLobbyPC_ClientReceiveRedirect_Params params;
	params.Redirect = Redirect;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTReplicatedGameRuleset.OnReceiveData
// (Final, Native, Protected)

void AUTReplicatedGameRuleset::OnReceiveData()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTReplicatedGameRuleset.OnReceiveData");

	AUTReplicatedGameRuleset_OnReceiveData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTReplicatedGameRuleset.GetDescription
// (Native, Public)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString AUTReplicatedGameRuleset::GetDescription()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTReplicatedGameRuleset.GetDescription");

	AUTReplicatedGameRuleset_GetDescription_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTReplicatedGameRuleset.GetDefaultGameModeObject
// (Native, Public)
// Parameters:
// class AUTGameMode*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AUTGameMode* AUTReplicatedGameRuleset::GetDefaultGameModeObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTReplicatedGameRuleset.GetDefaultGameModeObject");

	AUTReplicatedGameRuleset_GetDefaultGameModeObject_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTReplicatedGameRuleset.BuildSlateBadge
// (Native, Public)

void AUTReplicatedGameRuleset::BuildSlateBadge()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTReplicatedGameRuleset.BuildSlateBadge");

	AUTReplicatedGameRuleset_BuildSlateBadge_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTHUDWidget.ShouldDraw
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                           bShowScores                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUTHUDWidget::ShouldDraw(bool bShowScores)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUDWidget.ShouldDraw");

	UUTHUDWidget_ShouldDraw_Params params;
	params.bShowScores = bShowScores;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTHUDWidget.SetHidden
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           bIsHidden                      (Parm, ZeroConstructor, IsPlainOldData)

void UUTHUDWidget::SetHidden(bool bIsHidden)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUDWidget.SetHidden");

	UUTHUDWidget_SetHidden_Params params;
	params.bIsHidden = bIsHidden;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTHUDWidget.RenderObj_TextureAtWithRotation
// (Native, Protected, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FHUDRenderObject_Texture TextureObject                  (Parm, OutParm)
// struct FVector2D               Postion                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          Rotation                       (Parm, ZeroConstructor, IsPlainOldData)

void UUTHUDWidget::RenderObj_TextureAtWithRotation(const struct FVector2D& Postion, float Rotation, struct FHUDRenderObject_Texture* TextureObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUDWidget.RenderObj_TextureAtWithRotation");

	UUTHUDWidget_RenderObj_TextureAtWithRotation_Params params;
	params.Postion = Postion;
	params.Rotation = Rotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (TextureObject != nullptr)
		*TextureObject = params.TextureObject;
}


// Function UnrealTournament.UTHUDWidget.RenderObj_TextureAt
// (Native, Protected, HasOutParms, BlueprintCallable)
// Parameters:
// struct FHUDRenderObject_Texture TextureObject                  (Parm, OutParm)
// float                          X                              (Parm, ZeroConstructor, IsPlainOldData)
// float                          Y                              (Parm, ZeroConstructor, IsPlainOldData)
// float                          Width                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          Height                         (Parm, ZeroConstructor, IsPlainOldData)

void UUTHUDWidget::RenderObj_TextureAt(float X, float Y, float Width, float Height, struct FHUDRenderObject_Texture* TextureObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUDWidget.RenderObj_TextureAt");

	UUTHUDWidget_RenderObj_TextureAt_Params params;
	params.X = X;
	params.Y = Y;
	params.Width = Width;
	params.Height = Height;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (TextureObject != nullptr)
		*TextureObject = params.TextureObject;
}


// Function UnrealTournament.UTHUDWidget.RenderObj_Texture
// (Native, Protected, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FHUDRenderObject_Texture TextureObject                  (Parm, OutParm)
// struct FVector2D               DrawOffset                     (Parm, ZeroConstructor, IsPlainOldData)

void UUTHUDWidget::RenderObj_Texture(const struct FVector2D& DrawOffset, struct FHUDRenderObject_Texture* TextureObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUDWidget.RenderObj_Texture");

	UUTHUDWidget_RenderObj_Texture_Params params;
	params.DrawOffset = DrawOffset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (TextureObject != nullptr)
		*TextureObject = params.TextureObject;
}


// Function UnrealTournament.UTHUDWidget.RenderObj_TextAt
// (Native, Protected, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FHUDRenderObject_Text   TextObject                     (Parm, OutParm)
// float                          X                              (Parm, ZeroConstructor, IsPlainOldData)
// float                          Y                              (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector2D UUTHUDWidget::RenderObj_TextAt(float X, float Y, struct FHUDRenderObject_Text* TextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUDWidget.RenderObj_TextAt");

	UUTHUDWidget_RenderObj_TextAt_Params params;
	params.X = X;
	params.Y = Y;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (TextObject != nullptr)
		*TextObject = params.TextObject;

	return params.ReturnValue;
}


// Function UnrealTournament.UTHUDWidget.RenderObj_Text
// (Native, Protected, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FHUDRenderObject_Text   TextObject                     (Parm, OutParm)
// struct FVector2D               DrawOffset                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector2D UUTHUDWidget::RenderObj_Text(const struct FVector2D& DrawOffset, struct FHUDRenderObject_Text* TextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUDWidget.RenderObj_Text");

	UUTHUDWidget_RenderObj_Text_Params params;
	params.DrawOffset = DrawOffset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (TextObject != nullptr)
		*TextObject = params.TextObject;

	return params.ReturnValue;
}


// Function UnrealTournament.UTHUDWidget.DrawTexture
// (Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UTexture*                Texture                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          X                              (Parm, ZeroConstructor, IsPlainOldData)
// float                          Y                              (Parm, ZeroConstructor, IsPlainOldData)
// float                          Width                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          Height                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          MaterialU                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          MaterialV                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          MaterialUL                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          MaterialVL                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          DrawOpacity                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            DrawColor                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D               RenderOffset                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          Rotation                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D               RotPivot                       (Parm, ZeroConstructor, IsPlainOldData)

void UUTHUDWidget::DrawTexture(class UTexture* Texture, float X, float Y, float Width, float Height, float MaterialU, float MaterialV, float MaterialUL, float MaterialVL, float DrawOpacity, const struct FLinearColor& DrawColor, const struct FVector2D& RenderOffset, float Rotation, const struct FVector2D& RotPivot)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUDWidget.DrawTexture");

	UUTHUDWidget_DrawTexture_Params params;
	params.Texture = Texture;
	params.X = X;
	params.Y = Y;
	params.Width = Width;
	params.Height = Height;
	params.MaterialU = MaterialU;
	params.MaterialV = MaterialV;
	params.MaterialUL = MaterialUL;
	params.MaterialVL = MaterialVL;
	params.DrawOpacity = DrawOpacity;
	params.DrawColor = DrawColor;
	params.RenderOffset = RenderOffset;
	params.Rotation = Rotation;
	params.RotPivot = RotPivot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTHUDWidget.DrawText
// (Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FText                   Text                           (Parm)
// float                          X                              (Parm, ZeroConstructor, IsPlainOldData)
// float                          Y                              (Parm, ZeroConstructor, IsPlainOldData)
// class UFont*                   Font                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bDrawShadow                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D               ShadowDirection                (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            ShadowColor                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bDrawOutline                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            OutlineColor                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          TextScale                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          DrawOpacity                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            DrawColor                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            BackColor                      (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ETextHorzPos>      TextHorzAlignment              (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ETextVertPos>      TextVertAlignment              (Parm, ZeroConstructor, IsPlainOldData)
// struct FFontRenderInfo         RenderInfo                     (ConstParm, Parm, OutParm, ReferenceParm)
// struct FVector2D               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector2D UUTHUDWidget::DrawText(const struct FText& Text, float X, float Y, class UFont* Font, bool bDrawShadow, const struct FVector2D& ShadowDirection, const struct FLinearColor& ShadowColor, bool bDrawOutline, const struct FLinearColor& OutlineColor, float TextScale, float DrawOpacity, const struct FLinearColor& DrawColor, const struct FLinearColor& BackColor, TEnumAsByte<ETextHorzPos> TextHorzAlignment, TEnumAsByte<ETextVertPos> TextVertAlignment, const struct FFontRenderInfo& RenderInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUDWidget.DrawText");

	UUTHUDWidget_DrawText_Params params;
	params.Text = Text;
	params.X = X;
	params.Y = Y;
	params.Font = Font;
	params.bDrawShadow = bDrawShadow;
	params.ShadowDirection = ShadowDirection;
	params.ShadowColor = ShadowColor;
	params.bDrawOutline = bDrawOutline;
	params.OutlineColor = OutlineColor;
	params.TextScale = TextScale;
	params.DrawOpacity = DrawOpacity;
	params.DrawColor = DrawColor;
	params.BackColor = BackColor;
	params.TextHorzAlignment = TextHorzAlignment;
	params.TextVertAlignment = TextVertAlignment;
	params.RenderInfo = RenderInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTHUDWidget.DrawMaterial
// (Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UMaterialInterface*      Material                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          X                              (Parm, ZeroConstructor, IsPlainOldData)
// float                          Y                              (Parm, ZeroConstructor, IsPlainOldData)
// float                          Width                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          Height                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          MaterialU                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          MaterialV                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          MaterialUWidth                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          MaterialVHeight                (Parm, ZeroConstructor, IsPlainOldData)
// float                          DrawOpacity                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            DrawColor                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D               RenderOffset                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          Rotation                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D               RotPivot                       (Parm, ZeroConstructor, IsPlainOldData)

void UUTHUDWidget::DrawMaterial(class UMaterialInterface* Material, float X, float Y, float Width, float Height, float MaterialU, float MaterialV, float MaterialUWidth, float MaterialVHeight, float DrawOpacity, const struct FLinearColor& DrawColor, const struct FVector2D& RenderOffset, float Rotation, const struct FVector2D& RotPivot)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUDWidget.DrawMaterial");

	UUTHUDWidget_DrawMaterial_Params params;
	params.Material = Material;
	params.X = X;
	params.Y = Y;
	params.Width = Width;
	params.Height = Height;
	params.MaterialU = MaterialU;
	params.MaterialV = MaterialV;
	params.MaterialUWidth = MaterialUWidth;
	params.MaterialVHeight = MaterialVHeight;
	params.DrawOpacity = DrawOpacity;
	params.DrawColor = DrawColor;
	params.RenderOffset = RenderOffset;
	params.Rotation = Rotation;
	params.RotPivot = RotPivot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTHUDWidget.DrawAllRenderObjects
// (Native, Protected, HasDefaults, BlueprintCallable)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D               DrawOffset                     (Parm, ZeroConstructor, IsPlainOldData)

void UUTHUDWidget::DrawAllRenderObjects(float DeltaTime, const struct FVector2D& DrawOffset)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUDWidget.DrawAllRenderObjects");

	UUTHUDWidget_DrawAllRenderObjects_Params params;
	params.DeltaTime = DeltaTime;
	params.DrawOffset = DrawOffset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTHUDWidget.Draw
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UUTHUDWidget::Draw(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUDWidget.Draw");

	UUTHUDWidget_Draw_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTHUDWidget.CalcRotatedDrawLocation
// (Final, Native, Protected, HasDefaults, BlueprintCallable)
// Parameters:
// float                          DistanceInPixels               (Parm, ZeroConstructor, IsPlainOldData)
// float                          Angle                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector2D UUTHUDWidget::CalcRotatedDrawLocation(float DistanceInPixels, float Angle)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUDWidget.CalcRotatedDrawLocation");

	UUTHUDWidget_CalcRotatedDrawLocation_Params params;
	params.DistanceInPixels = DistanceInPixels;
	params.Angle = Angle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTHUDWidget.ApplyHUDColor
// (Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor            DrawColor                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FLinearColor UUTHUDWidget::ApplyHUDColor(const struct FLinearColor& DrawColor)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUDWidget.ApplyHUDColor");

	UUTHUDWidget_ApplyHUDColor_Params params;
	params.DrawColor = DrawColor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTInventory.StackPickup
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AUTInventory*            ContainedInv                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTInventory::StackPickup(class AUTInventory* ContainedInv)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTInventory.StackPickup");

	AUTInventory_StackPickup_Params params;
	params.ContainedInv = ContainedInv;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTInventory.ShouldDisplayHitEffect
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// int                            AttemptedDamage                (Parm, ZeroConstructor, IsPlainOldData)
// int                            DamageAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            FinalHealth                    (Parm, ZeroConstructor, IsPlainOldData)
// int                            FinalArmor                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTInventory::ShouldDisplayHitEffect(int AttemptedDamage, int DamageAmount, int FinalHealth, int FinalArmor)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTInventory.ShouldDisplayHitEffect");

	AUTInventory_ShouldDisplayHitEffect_Params params;
	params.AttemptedDamage = AttemptedDamage;
	params.DamageAmount = DamageAmount;
	params.FinalHealth = FinalHealth;
	params.FinalArmor = FinalArmor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTInventory.PreventHeadShot
// (Native, Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 HitLocation                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ShotDirection                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          WeaponHeadScaling              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bConsumeArmor                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTInventory::PreventHeadShot(const struct FVector& HitLocation, const struct FVector& ShotDirection, float WeaponHeadScaling, bool bConsumeArmor)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTInventory.PreventHeadShot");

	AUTInventory_PreventHeadShot_Params params;
	params.HitLocation = HitLocation;
	params.ShotDirection = ShotDirection;
	params.WeaponHeadScaling = WeaponHeadScaling;
	params.bConsumeArmor = bConsumeArmor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTInventory.PlayArmorEffects
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class AUTCharacter*            HitPawn                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTInventory::PlayArmorEffects(class AUTCharacter* HitPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTInventory.PlayArmorEffects");

	AUTInventory_PlayArmorEffects_Params params;
	params.HitPawn = HitPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTInventory.OwnerEvent
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// struct FName                   EventName                      (Parm, ZeroConstructor, IsPlainOldData)

void AUTInventory::OwnerEvent(const struct FName& EventName)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTInventory.OwnerEvent");

	AUTInventory_OwnerEvent_Params params;
	params.EventName = EventName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTInventory.OverrideGiveTo
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AUTPickup*               Pickup                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTInventory::OverrideGiveTo(class AUTPickup* Pickup)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTInventory.OverrideGiveTo");

	AUTInventory_OverrideGiveTo_Params params;
	params.Pickup = Pickup;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTInventory.OnViewTargetChange
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AUTPlayerController*     NewViewTarget                  (Parm, ZeroConstructor, IsPlainOldData)

void AUTInventory::OnViewTargetChange(class AUTPlayerController* NewViewTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTInventory.OnViewTargetChange");

	AUTInventory_OnViewTargetChange_Params params;
	params.NewViewTarget = NewViewTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTInventory.ModifyDamageTaken
// (Native, Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// int                            Damage                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector                 Momentum                       (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// class AUTInventory*            HitArmor                       (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// class AController*             InstigatedBy                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              HitInfo                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  DamageType                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTInventory::ModifyDamageTaken(class AController* InstigatedBy, const struct FHitResult& HitInfo, class AActor* DamageCauser, class UClass* DamageType, int* Damage, struct FVector* Momentum, class AUTInventory** HitArmor)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTInventory.ModifyDamageTaken");

	AUTInventory_ModifyDamageTaken_Params params;
	params.InstigatedBy = InstigatedBy;
	params.HitInfo = HitInfo;
	params.DamageCauser = DamageCauser;
	params.DamageType = DamageType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Damage != nullptr)
		*Damage = params.Damage;
	if (Momentum != nullptr)
		*Momentum = params.Momentum;
	if (HitArmor != nullptr)
		*HitArmor = params.HitArmor;

	return params.ReturnValue;
}


// Function UnrealTournament.UTInventory.HUDShouldRender
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUTHUDWidget*            TargetWidget                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTInventory::HUDShouldRender(class UUTHUDWidget* TargetWidget)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTInventory.HUDShouldRender");

	AUTInventory_HUDShouldRender_Params params;
	params.TargetWidget = TargetWidget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTInventory.HandleGivenTo
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AUTCharacter*            Character                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTInventory::HandleGivenTo(class AUTCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTInventory.HandleGivenTo");

	AUTInventory_HandleGivenTo_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTInventory.GetPickupMeshTemplate
// (Native, Event, Public, HasOutParms, HasDefaults, BlueprintEvent, Const)
// Parameters:
// struct FVector                 OverrideScale                  (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class UMeshComponent*          ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UMeshComponent* AUTInventory::GetPickupMeshTemplate(struct FVector* OverrideScale)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTInventory.GetPickupMeshTemplate");

	AUTInventory_GetPickupMeshTemplate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OverrideScale != nullptr)
		*OverrideScale = params.OverrideScale;

	return params.ReturnValue;
}


// Function UnrealTournament.UTInventory.GetHUDText
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText AUTInventory::GetHUDText()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTInventory.GetHUDText");

	AUTInventory_GetHUDText_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTInventory.GetEffectiveHealthModifier
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                           bOnlyVisible                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AUTInventory::GetEffectiveHealthModifier(bool bOnlyVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTInventory.GetEffectiveHealthModifier");

	AUTInventory_GetEffectiveHealthModifier_Params params;
	params.bOnlyVisible = bOnlyVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTInventory.GetBoostPowerRating
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class AUTBot*                  B                              (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AUTInventory::GetBoostPowerRating(class AUTBot* B)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTInventory.GetBoostPowerRating");

	AUTInventory_GetBoostPowerRating_Params params;
	params.B = B;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTInventory.eventRemoved
// (Event, Protected, BlueprintEvent)

void AUTInventory::eventRemoved()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTInventory.eventRemoved");

	AUTInventory_eventRemoved_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTInventory.eventGivenTo
// (BlueprintAuthorityOnly, Event, Protected, BlueprintEvent)
// Parameters:
// class AUTCharacter*            NewOwner                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAutoActivate                  (Parm, ZeroConstructor, IsPlainOldData)

void AUTInventory::eventGivenTo(class AUTCharacter* NewOwner, bool bAutoActivate)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTInventory.eventGivenTo");

	AUTInventory_eventGivenTo_Params params;
	params.NewOwner = NewOwner;
	params.bAutoActivate = bAutoActivate;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTInventory.eventClientRemoved
// (Event, Protected, BlueprintEvent)

void AUTInventory::eventClientRemoved()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTInventory.eventClientRemoved");

	AUTInventory_eventClientRemoved_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTInventory.eventClientGivenTo
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                           bAutoActivate                  (Parm, ZeroConstructor, IsPlainOldData)

void AUTInventory::eventClientGivenTo(bool bAutoActivate)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTInventory.eventClientGivenTo");

	AUTInventory_eventClientGivenTo_Params params;
	params.bAutoActivate = bAutoActivate;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTInventory.DrawInventoryHUD
// (Native, Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// class UUTHUDWidget*            Widget                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D               Pos                            (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D               Size                           (Parm, ZeroConstructor, IsPlainOldData)

void AUTInventory::DrawInventoryHUD(class UUTHUDWidget* Widget, const struct FVector2D& Pos, const struct FVector2D& Size)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTInventory.DrawInventoryHUD");

	AUTInventory_DrawInventoryHUD_Params params;
	params.Widget = Widget;
	params.Pos = Pos;
	params.Size = Size;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTInventory.DrawBoostHUD
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class AUTHUD*                  HUD                            (Parm, ZeroConstructor, IsPlainOldData)
// class UCanvas*                 C                              (Parm, ZeroConstructor, IsPlainOldData)
// class APawn*                   P                              (Parm, ZeroConstructor, IsPlainOldData)

void AUTInventory::DrawBoostHUD(class AUTHUD* HUD, class UCanvas* C, class APawn* P)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTInventory.DrawBoostHUD");

	AUTInventory_DrawBoostHUD_Params params;
	params.HUD = HUD;
	params.C = C;
	params.P = P;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTInventory.DetourWeight
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class APawn*                   Asker                          (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Pickup                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          PathDistance                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AUTInventory::DetourWeight(class APawn* Asker, class AActor* Pickup, float PathDistance)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTInventory.DetourWeight");

	AUTInventory_DetourWeight_Params params;
	params.Asker = Asker;
	params.Pickup = Pickup;
	params.PathDistance = PathDistance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTInventory.ClientRemoved
// (Net, NetReliable, Native, Event, Protected, NetClient)

void AUTInventory::ClientRemoved()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTInventory.ClientRemoved");

	AUTInventory_ClientRemoved_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTInventory.ClientGivenTo
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// class APawn*                   NewInstigator                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAutoActivate                  (Parm, ZeroConstructor, IsPlainOldData)

void AUTInventory::ClientGivenTo(class APawn* NewInstigator, bool bAutoActivate)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTInventory.ClientGivenTo");

	AUTInventory_ClientGivenTo_Params params;
	params.NewInstigator = NewInstigator;
	params.bAutoActivate = bAutoActivate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTInventory.BotDesireability
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class APawn*                   Asker                          (Parm, ZeroConstructor, IsPlainOldData)
// class AController*             RequestOwner                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Pickup                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          PathDistance                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AUTInventory::BotDesireability(class APawn* Asker, class AController* RequestOwner, class AActor* Pickup, float PathDistance)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTInventory.BotDesireability");

	AUTInventory_BotDesireability_Params params;
	params.Asker = Asker;
	params.RequestOwner = RequestOwner;
	params.Pickup = Pickup;
	params.PathDistance = PathDistance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTInventory.AddOverlayMaterials
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class AUTGameState*            GS                             (Parm, ZeroConstructor, IsPlainOldData)

void AUTInventory::AddOverlayMaterials(class AUTGameState* GS)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTInventory.AddOverlayMaterials");

	AUTInventory_AddOverlayMaterials_Params params;
	params.GS = GS;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPickupInventory.SetInventoryType
// (Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  NewType                        (Parm, ZeroConstructor, IsPlainOldData)

void AUTPickupInventory::SetInventoryType(class UClass* NewType)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPickupInventory.SetInventoryType");

	AUTPickupInventory_SetInventoryType_Params params;
	params.NewType = NewType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPickupInventory.InventoryTypeUpdated
// (BlueprintCosmetic, Native, Event, Public, BlueprintEvent)

void AUTPickupInventory::InventoryTypeUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPickupInventory.InventoryTypeUpdated");

	AUTPickupInventory_InventoryTypeUpdated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTProjectile.ShutDown
// (Native, Public, BlueprintCallable)

void AUTProjectile::ShutDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTProjectile.ShutDown");

	AUTProjectile_ShutDown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTProjectile.ShouldIgnoreHit
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTProjectile::ShouldIgnoreHit(class AActor* OtherActor, class UPrimitiveComponent* OtherComp)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTProjectile.ShouldIgnoreHit");

	AUTProjectile_ShouldIgnoreHit_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTProjectile.ProcessHit
// (Native, Event, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FVector                 HitLocation                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector                 HitNormal                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void AUTProjectile::ProcessHit(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& HitLocation, const struct FVector& HitNormal)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTProjectile.ProcessHit");

	AUTProjectile_ProcessHit_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.HitLocation = HitLocation;
	params.HitNormal = HitNormal;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTProjectile.OnStop
// (Native, Public, HasOutParms)
// Parameters:
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AUTProjectile::OnStop(const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTProjectile.OnStop");

	AUTProjectile_OnStop_Params params;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTProjectile.OnShutdown
// (Event, Public, BlueprintEvent)

void AUTProjectile::OnShutdown()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTProjectile.OnShutdown");

	AUTProjectile_OnShutdown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTProjectile.OnRep_UTProjReplicatedMovement
// (Native, Public)

void AUTProjectile::OnRep_UTProjReplicatedMovement()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTProjectile.OnRep_UTProjReplicatedMovement");

	AUTProjectile_OnRep_UTProjReplicatedMovement_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTProjectile.OnRep_Slomo
// (Native, Public)

void AUTProjectile::OnRep_Slomo()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTProjectile.OnRep_Slomo");

	AUTProjectile_OnRep_Slomo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTProjectile.OnPawnSphereOverlapBegin
// (Native, Public, HasOutParms)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AUTProjectile::OnPawnSphereOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTProjectile.OnPawnSphereOverlapBegin");

	AUTProjectile_OnPawnSphereOverlapBegin_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTProjectile.OnOverlapBegin
// (Native, Public, HasOutParms)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AUTProjectile::OnOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTProjectile.OnOverlapBegin");

	AUTProjectile_OnOverlapBegin_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTProjectile.OnBounce
// (Native, Public, HasOutParms, HasDefaults)
// Parameters:
// struct FHitResult              ImpactResult                   (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 ImpactVelocity                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void AUTProjectile::OnBounce(const struct FHitResult& ImpactResult, const struct FVector& ImpactVelocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTProjectile.OnBounce");

	AUTProjectile_OnBounce_Params params;
	params.ImpactResult = ImpactResult;
	params.ImpactVelocity = ImpactVelocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTProjectile.InteractsWithProj
// (Native, Public, BlueprintCallable)
// Parameters:
// class AUTProjectile*           OtherProj                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTProjectile::InteractsWithProj(class AUTProjectile* OtherProj)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTProjectile.InteractsWithProj");

	AUTProjectile_InteractsWithProj_Params params;
	params.OtherProj = OtherProj;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTProjectile.GetMaxDamageRadius
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AUTProjectile::GetMaxDamageRadius()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTProjectile.GetMaxDamageRadius");

	AUTProjectile_GetMaxDamageRadius_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTProjectile.GetDamageParams
// (Native, Event, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 HitLocation                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float                          OutMomentum                    (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FRadialDamageParams     ReturnValue                    (Parm, OutParm, ReturnParm)

struct FRadialDamageParams AUTProjectile::GetDamageParams(class AActor* OtherActor, const struct FVector& HitLocation, float* OutMomentum)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTProjectile.GetDamageParams");

	AUTProjectile_GetDamageParams_Params params;
	params.OtherActor = OtherActor;
	params.HitLocation = HitLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutMomentum != nullptr)
		*OutMomentum = params.OutMomentum;

	return params.ReturnValue;
}


// Function UnrealTournament.UTProjectile.Explode
// (Native, Event, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                 HitLocation                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector                 HitNormal                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// class UPrimitiveComponent*     HitComp                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AUTProjectile::Explode(const struct FVector& HitLocation, const struct FVector& HitNormal, class UPrimitiveComponent* HitComp)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTProjectile.Explode");

	AUTProjectile_Explode_Params params;
	params.HitLocation = HitLocation;
	params.HitNormal = HitNormal;
	params.HitComp = HitComp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTProjectile.EndSlomo
// (Native, Public)

void AUTProjectile::EndSlomo()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTProjectile.EndSlomo");

	AUTProjectile_EndSlomo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTProjectile.DamageImpactedActor
// (Native, Event, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FVector                 HitLocation                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector                 HitNormal                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void AUTProjectile::DamageImpactedActor(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& HitLocation, const struct FVector& HitNormal)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTProjectile.DamageImpactedActor");

	AUTProjectile_DamageImpactedActor_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.HitLocation = HitLocation;
	params.HitNormal = HitNormal;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameInstance.EndLevelLoading
// (Native, Public)

void UUTGameInstance::EndLevelLoading()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameInstance.EndLevelLoading");

	UUTGameInstance_EndLevelLoading_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameInstance.BeginLevelLoading
// (Native, Public)
// Parameters:
// struct FString                 LevelName                      (Parm, ZeroConstructor)

void UUTGameInstance::BeginLevelLoading(const struct FString& LevelName)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameInstance.BeginLevelLoading");

	UUTGameInstance_BeginLevelLoading_Params params;
	params.LevelName = LevelName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameplayStatics.UTSuggestProjectileVelocity
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 TossVelocity                   (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FVector                 StartLoc                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector                 EndLoc                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// class AActor*                  TargetActor                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          ZOvershootTolerance            (Parm, ZeroConstructor, IsPlainOldData)
// float                          TossSpeed                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          CollisionRadius                (Parm, ZeroConstructor, IsPlainOldData)
// float                          OverrideGravityZ               (Parm, ZeroConstructor, IsPlainOldData)
// int                            MaxSubdivisions                (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ESuggestProjVelocityTraceOption> TraceOption                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUTGameplayStatics::STATIC_UTSuggestProjectileVelocity(class UObject* WorldContextObject, const struct FVector& StartLoc, const struct FVector& EndLoc, class AActor* TargetActor, float ZOvershootTolerance, float TossSpeed, float CollisionRadius, float OverrideGravityZ, int MaxSubdivisions, TEnumAsByte<ESuggestProjVelocityTraceOption> TraceOption, struct FVector* TossVelocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameplayStatics.UTSuggestProjectileVelocity");

	UUTGameplayStatics_UTSuggestProjectileVelocity_Params params;
	params.WorldContextObject = WorldContextObject;
	params.StartLoc = StartLoc;
	params.EndLoc = EndLoc;
	params.TargetActor = TargetActor;
	params.ZOvershootTolerance = ZOvershootTolerance;
	params.TossSpeed = TossSpeed;
	params.CollisionRadius = CollisionRadius;
	params.OverrideGravityZ = OverrideGravityZ;
	params.MaxSubdivisions = MaxSubdivisions;
	params.TraceOption = TraceOption;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (TossVelocity != nullptr)
		*TossVelocity = params.TossVelocity;

	return params.ReturnValue;
}


// Function UnrealTournament.UTGameplayStatics.UTPlaySound
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UWorld*                  TheWorld                       (Parm, ZeroConstructor, IsPlainOldData)
// class USoundBase*              TheSound                       (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  SourceActor                    (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ESoundReplicationType> RepType                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bStopWhenOwnerDestroyed        (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 SoundLoc                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// class AUTPlayerController*     AmpedListener                  (Parm, ZeroConstructor, IsPlainOldData)
// class APawn*                   Instigator                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bNotifyAI                      (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ESoundAmplificationType> AmpType                        (Parm, ZeroConstructor, IsPlainOldData)

void UUTGameplayStatics::STATIC_UTPlaySound(class UWorld* TheWorld, class USoundBase* TheSound, class AActor* SourceActor, TEnumAsByte<ESoundReplicationType> RepType, bool bStopWhenOwnerDestroyed, const struct FVector& SoundLoc, class AUTPlayerController* AmpedListener, class APawn* Instigator, bool bNotifyAI, TEnumAsByte<ESoundAmplificationType> AmpType)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameplayStatics.UTPlaySound");

	UUTGameplayStatics_UTPlaySound_Params params;
	params.TheWorld = TheWorld;
	params.TheSound = TheSound;
	params.SourceActor = SourceActor;
	params.RepType = RepType;
	params.bStopWhenOwnerDestroyed = bStopWhenOwnerDestroyed;
	params.SoundLoc = SoundLoc;
	params.AmpedListener = AmpedListener;
	params.Instigator = Instigator;
	params.bNotifyAI = bNotifyAI;
	params.AmpType = AmpType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameplayStatics.UTHurtRadius
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// float                          BaseDamage                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          MinimumDamage                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          BaseMomentumMag                (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Origin                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float                          DamageInnerRadius              (Parm, ZeroConstructor, IsPlainOldData)
// float                          DamageOuterRadius              (Parm, ZeroConstructor, IsPlainOldData)
// float                          DamageFalloff                  (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  DamageTypeClass                (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class AActor*>          IgnoreActors                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// class AController*             InstigatedByController         (Parm, ZeroConstructor, IsPlainOldData)
// class AController*             FFInstigatedBy                 (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  FFDamageType                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          CollisionFreeRadius            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUTGameplayStatics::STATIC_UTHurtRadius(class UObject* WorldContextObject, float BaseDamage, float MinimumDamage, float BaseMomentumMag, const struct FVector& Origin, float DamageInnerRadius, float DamageOuterRadius, float DamageFalloff, class UClass* DamageTypeClass, TArray<class AActor*> IgnoreActors, class AActor* DamageCauser, class AController* InstigatedByController, class AController* FFInstigatedBy, class UClass* FFDamageType, float CollisionFreeRadius)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameplayStatics.UTHurtRadius");

	UUTGameplayStatics_UTHurtRadius_Params params;
	params.WorldContextObject = WorldContextObject;
	params.BaseDamage = BaseDamage;
	params.MinimumDamage = MinimumDamage;
	params.BaseMomentumMag = BaseMomentumMag;
	params.Origin = Origin;
	params.DamageInnerRadius = DamageInnerRadius;
	params.DamageOuterRadius = DamageOuterRadius;
	params.DamageFalloff = DamageFalloff;
	params.DamageTypeClass = DamageTypeClass;
	params.IgnoreActors = IgnoreActors;
	params.DamageCauser = DamageCauser;
	params.InstigatedByController = InstigatedByController;
	params.FFInstigatedBy = FFInstigatedBy;
	params.FFDamageType = FFDamageType;
	params.CollisionFreeRadius = CollisionFreeRadius;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTGameplayStatics.TokensReset
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)

void UUTGameplayStatics::STATIC_TokensReset(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameplayStatics.TokensReset");

	UUTGameplayStatics_TokensReset_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameplayStatics.TokensCommit
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)

void UUTGameplayStatics::STATIC_TokensCommit(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameplayStatics.TokensCommit");

	UUTGameplayStatics_TokensCommit_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameplayStatics.TokenRevoke
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   TokenUniqueID                  (Parm, ZeroConstructor, IsPlainOldData)

void UUTGameplayStatics::STATIC_TokenRevoke(class UObject* WorldContextObject, const struct FName& TokenUniqueID)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameplayStatics.TokenRevoke");

	UUTGameplayStatics_TokenRevoke_Params params;
	params.WorldContextObject = WorldContextObject;
	params.TokenUniqueID = TokenUniqueID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameplayStatics.TokenPickedUp
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   TokenUniqueID                  (Parm, ZeroConstructor, IsPlainOldData)

void UUTGameplayStatics::STATIC_TokenPickedUp(class UObject* WorldContextObject, const struct FName& TokenUniqueID)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameplayStatics.TokenPickedUp");

	UUTGameplayStatics_TokenPickedUp_Params params;
	params.WorldContextObject = WorldContextObject;
	params.TokenUniqueID = TokenUniqueID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameplayStatics.SetModConfigStringArray
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FString                 ConfigSection                  (Parm, ZeroConstructor)
// struct FString                 ConfigKey                      (Parm, ZeroConstructor)
// TArray<struct FString>         Value                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UUTGameplayStatics::STATIC_SetModConfigStringArray(const struct FString& ConfigSection, const struct FString& ConfigKey, TArray<struct FString> Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameplayStatics.SetModConfigStringArray");

	UUTGameplayStatics_SetModConfigStringArray_Params params;
	params.ConfigSection = ConfigSection;
	params.ConfigKey = ConfigKey;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameplayStatics.SetModConfigString
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString                 ConfigSection                  (Parm, ZeroConstructor)
// struct FString                 ConfigKey                      (Parm, ZeroConstructor)
// struct FString                 Value                          (Parm, ZeroConstructor)

void UUTGameplayStatics::STATIC_SetModConfigString(const struct FString& ConfigSection, const struct FString& ConfigKey, const struct FString& Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameplayStatics.SetModConfigString");

	UUTGameplayStatics_SetModConfigString_Params params;
	params.ConfigSection = ConfigSection;
	params.ConfigKey = ConfigKey;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameplayStatics.SetModConfigInt
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString                 ConfigSection                  (Parm, ZeroConstructor)
// struct FString                 ConfigKey                      (Parm, ZeroConstructor)
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UUTGameplayStatics::STATIC_SetModConfigInt(const struct FString& ConfigSection, const struct FString& ConfigKey, int Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameplayStatics.SetModConfigInt");

	UUTGameplayStatics_SetModConfigInt_Params params;
	params.ConfigSection = ConfigSection;
	params.ConfigKey = ConfigKey;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameplayStatics.SetModConfigFloat
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString                 ConfigSection                  (Parm, ZeroConstructor)
// struct FString                 ConfigKey                      (Parm, ZeroConstructor)
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UUTGameplayStatics::STATIC_SetModConfigFloat(const struct FString& ConfigSection, const struct FString& ConfigKey, float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameplayStatics.SetModConfigFloat");

	UUTGameplayStatics_SetModConfigFloat_Params params;
	params.ConfigSection = ConfigSection;
	params.ConfigKey = ConfigKey;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameplayStatics.SetBestTime
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   TimingSection                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          InBestTime                     (Parm, ZeroConstructor, IsPlainOldData)

void UUTGameplayStatics::STATIC_SetBestTime(class UObject* WorldContextObject, const struct FName& TimingSection, float InBestTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameplayStatics.SetBestTime");

	UUTGameplayStatics_SetBestTime_Params params;
	params.WorldContextObject = WorldContextObject;
	params.TimingSection = TimingSection;
	params.InBestTime = InBestTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameplayStatics.SaveModConfig
// (Final, Native, Static, Public, BlueprintCallable)

void UUTGameplayStatics::STATIC_SaveModConfig()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameplayStatics.SaveModConfig");

	UUTGameplayStatics_SaveModConfig_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameplayStatics.ReloadModConfig
// (Final, Native, Static, Public, BlueprintCallable)

void UUTGameplayStatics::STATIC_ReloadModConfig()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameplayStatics.ReloadModConfig");

	UUTGameplayStatics_ReloadModConfig_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameplayStatics.RecordEvent_UTTutorialPlayInstruction
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AUTPlayerController*     UTPC                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 AnnouncementName               (Parm, ZeroConstructor)
// int                            InstructionID                  (Parm, ZeroConstructor, IsPlainOldData)

void UUTGameplayStatics::STATIC_RecordEvent_UTTutorialPlayInstruction(class AUTPlayerController* UTPC, const struct FString& AnnouncementName, int InstructionID)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameplayStatics.RecordEvent_UTTutorialPlayInstruction");

	UUTGameplayStatics_RecordEvent_UTTutorialPlayInstruction_Params params;
	params.UTPC = UTPC;
	params.AnnouncementName = AnnouncementName;
	params.InstructionID = InstructionID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameplayStatics.RecordEvent_UTTutorialCompleted
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AUTPlayerController*     UTPC                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 TutorialMap                    (Parm, ZeroConstructor)

void UUTGameplayStatics::STATIC_RecordEvent_UTTutorialCompleted(class AUTPlayerController* UTPC, const struct FString& TutorialMap)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameplayStatics.RecordEvent_UTTutorialCompleted");

	UUTGameplayStatics_RecordEvent_UTTutorialCompleted_Params params;
	params.UTPC = UTPC;
	params.TutorialMap = TutorialMap;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameplayStatics.PlaySoundTeamAdjusted
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USoundCue*               SoundToPlay                    (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  SoundInstigator                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  SoundTarget                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           Attached                       (Parm, ZeroConstructor, IsPlainOldData)
// class UAudioComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UAudioComponent* UUTGameplayStatics::STATIC_PlaySoundTeamAdjusted(class USoundCue* SoundToPlay, class AActor* SoundInstigator, class AActor* SoundTarget, bool Attached)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameplayStatics.PlaySoundTeamAdjusted");

	UUTGameplayStatics_PlaySoundTeamAdjusted_Params params;
	params.SoundToPlay = SoundToPlay;
	params.SoundInstigator = SoundInstigator;
	params.SoundTarget = SoundTarget;
	params.Attached = Attached;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTGameplayStatics.PickBestAimTarget
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AController*             AskingC                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 StartLoc                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 FireDir                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          MinAim                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          MaxRange                       (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  TargetClass                    (Parm, ZeroConstructor, IsPlainOldData)
// class APawn*                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APawn* UUTGameplayStatics::STATIC_PickBestAimTarget(class AController* AskingC, const struct FVector& StartLoc, const struct FVector& FireDir, float MinAim, float MaxRange, class UClass* TargetClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameplayStatics.PickBestAimTarget");

	UUTGameplayStatics_PickBestAimTarget_Params params;
	params.AskingC = AskingC;
	params.StartLoc = StartLoc;
	params.FireDir = FireDir;
	params.MinAim = MinAim;
	params.MaxRange = MaxRange;
	params.TargetClass = TargetClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTGameplayStatics.LineTraceForWorldBlockingOnly
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Start                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 End                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EDrawDebugTrace>   DrawDebugType                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 HitLocation                    (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FVector                 HitNormal                      (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUTGameplayStatics::STATIC_LineTraceForWorldBlockingOnly(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, TEnumAsByte<EDrawDebugTrace> DrawDebugType, struct FVector* HitLocation, struct FVector* HitNormal)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameplayStatics.LineTraceForWorldBlockingOnly");

	UUTGameplayStatics_LineTraceForWorldBlockingOnly_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Start = Start;
	params.End = End;
	params.DrawDebugType = DrawDebugType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (HitLocation != nullptr)
		*HitLocation = params.HitLocation;
	if (HitNormal != nullptr)
		*HitNormal = params.HitNormal;

	return params.ReturnValue;
}


// Function UnrealTournament.UTGameplayStatics.LineTraceForObjectsSimple
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Start                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 End                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// bool                           bTraceComplex                  (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EDrawDebugTrace>   DrawDebugType                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 HitLocation                    (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FVector                 HitNormal                      (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           bIgnoreSelf                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUTGameplayStatics::STATIC_LineTraceForObjectsSimple(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes, bool bTraceComplex, TEnumAsByte<EDrawDebugTrace> DrawDebugType, bool bIgnoreSelf, struct FVector* HitLocation, struct FVector* HitNormal)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameplayStatics.LineTraceForObjectsSimple");

	UUTGameplayStatics_LineTraceForObjectsSimple_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Start = Start;
	params.End = End;
	params.ObjectTypes = ObjectTypes;
	params.bTraceComplex = bTraceComplex;
	params.DrawDebugType = DrawDebugType;
	params.bIgnoreSelf = bIgnoreSelf;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (HitLocation != nullptr)
		*HitLocation = params.HitLocation;
	if (HitNormal != nullptr)
		*HitNormal = params.HitNormal;

	return params.ReturnValue;
}


// Function UnrealTournament.UTGameplayStatics.K2_SaveConfig
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 Obj                            (Parm, ZeroConstructor, IsPlainOldData)

void UUTGameplayStatics::STATIC_K2_SaveConfig(class UObject* Obj)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameplayStatics.K2_SaveConfig");

	UUTGameplayStatics_K2_SaveConfig_Params params;
	params.Obj = Obj;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGameplayStatics.IsPlayInEditor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUTGameplayStatics::STATIC_IsPlayInEditor(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameplayStatics.IsPlayInEditor");

	UUTGameplayStatics_IsPlayInEditor_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTGameplayStatics.IsForcingSingleSampleShadowFromStationaryLights
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUTGameplayStatics::STATIC_IsForcingSingleSampleShadowFromStationaryLights()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameplayStatics.IsForcingSingleSampleShadowFromStationaryLights");

	UUTGameplayStatics_IsForcingSingleSampleShadowFromStationaryLights_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTGameplayStatics.HowManyTokensHaveBeenPickedUpBefore
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FName>           TokenUniqueIDs                 (Parm, ZeroConstructor)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UUTGameplayStatics::STATIC_HowManyTokensHaveBeenPickedUpBefore(class UObject* WorldContextObject, TArray<struct FName> TokenUniqueIDs)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameplayStatics.HowManyTokensHaveBeenPickedUpBefore");

	UUTGameplayStatics_HowManyTokensHaveBeenPickedUpBefore_Params params;
	params.WorldContextObject = WorldContextObject;
	params.TokenUniqueIDs = TokenUniqueIDs;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTGameplayStatics.HasTokenBeenPickedUpBefore
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   TokenUniqueID                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUTGameplayStatics::STATIC_HasTokenBeenPickedUpBefore(class UObject* WorldContextObject, const struct FName& TokenUniqueID)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameplayStatics.HasTokenBeenPickedUpBefore");

	UUTGameplayStatics_HasTokenBeenPickedUpBefore_Params params;
	params.WorldContextObject = WorldContextObject;
	params.TokenUniqueID = TokenUniqueID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTGameplayStatics.GetModConfigStringArray
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FString                 ConfigSection                  (Parm, ZeroConstructor)
// struct FString                 ConfigKey                      (Parm, ZeroConstructor)
// TArray<struct FString>         Value                          (Parm, OutParm, ZeroConstructor)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UUTGameplayStatics::STATIC_GetModConfigStringArray(const struct FString& ConfigSection, const struct FString& ConfigKey, TArray<struct FString>* Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameplayStatics.GetModConfigStringArray");

	UUTGameplayStatics_GetModConfigStringArray_Params params;
	params.ConfigSection = ConfigSection;
	params.ConfigKey = ConfigKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Value != nullptr)
		*Value = params.Value;

	return params.ReturnValue;
}


// Function UnrealTournament.UTGameplayStatics.GetModConfigString
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FString                 ConfigSection                  (Parm, ZeroConstructor)
// struct FString                 ConfigKey                      (Parm, ZeroConstructor)
// struct FString                 Value                          (Parm, OutParm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUTGameplayStatics::STATIC_GetModConfigString(const struct FString& ConfigSection, const struct FString& ConfigKey, struct FString* Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameplayStatics.GetModConfigString");

	UUTGameplayStatics_GetModConfigString_Params params;
	params.ConfigSection = ConfigSection;
	params.ConfigKey = ConfigKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Value != nullptr)
		*Value = params.Value;

	return params.ReturnValue;
}


// Function UnrealTournament.UTGameplayStatics.GetModConfigInt
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FString                 ConfigSection                  (Parm, ZeroConstructor)
// struct FString                 ConfigKey                      (Parm, ZeroConstructor)
// int                            Value                          (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUTGameplayStatics::STATIC_GetModConfigInt(const struct FString& ConfigSection, const struct FString& ConfigKey, int* Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameplayStatics.GetModConfigInt");

	UUTGameplayStatics_GetModConfigInt_Params params;
	params.ConfigSection = ConfigSection;
	params.ConfigKey = ConfigKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Value != nullptr)
		*Value = params.Value;

	return params.ReturnValue;
}


// Function UnrealTournament.UTGameplayStatics.GetModConfigFloat
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FString                 ConfigSection                  (Parm, ZeroConstructor)
// struct FString                 ConfigKey                      (Parm, ZeroConstructor)
// float                          Value                          (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUTGameplayStatics::STATIC_GetModConfigFloat(const struct FString& ConfigSection, const struct FString& ConfigKey, float* Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameplayStatics.GetModConfigFloat");

	UUTGameplayStatics_GetModConfigFloat_Params params;
	params.ConfigSection = ConfigSection;
	params.ConfigKey = ConfigKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Value != nullptr)
		*Value = params.Value;

	return params.ReturnValue;
}


// Function UnrealTournament.UTGameplayStatics.GetLocalPlayerController
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// int                            PlayerIndex                    (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerController*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APlayerController* UUTGameplayStatics::GetLocalPlayerController(class UObject* WorldContextObject, int PlayerIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameplayStatics.GetLocalPlayerController");

	UUTGameplayStatics_GetLocalPlayerController_Params params;
	params.WorldContextObject = WorldContextObject;
	params.PlayerIndex = PlayerIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTGameplayStatics.GetLevelName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bShortName                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UUTGameplayStatics::STATIC_GetLevelName(class UObject* WorldContextObject, bool bShortName)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameplayStatics.GetLevelName");

	UUTGameplayStatics_GetLevelName_Params params;
	params.WorldContextObject = WorldContextObject;
	params.bShortName = bShortName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTGameplayStatics.GetGravityZ
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 TestLoc                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UUTGameplayStatics::STATIC_GetGravityZ(class UObject* WorldContextObject, const struct FVector& TestLoc)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameplayStatics.GetGravityZ");

	UUTGameplayStatics_GetGravityZ_Params params;
	params.WorldContextObject = WorldContextObject;
	params.TestLoc = TestLoc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTGameplayStatics.GetGameClass
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UUTGameplayStatics::STATIC_GetGameClass(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameplayStatics.GetGameClass");

	UUTGameplayStatics_GetGameClass_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTGameplayStatics.GetFloatOption
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FString                 Options                        (Parm, ZeroConstructor)
// struct FString                 Key                            (Parm, ZeroConstructor)
// float                          DefaultValue                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UUTGameplayStatics::STATIC_GetFloatOption(const struct FString& Options, const struct FString& Key, float DefaultValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameplayStatics.GetFloatOption");

	UUTGameplayStatics_GetFloatOption_Params params;
	params.Options = Options;
	params.Key = Key;
	params.DefaultValue = DefaultValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTGameplayStatics.GetCurrentAimContext
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AUTCharacter*            PawnTarget                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          MinAim                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          MaxRange                       (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  TargetClass                    (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* UUTGameplayStatics::STATIC_GetCurrentAimContext(class AUTCharacter* PawnTarget, float MinAim, float MaxRange, class UClass* TargetClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameplayStatics.GetCurrentAimContext");

	UUTGameplayStatics_GetCurrentAimContext_Params params;
	params.PawnTarget = PawnTarget;
	params.MinAim = MinAim;
	params.MaxRange = MaxRange;
	params.TargetClass = TargetClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTGameplayStatics.GetBestTime
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   TimingSection                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          OutBestTime                    (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUTGameplayStatics::STATIC_GetBestTime(class UObject* WorldContextObject, const struct FName& TimingSection, float* OutBestTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameplayStatics.GetBestTime");

	UUTGameplayStatics_GetBestTime_Params params;
	params.WorldContextObject = WorldContextObject;
	params.TimingSection = TimingSection;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutBestTime != nullptr)
		*OutBestTime = params.OutBestTime;

	return params.ReturnValue;
}


// Function UnrealTournament.UTGameplayStatics.ExecuteDatabaseQuery
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 DatabaseQuery                  (Parm, ZeroConstructor)
// TArray<struct FDatabaseRow>    OutDatabaseRows                (Parm, OutParm, ZeroConstructor)

void UUTGameplayStatics::STATIC_ExecuteDatabaseQuery(class UObject* WorldContextObject, const struct FString& DatabaseQuery, TArray<struct FDatabaseRow>* OutDatabaseRows)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameplayStatics.ExecuteDatabaseQuery");

	UUTGameplayStatics_ExecuteDatabaseQuery_Params params;
	params.WorldContextObject = WorldContextObject;
	params.DatabaseQuery = DatabaseQuery;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutDatabaseRows != nullptr)
		*OutDatabaseRows = params.OutDatabaseRows;
}


// Function UnrealTournament.UTGameplayStatics.ChooseBestAimTarget
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AController*             AskingC                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 StartLoc                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 FireDir                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          MinAim                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          MaxRange                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          MaxOffsetDist                  (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  TargetClass                    (Parm, ZeroConstructor, IsPlainOldData)
// class APawn*                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APawn* UUTGameplayStatics::STATIC_ChooseBestAimTarget(class AController* AskingC, const struct FVector& StartLoc, const struct FVector& FireDir, float MinAim, float MaxRange, float MaxOffsetDist, class UClass* TargetClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameplayStatics.ChooseBestAimTarget");

	UUTGameplayStatics_ChooseBestAimTarget_Params params;
	params.AskingC = AskingC;
	params.StartLoc = StartLoc;
	params.FireDir = FireDir;
	params.MinAim = MinAim;
	params.MaxRange = MaxRange;
	params.MaxOffsetDist = MaxOffsetDist;
	params.TargetClass = TargetClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTGameplayStatics.AssignTeamAdjustmentValue
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UAudioComponent*         AudioComponent                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  SoundInstigator                (Parm, ZeroConstructor, IsPlainOldData)

void UUTGameplayStatics::STATIC_AssignTeamAdjustmentValue(class UAudioComponent* AudioComponent, class AActor* SoundInstigator)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGameplayStatics.AssignTeamAdjustmentValue");

	UUTGameplayStatics_AssignTeamAdjustmentValue_Params params;
	params.AudioComponent = AudioComponent;
	params.SoundInstigator = SoundInstigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTUMGWidget.WidgetOpened
// (Event, Public, BlueprintEvent)

void UUTUMGWidget::WidgetOpened()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTUMGWidget.WidgetOpened");

	UUTUMGWidget_WidgetOpened_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTUMGWidget.WidgetClosed
// (Event, Public, BlueprintEvent)

void UUTUMGWidget::WidgetClosed()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTUMGWidget.WidgetClosed");

	UUTUMGWidget_WidgetClosed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTUMGWidget.SimpleEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FName                   EventTag                       (Parm, ZeroConstructor, IsPlainOldData)

void UUTUMGWidget::SimpleEvent(const struct FName& EventTag)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTUMGWidget.SimpleEvent");

	UUTUMGWidget_SimpleEvent_Params params;
	params.EventTag = EventTag;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTUMGWidget.ShowParticleSystem
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UParticleSystem*         ParticleSystem                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D               ScreenLocation                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bRelativeCoords                (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 LocationModifier               (Parm, ZeroConstructor, IsPlainOldData)
// struct FRotator                DirectionModifier              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAttachToCamera                (Parm, ZeroConstructor, IsPlainOldData)

void UUTUMGWidget::ShowParticleSystem(class UParticleSystem* ParticleSystem, const struct FVector2D& ScreenLocation, bool bRelativeCoords, const struct FVector& LocationModifier, const struct FRotator& DirectionModifier, bool bAttachToCamera)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTUMGWidget.ShowParticleSystem");

	UUTUMGWidget_ShowParticleSystem_Params params;
	params.ParticleSystem = ParticleSystem;
	params.ScreenLocation = ScreenLocation;
	params.bRelativeCoords = bRelativeCoords;
	params.LocationModifier = LocationModifier;
	params.DirectionModifier = DirectionModifier;
	params.bAttachToCamera = bAttachToCamera;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTUMGWidget.OnParticlesFinished
// (Final, Native, Protected)
// Parameters:
// class UParticleSystemComponent* PCS                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UUTUMGWidget::OnParticlesFinished(class UParticleSystemComponent* PCS)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTUMGWidget.OnParticlesFinished");

	UUTUMGWidget_OnParticlesFinished_Params params;
	params.PCS = PCS;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTUMGWidget.GetPlayerOwner
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUTLocalPlayer*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UUTLocalPlayer* UUTUMGWidget::GetPlayerOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTUMGWidget.GetPlayerOwner");

	UUTUMGWidget_GetPlayerOwner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTUMGWidget.CloseWidget
// (Native, Public, BlueprintCallable)

void UUTUMGWidget::CloseWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTUMGWidget.CloseWidget");

	UUTUMGWidget_CloseWidget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTUMGHudWidget.SetLifeTime
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          LifeSpan                       (Parm, ZeroConstructor, IsPlainOldData)

void UUTUMGHudWidget::SetLifeTime(float LifeSpan)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTUMGHudWidget.SetLifeTime");

	UUTUMGHudWidget_SetLifeTime_Params params;
	params.LifeSpan = LifeSpan;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTUMGHudWidget.NotifyHUDWidgetIsDone
// (Final, Native, Public, BlueprintCallable)

void UUTUMGHudWidget::NotifyHUDWidgetIsDone()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTUMGHudWidget.NotifyHUDWidgetIsDone");

	UUTUMGHudWidget_NotifyHUDWidgetIsDone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTUMGHudWidget.GetHUDVisibility
// (Final, Native, Protected, Const)
// Parameters:
// ESlateVisibility               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ESlateVisibility UUTUMGHudWidget::GetHUDVisibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTUMGHudWidget.GetHUDVisibility");

	UUTUMGHudWidget_GetHUDVisibility_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTUMGHudWidget.ApplyHUDVisibility
// (BlueprintCosmetic, Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// ESlateVisibility               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ESlateVisibility UUTUMGHudWidget::ApplyHUDVisibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTUMGHudWidget.ApplyHUDVisibility");

	UUTUMGHudWidget_ApplyHUDVisibility_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTUMGHudWidget_Crosshair.ApplyCustomizations
// (Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FWeaponCustomizationInfo CustomizationsToApply          (ConstParm, Parm, OutParm, ReferenceParm)

void UUTUMGHudWidget_Crosshair::ApplyCustomizations(const struct FWeaponCustomizationInfo& CustomizationsToApply)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTUMGHudWidget_Crosshair.ApplyCustomizations");

	UUTUMGHudWidget_Crosshair_ApplyCustomizations_Params params;
	params.CustomizationsToApply = CustomizationsToApply;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCrosshair.NativeDrawCrosshair
// (Final, Native, Public, HasOutParms)
// Parameters:
// class AUTHUD*                  TargetHUD                      (Parm, ZeroConstructor, IsPlainOldData)
// class UCanvas*                 Canvas                         (Parm, ZeroConstructor, IsPlainOldData)
// class AUTWeapon*               Weapon                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FWeaponCustomizationInfo CustomizationsToApply          (ConstParm, Parm, OutParm, ReferenceParm)

void UUTCrosshair::NativeDrawCrosshair(class AUTHUD* TargetHUD, class UCanvas* Canvas, class AUTWeapon* Weapon, float DeltaTime, const struct FWeaponCustomizationInfo& CustomizationsToApply)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCrosshair.NativeDrawCrosshair");

	UUTCrosshair_NativeDrawCrosshair_Params params;
	params.TargetHUD = TargetHUD;
	params.Canvas = Canvas;
	params.Weapon = Weapon;
	params.DeltaTime = DeltaTime;
	params.CustomizationsToApply = CustomizationsToApply;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCrosshair.DrawCrosshair
// (Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// class AUTHUD*                  TargetHUD                      (Parm, ZeroConstructor, IsPlainOldData)
// class UCanvas*                 Canvas                         (Parm, ZeroConstructor, IsPlainOldData)
// class AUTWeapon*               Weapon                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FWeaponCustomizationInfo CustomizationsToApply          (ConstParm, Parm, OutParm, ReferenceParm)

void UUTCrosshair::DrawCrosshair(class AUTHUD* TargetHUD, class UCanvas* Canvas, class AUTWeapon* Weapon, float DeltaTime, const struct FWeaponCustomizationInfo& CustomizationsToApply)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCrosshair.DrawCrosshair");

	UUTCrosshair_DrawCrosshair_Params params;
	params.TargetHUD = TargetHUD;
	params.Canvas = Canvas;
	params.Weapon = Weapon;
	params.DeltaTime = DeltaTime;
	params.CustomizationsToApply = CustomizationsToApply;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCrosshair.DeactivateCrosshair
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AUTHUD*                  TargetHUD                      (Parm, ZeroConstructor, IsPlainOldData)

void UUTCrosshair::DeactivateCrosshair(class AUTHUD* TargetHUD)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCrosshair.DeactivateCrosshair");

	UUTCrosshair_DeactivateCrosshair_Params params;
	params.TargetHUD = TargetHUD;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCrosshair.ActivateCrosshair
// (Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// class AUTHUD*                  TargetHUD                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FWeaponCustomizationInfo CustomizationsToApply          (ConstParm, Parm, OutParm, ReferenceParm)
// class AUTWeapon*               Weapon                         (Parm, ZeroConstructor, IsPlainOldData)

void UUTCrosshair::ActivateCrosshair(class AUTHUD* TargetHUD, const struct FWeaponCustomizationInfo& CustomizationsToApply, class AUTWeapon* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCrosshair.ActivateCrosshair");

	UUTCrosshair_ActivateCrosshair_Params params;
	params.TargetHUD = TargetHUD;
	params.CustomizationsToApply = CustomizationsToApply;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeapon.UpdateTiming
// (Native, Public, BlueprintCallable)

void AUTWeapon::UpdateTiming()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.UpdateTiming");

	AUTWeapon_UpdateTiming_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeapon.UpdateCrosshairTarget
// (Final, Native, Public)
// Parameters:
// class AUTPlayerState*          NewCrosshairTarget             (Parm, ZeroConstructor, IsPlainOldData)
// class UUTHUDWidget*            WeaponHudWidget                (Parm, ZeroConstructor, IsPlainOldData)
// float                          RenderDelta                    (Parm, ZeroConstructor, IsPlainOldData)

void AUTWeapon::UpdateCrosshairTarget(class AUTPlayerState* NewCrosshairTarget, class UUTHUDWidget* WeaponHudWidget, float RenderDelta)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.UpdateCrosshairTarget");

	AUTWeapon_UpdateCrosshairTarget_Params params;
	params.NewCrosshairTarget = NewCrosshairTarget;
	params.WeaponHudWidget = WeaponHudWidget;
	params.RenderDelta = RenderDelta;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeapon.TestWeaponScale
// (Final, Exec, Native, Public)
// Parameters:
// float                          X                              (Parm, ZeroConstructor, IsPlainOldData)
// float                          Y                              (Parm, ZeroConstructor, IsPlainOldData)
// float                          Z                              (Parm, ZeroConstructor, IsPlainOldData)

void AUTWeapon::TestWeaponScale(float X, float Y, float Z)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.TestWeaponScale");

	AUTWeapon_TestWeaponScale_Params params;
	params.X = X;
	params.Y = Y;
	params.Z = Z;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeapon.TestWeaponRot
// (Final, Exec, Native, Public)
// Parameters:
// float                          Pitch                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          Yaw                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          Roll                           (Parm, ZeroConstructor, IsPlainOldData)

void AUTWeapon::TestWeaponRot(float Pitch, float Yaw, float Roll)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.TestWeaponRot");

	AUTWeapon_TestWeaponRot_Params params;
	params.Pitch = Pitch;
	params.Yaw = Yaw;
	params.Roll = Roll;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeapon.TestWeaponLoc
// (Final, Exec, Native, Public)
// Parameters:
// float                          X                              (Parm, ZeroConstructor, IsPlainOldData)
// float                          Y                              (Parm, ZeroConstructor, IsPlainOldData)
// float                          Z                              (Parm, ZeroConstructor, IsPlainOldData)

void AUTWeapon::TestWeaponLoc(float X, float Y, float Z)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.TestWeaponLoc");

	AUTWeapon_TestWeaponLoc_Params params;
	params.X = X;
	params.Y = Y;
	params.Z = Z;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeapon.SuggestDefenseStyle
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AUTWeapon::SuggestDefenseStyle()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.SuggestDefenseStyle");

	AUTWeapon_SuggestDefenseStyle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTWeapon.SuggestAttackStyle
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AUTWeapon::SuggestAttackStyle()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.SuggestAttackStyle");

	AUTWeapon_SuggestAttackStyle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTWeapon.StopFiringEffects
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void AUTWeapon::StopFiringEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.StopFiringEffects");

	AUTWeapon_StopFiringEffects_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeapon.StopFire
// (Native, Public, BlueprintCallable)
// Parameters:
// unsigned char                  FireModeNum                    (Parm, ZeroConstructor, IsPlainOldData)

void AUTWeapon::StopFire(unsigned char FireModeNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.StopFire");

	AUTWeapon_StopFire_Params params;
	params.FireModeNum = FireModeNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeapon.StartFire
// (Native, Public, BlueprintCallable)
// Parameters:
// unsigned char                  FireModeNum                    (Parm, ZeroConstructor, IsPlainOldData)

void AUTWeapon::StartFire(unsigned char FireModeNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.StartFire");

	AUTWeapon_StartFire_Params params;
	params.FireModeNum = FireModeNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeapon.ShouldPlay1PVisuals
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTWeapon::ShouldPlay1PVisuals()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.ShouldPlay1PVisuals");

	AUTWeapon_ShouldPlay1PVisuals_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTWeapon.ShouldDrawFFIndicator
// (Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APlayerController*       Viewer                         (Parm, ZeroConstructor, IsPlainOldData)
// class AUTPlayerState*          HitPlayerState                 (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTWeapon::ShouldDrawFFIndicator(class APlayerController* Viewer, class AUTPlayerState** HitPlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.ShouldDrawFFIndicator");

	AUTWeapon_ShouldDrawFFIndicator_Params params;
	params.Viewer = Viewer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (HitPlayerState != nullptr)
		*HitPlayerState = params.HitPlayerState;

	return params.ReturnValue;
}


// Function UnrealTournament.UTWeapon.ShouldAIDelayFiring
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTWeapon::ShouldAIDelayFiring()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.ShouldAIDelayFiring");

	AUTWeapon_ShouldAIDelayFiring_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTWeapon.SetZoomState
// (Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EZoomState>        NewZoomState                   (Parm, ZeroConstructor, IsPlainOldData)

void AUTWeapon::SetZoomState(TEnumAsByte<EZoomState> NewZoomState)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.SetZoomState");

	AUTWeapon_SetZoomState_Params params;
	params.NewZoomState = NewZoomState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeapon.SetZoomMode
// (Native, Public, BlueprintCallable)
// Parameters:
// unsigned char                  NewZoomMode                    (Parm, ZeroConstructor, IsPlainOldData)

void AUTWeapon::SetZoomMode(unsigned char NewZoomMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.SetZoomMode");

	AUTWeapon_SetZoomMode_Params params;
	params.NewZoomMode = NewZoomMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeapon.SetupSpecialMaterials
// (Native, Public, BlueprintCallable)

void AUTWeapon::SetupSpecialMaterials()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.SetupSpecialMaterials");

	AUTWeapon_SetupSpecialMaterials_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeapon.ServerUpdateFiringStates
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// unsigned char                  FireSettings                   (Parm, ZeroConstructor, IsPlainOldData)

void AUTWeapon::ServerUpdateFiringStates(unsigned char FireSettings)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.ServerUpdateFiringStates");

	AUTWeapon_ServerUpdateFiringStates_Params params;
	params.FireSettings = FireSettings;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeapon.ServerStopFireRecent
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// unsigned char                  FireModeNum                    (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  InFireEventIndex               (Parm, ZeroConstructor, IsPlainOldData)

void AUTWeapon::ServerStopFireRecent(unsigned char FireModeNum, unsigned char InFireEventIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.ServerStopFireRecent");

	AUTWeapon_ServerStopFireRecent_Params params;
	params.FireModeNum = FireModeNum;
	params.InFireEventIndex = InFireEventIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeapon.ServerStopFire
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// unsigned char                  FireModeNum                    (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  InFireEventIndex               (Parm, ZeroConstructor, IsPlainOldData)

void AUTWeapon::ServerStopFire(unsigned char FireModeNum, unsigned char InFireEventIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.ServerStopFire");

	AUTWeapon_ServerStopFire_Params params;
	params.FireModeNum = FireModeNum;
	params.InFireEventIndex = InFireEventIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeapon.ServerStartFireOffset
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// unsigned char                  FireModeNum                    (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  InFireEventIndex               (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  ZOffset                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bClientFired                   (Parm, ZeroConstructor, IsPlainOldData)

void AUTWeapon::ServerStartFireOffset(unsigned char FireModeNum, unsigned char InFireEventIndex, unsigned char ZOffset, bool bClientFired)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.ServerStartFireOffset");

	AUTWeapon_ServerStartFireOffset_Params params;
	params.FireModeNum = FireModeNum;
	params.InFireEventIndex = InFireEventIndex;
	params.ZOffset = ZOffset;
	params.bClientFired = bClientFired;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeapon.ServerStartFire
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// unsigned char                  FireModeNum                    (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  InFireEventIndex               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bClientFired                   (Parm, ZeroConstructor, IsPlainOldData)

void AUTWeapon::ServerStartFire(unsigned char FireModeNum, unsigned char InFireEventIndex, bool bClientFired)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.ServerStartFire");

	AUTWeapon_ServerStartFire_Params params;
	params.FireModeNum = FireModeNum;
	params.InFireEventIndex = InFireEventIndex;
	params.bClientFired = bClientFired;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeapon.ServerSetZoomState
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// unsigned char                  NewZoomState                   (Parm, ZeroConstructor, IsPlainOldData)

void AUTWeapon::ServerSetZoomState(unsigned char NewZoomState)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.ServerSetZoomState");

	AUTWeapon_ServerSetZoomState_Params params;
	params.NewZoomState = NewZoomState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeapon.ServerSetZoomMode
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// unsigned char                  NewZoomMode                    (Parm, ZeroConstructor, IsPlainOldData)

void AUTWeapon::ServerSetZoomMode(unsigned char NewZoomMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.ServerSetZoomMode");

	AUTWeapon_ServerSetZoomMode_Params params;
	params.NewZoomMode = NewZoomMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeapon.ServerHitScanHit
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AUTCharacter*            HitScanChar                    (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  HitScanEventIndex              (Parm, ZeroConstructor, IsPlainOldData)

void AUTWeapon::ServerHitScanHit(class AUTCharacter* HitScanChar, unsigned char HitScanEventIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.ServerHitScanHit");

	AUTWeapon_ServerHitScanHit_Params params;
	params.HitScanChar = HitScanChar;
	params.HitScanEventIndex = HitScanEventIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeapon.ResendServerStartFireOffset
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// unsigned char                  FireModeNum                    (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  InFireEventIndex               (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  ZOffset                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bClientFired                   (Parm, ZeroConstructor, IsPlainOldData)

void AUTWeapon::ResendServerStartFireOffset(unsigned char FireModeNum, unsigned char InFireEventIndex, unsigned char ZOffset, bool bClientFired)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.ResendServerStartFireOffset");

	AUTWeapon_ResendServerStartFireOffset_Params params;
	params.FireModeNum = FireModeNum;
	params.InFireEventIndex = InFireEventIndex;
	params.ZOffset = ZOffset;
	params.bClientFired = bClientFired;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeapon.ResendServerStartFire
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// unsigned char                  FireModeNum                    (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  InFireEventIndex               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bClientFired                   (Parm, ZeroConstructor, IsPlainOldData)

void AUTWeapon::ResendServerStartFire(unsigned char FireModeNum, unsigned char InFireEventIndex, bool bClientFired)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.ResendServerStartFire");

	AUTWeapon_ResendServerStartFire_Params params;
	params.FireModeNum = FireModeNum;
	params.InFireEventIndex = InFireEventIndex;
	params.bClientFired = bClientFired;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeapon.PlayWeaponAnim
// (Native, Public, BlueprintCallable)
// Parameters:
// class UAnimMontage*            WeaponAnim                     (Parm, ZeroConstructor, IsPlainOldData)
// class UAnimMontage*            HandsAnim                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          RateOverride                   (Parm, ZeroConstructor, IsPlainOldData)

void AUTWeapon::PlayWeaponAnim(class UAnimMontage* WeaponAnim, class UAnimMontage* HandsAnim, float RateOverride)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.PlayWeaponAnim");

	AUTWeapon_PlayWeaponAnim_Params params;
	params.WeaponAnim = WeaponAnim;
	params.HandsAnim = HandsAnim;
	params.RateOverride = RateOverride;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeapon.PlayImpactEffects
// (Native, Event, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                 TargetLoc                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// unsigned char                  FireMode                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 SpawnLocation                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FRotator                SpawnRotation                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void AUTWeapon::PlayImpactEffects(const struct FVector& TargetLoc, unsigned char FireMode, const struct FVector& SpawnLocation, const struct FRotator& SpawnRotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.PlayImpactEffects");

	AUTWeapon_PlayImpactEffects_Params params;
	params.TargetLoc = TargetLoc;
	params.FireMode = FireMode;
	params.SpawnLocation = SpawnLocation;
	params.SpawnRotation = SpawnRotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeapon.PlayFiringEffects
// (Native, Public, BlueprintCallable)

void AUTWeapon::PlayFiringEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.PlayFiringEffects");

	AUTWeapon_PlayFiringEffects_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeapon.OnZoomedOut
// (Native, Event, Public, BlueprintEvent)

void AUTWeapon::OnZoomedOut()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.OnZoomedOut");

	AUTWeapon_OnZoomedOut_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeapon.OnZoomedIn
// (Native, Event, Public, BlueprintEvent)

void AUTWeapon::OnZoomedIn()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.OnZoomedIn");

	AUTWeapon_OnZoomedIn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeapon.OnStoppedFiring
// (Native, Event, Public, BlueprintEvent)

void AUTWeapon::OnStoppedFiring()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.OnStoppedFiring");

	AUTWeapon_OnStoppedFiring_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeapon.OnStartedFiring
// (Native, Event, Public, BlueprintEvent)

void AUTWeapon::OnStartedFiring()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.OnStartedFiring");

	AUTWeapon_OnStartedFiring_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeapon.OnRep_ZoomState
// (Native, Event, Public, BlueprintEvent)

void AUTWeapon::OnRep_ZoomState()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.OnRep_ZoomState");

	AUTWeapon_OnRep_ZoomState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeapon.OnRep_ZoomCount
// (Native, Public)

void AUTWeapon::OnRep_ZoomCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.OnRep_ZoomCount");

	AUTWeapon_OnRep_ZoomCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeapon.OnRep_AttachmentType
// (Native, Public)

void AUTWeapon::OnRep_AttachmentType()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.OnRep_AttachmentType");

	AUTWeapon_OnRep_AttachmentType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeapon.OnRep_Ammo
// (Native, Public)

void AUTWeapon::OnRep_Ammo()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.OnRep_Ammo");

	AUTWeapon_OnRep_Ammo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeapon.OnMultiPress
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// unsigned char                  OtherFireMode                  (Parm, ZeroConstructor, IsPlainOldData)

void AUTWeapon::OnMultiPress(unsigned char OtherFireMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.OnMultiPress");

	AUTWeapon_OnMultiPress_Params params;
	params.OtherFireMode = OtherFireMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeapon.OnHitScanDamage
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 FireDir                        (Parm, ZeroConstructor, IsPlainOldData)

void AUTWeapon::OnHitScanDamage(const struct FHitResult& Hit, const struct FVector& FireDir)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.OnHitScanDamage");

	AUTWeapon_OnHitScanDamage_Params params;
	params.Hit = Hit;
	params.FireDir = FireDir;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeapon.OnContinuedFiring
// (Native, Event, Public, BlueprintEvent)

void AUTWeapon::OnContinuedFiring()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.OnContinuedFiring");

	AUTWeapon_OnContinuedFiring_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeapon.OnBringUp
// (Event, Public, BlueprintEvent)

void AUTWeapon::OnBringUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.OnBringUp");

	AUTWeapon_OnBringUp_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeapon.NotifyTeamChanged
// (Event, Public, BlueprintEvent)

void AUTWeapon::NotifyTeamChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.NotifyTeamChanged");

	AUTWeapon_NotifyTeamChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeapon.NotifyKillWhileHolding
// (BlueprintCosmetic, Native, Event, Public, BlueprintEvent)
// Parameters:
// class UClass*                  DmgType                        (Parm, ZeroConstructor, IsPlainOldData)

void AUTWeapon::NotifyKillWhileHolding(class UClass* DmgType)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.NotifyKillWhileHolding");

	AUTWeapon_NotifyKillWhileHolding_Params params;
	params.DmgType = DmgType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeapon.NeedsAmmoDisplay
// (BlueprintCosmetic, Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTWeapon::NeedsAmmoDisplay()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.NeedsAmmoDisplay");

	AUTWeapon_NeedsAmmoDisplay_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTWeapon.ModifyFireEffect
// (Event, Public, BlueprintEvent)
// Parameters:
// class UParticleSystemComponent* Effect                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AUTWeapon::ModifyFireEffect(class UParticleSystemComponent* Effect)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.ModifyFireEffect");

	AUTWeapon_ModifyFireEffect_Params params;
	params.Effect = Effect;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeapon.K2_FireInstantHit
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// bool                           bDealDamage                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              OutHit                         (Parm, OutParm, IsPlainOldData)

void AUTWeapon::K2_FireInstantHit(bool bDealDamage, struct FHitResult* OutHit)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.K2_FireInstantHit");

	AUTWeapon_K2_FireInstantHit_Params params;
	params.bDealDamage = bDealDamage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutHit != nullptr)
		*OutHit = params.OutHit;
}


// Function UnrealTournament.UTWeapon.IsUnEquipping
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTWeapon::IsUnEquipping()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.IsUnEquipping");

	AUTWeapon_IsUnEquipping_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTWeapon.IsPreparingAttack
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTWeapon::IsPreparingAttack()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.IsPreparingAttack");

	AUTWeapon_IsPreparingAttack_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTWeapon.IsFiring
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTWeapon::IsFiring()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.IsFiring");

	AUTWeapon_IsFiring_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTWeapon.HasAnyAmmo
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTWeapon::HasAnyAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.HasAnyAmmo");

	AUTWeapon_HasAnyAmmo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTWeapon.HasAmmo
// (Native, Public, BlueprintCallable)
// Parameters:
// unsigned char                  FireModeNum                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTWeapon::HasAmmo(unsigned char FireModeNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.HasAmmo");

	AUTWeapon_HasAmmo_Params params;
	params.FireModeNum = FireModeNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTWeapon.GuessPlayerTarget
// (BlueprintAuthorityOnly, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 StartFireLoc                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector                 FireDir                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void AUTWeapon::GuessPlayerTarget(const struct FVector& StartFireLoc, const struct FVector& FireDir)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.GuessPlayerTarget");

	AUTWeapon_GuessPlayerTarget_Params params;
	params.StartFireLoc = StartFireLoc;
	params.FireDir = FireDir;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeapon.GotoFireMode
// (Native, Public, BlueprintCallable)
// Parameters:
// unsigned char                  NewFireMode                    (Parm, ZeroConstructor, IsPlainOldData)

void AUTWeapon::GotoFireMode(unsigned char NewFireMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.GotoFireMode");

	AUTWeapon_GotoFireMode_Params params;
	params.NewFireMode = NewFireMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeapon.GetZoomMaterial
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// unsigned char                  FireModeNum                    (Parm, ZeroConstructor, IsPlainOldData)
// class UMaterialInstanceDynamic* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UMaterialInstanceDynamic* AUTWeapon::GetZoomMaterial(unsigned char FireModeNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.GetZoomMaterial");

	AUTWeapon_GetZoomMaterial_Params params;
	params.FireModeNum = FireModeNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTWeapon.GetWeaponHand
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EWeaponHand                    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EWeaponHand AUTWeapon::GetWeaponHand()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.GetWeaponHand");

	AUTWeapon_GetWeaponHand_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTWeapon.GetRefireTime
// (Native, Public, BlueprintCallable)
// Parameters:
// unsigned char                  FireModeNum                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AUTWeapon::GetRefireTime(unsigned char FireModeNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.GetRefireTime");

	AUTWeapon_GetRefireTime_Params params;
	params.FireModeNum = FireModeNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTWeapon.GetPutDownTime
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AUTWeapon::GetPutDownTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.GetPutDownTime");

	AUTWeapon_GetPutDownTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTWeapon.GetImpactSpawnPosition
// (Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 TargetLoc                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector                 SpawnLocation                  (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FRotator                SpawnRotation                  (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void AUTWeapon::GetImpactSpawnPosition(const struct FVector& TargetLoc, struct FVector* SpawnLocation, struct FRotator* SpawnRotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.GetImpactSpawnPosition");

	AUTWeapon_GetImpactSpawnPosition_Params params;
	params.TargetLoc = TargetLoc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (SpawnLocation != nullptr)
		*SpawnLocation = params.SpawnLocation;
	if (SpawnRotation != nullptr)
		*SpawnRotation = params.SpawnRotation;
}


// Function UnrealTournament.UTWeapon.GetImpactEffectHit
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class APawn*                   Shooter                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 StartLoc                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector                 TargetLoc                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FHitResult              ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FHitResult AUTWeapon::STATIC_GetImpactEffectHit(class APawn* Shooter, const struct FVector& StartLoc, const struct FVector& TargetLoc)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.GetImpactEffectHit");

	AUTWeapon_GetImpactEffectHit_Params params;
	params.Shooter = Shooter;
	params.StartLoc = StartLoc;
	params.TargetLoc = TargetLoc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTWeapon.GetFiringAnim
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// unsigned char                  FireMode                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bOnHands                       (Parm, ZeroConstructor, IsPlainOldData)
// class UAnimMontage*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAnimMontage* AUTWeapon::GetFiringAnim(unsigned char FireMode, bool bOnHands)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.GetFiringAnim");

	AUTWeapon_GetFiringAnim_Params params;
	params.FireMode = FireMode;
	params.bOnHands = bOnHands;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTWeapon.GetFireStartLoc
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// unsigned char                  FireMode                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector AUTWeapon::GetFireStartLoc(unsigned char FireMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.GetFireStartLoc");

	AUTWeapon_GetFireStartLoc_Params params;
	params.FireMode = FireMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTWeapon.GetDamageRadius
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// unsigned char                  TestMode                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AUTWeapon::GetDamageRadius(unsigned char TestMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.GetDamageRadius");

	AUTWeapon_GetDamageRadius_Params params;
	params.TestMode = TestMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTWeapon.GetCrosshairScale
// (Native, Public, BlueprintCallable)
// Parameters:
// class AUTHUD*                  HUD                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AUTWeapon::GetCrosshairScale(class AUTHUD* HUD)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.GetCrosshairScale");

	AUTWeapon_GetCrosshairScale_Params params;
	params.HUD = HUD;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTWeapon.GetCrosshairColor
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UUTHUDWidget*            WeaponHudWidget                (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FLinearColor AUTWeapon::GetCrosshairColor(class UUTHUDWidget* WeaponHudWidget)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.GetCrosshairColor");

	AUTWeapon_GetCrosshairColor_Params params;
	params.WeaponHudWidget = WeaponHudWidget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTWeapon.GetBringUpTime
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AUTWeapon::GetBringUpTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.GetBringUpTime");

	AUTWeapon_GetBringUpTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTWeapon.GetBaseFireRotation
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FRotator AUTWeapon::GetBaseFireRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.GetBaseFireRotation");

	AUTWeapon_GetBaseFireRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTWeapon.GetAISelectRating
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AUTWeapon::GetAISelectRating()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.GetAISelectRating");

	AUTWeapon_GetAISelectRating_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTWeapon.GetAdjustedAim
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                 StartFireLoc                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FRotator                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FRotator AUTWeapon::GetAdjustedAim(const struct FVector& StartFireLoc)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.GetAdjustedAim");

	AUTWeapon_GetAdjustedAim_Params params;
	params.StartFireLoc = StartFireLoc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTWeapon.Get1PMeshes
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TArray<class UMeshComponent*>  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UMeshComponent*> AUTWeapon::Get1PMeshes()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.Get1PMeshes");

	AUTWeapon_Get1PMeshes_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTWeapon.FiringInfoUpdated
// (Native, Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// unsigned char                  InFireMode                     (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  FlashCount                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 InFlashLocation                (Parm, ZeroConstructor, IsPlainOldData)

void AUTWeapon::FiringInfoUpdated(unsigned char InFireMode, unsigned char FlashCount, const struct FVector& InFlashLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.FiringInfoUpdated");

	AUTWeapon_FiringInfoUpdated_Params params;
	params.InFireMode = InFireMode;
	params.FlashCount = FlashCount;
	params.InFlashLocation = InFlashLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeapon.FiringExtraUpdated
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// unsigned char                  NewFlashExtra                  (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  InFireMode                     (Parm, ZeroConstructor, IsPlainOldData)

void AUTWeapon::FiringExtraUpdated(unsigned char NewFlashExtra, unsigned char InFireMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.FiringExtraUpdated");

	AUTWeapon_FiringExtraUpdated_Params params;
	params.NewFlashExtra = NewFlashExtra;
	params.InFireMode = InFireMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeapon.FiringEffectsUpdated
// (Native, Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// unsigned char                  InFireMode                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 InFlashLocation                (Parm, ZeroConstructor, IsPlainOldData)

void AUTWeapon::FiringEffectsUpdated(unsigned char InFireMode, const struct FVector& InFlashLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.FiringEffectsUpdated");

	AUTWeapon_FiringEffectsUpdated_Params params;
	params.InFireMode = InFireMode;
	params.InFlashLocation = InFlashLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeapon.FireShotOverride
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTWeapon::FireShotOverride()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.FireShotOverride");

	AUTWeapon_FireShotOverride_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTWeapon.FireShot
// (Native, Public, BlueprintCallable)

void AUTWeapon::FireShot()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.FireShot");

	AUTWeapon_FireShot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeapon.FireProjectile
// (Native, Public, BlueprintCallable)
// Parameters:
// class AUTProjectile*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AUTProjectile* AUTWeapon::FireProjectile()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.FireProjectile");

	AUTWeapon_FireProjectile_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTWeapon.FireCone
// (Native, Public, BlueprintCallable)

void AUTWeapon::FireCone()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.FireCone");

	AUTWeapon_FireCone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeapon.eventPreventPutDown
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTWeapon::eventPreventPutDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.eventPreventPutDown");

	AUTWeapon_eventPreventPutDown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTWeapon.DrawWeaponCrosshair
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUTHUDWidget*            WeaponHudWidget                (Parm, ZeroConstructor, IsPlainOldData)
// float                          RenderDelta                    (Parm, ZeroConstructor, IsPlainOldData)

void AUTWeapon::DrawWeaponCrosshair(class UUTHUDWidget* WeaponHudWidget, float RenderDelta)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.DrawWeaponCrosshair");

	AUTWeapon_DrawWeaponCrosshair_Params params;
	params.WeaponHudWidget = WeaponHudWidget;
	params.RenderDelta = RenderDelta;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeapon.DetachFromOwner
// (Native, Event, Public, BlueprintEvent)

void AUTWeapon::DetachFromOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.DetachFromOwner");

	AUTWeapon_DetachFromOwner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeapon.DetachFromHolster
// (Native, Public)

void AUTWeapon::DetachFromHolster()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.DetachFromHolster");

	AUTWeapon_DetachFromHolster_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeapon.ConsumeAmmo
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// unsigned char                  FireModeNum                    (Parm, ZeroConstructor, IsPlainOldData)

void AUTWeapon::ConsumeAmmo(unsigned char FireModeNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.ConsumeAmmo");

	AUTWeapon_ConsumeAmmo_Params params;
	params.FireModeNum = FireModeNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeapon.ClientMissedHitScan
// (Net, Native, Event, Public, NetClient)
// Parameters:
// struct FVector_NetQuantize     MissedHitScanStart             (Parm)
// struct FVector_NetQuantize     MissedHitScanEnd               (Parm)
// struct FVector_NetQuantize     MissedHitScanLoc               (Parm)
// float                          MissedHitScanTime              (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  MissedHitScanIndex             (Parm, ZeroConstructor, IsPlainOldData)

void AUTWeapon::ClientMissedHitScan(const struct FVector_NetQuantize& MissedHitScanStart, const struct FVector_NetQuantize& MissedHitScanEnd, const struct FVector_NetQuantize& MissedHitScanLoc, float MissedHitScanTime, unsigned char MissedHitScanIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.ClientMissedHitScan");

	AUTWeapon_ClientMissedHitScan_Params params;
	params.MissedHitScanStart = MissedHitScanStart;
	params.MissedHitScanEnd = MissedHitScanEnd;
	params.MissedHitScanLoc = MissedHitScanLoc;
	params.MissedHitScanTime = MissedHitScanTime;
	params.MissedHitScanIndex = MissedHitScanIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeapon.CanSwitchTo
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTWeapon::CanSwitchTo()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.CanSwitchTo");

	AUTWeapon_CanSwitchTo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTWeapon.CancelImpactEffect
// (Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FHitResult              ImpactHit                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTWeapon::CancelImpactEffect(const struct FHitResult& ImpactHit)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.CancelImpactEffect");

	AUTWeapon_CancelImpactEffect_Params params;
	params.ImpactHit = ImpactHit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTWeapon.CanAttack
// (Native, Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 TargetLoc                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           bDirectOnly                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bPreferCurrentMode             (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  BestFireMode                   (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector                 OptimalTargetLoc               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTWeapon::CanAttack(class AActor* Target, const struct FVector& TargetLoc, bool bDirectOnly, bool bPreferCurrentMode, unsigned char* BestFireMode, struct FVector* OptimalTargetLoc)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.CanAttack");

	AUTWeapon_CanAttack_Params params;
	params.Target = Target;
	params.TargetLoc = TargetLoc;
	params.bDirectOnly = bDirectOnly;
	params.bPreferCurrentMode = bPreferCurrentMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (BestFireMode != nullptr)
		*BestFireMode = params.BestFireMode;
	if (OptimalTargetLoc != nullptr)
		*OptimalTargetLoc = params.OptimalTargetLoc;

	return params.ReturnValue;
}


// Function UnrealTournament.UTWeapon.AttachToOwner
// (Native, Event, Public, BlueprintEvent)

void AUTWeapon::AttachToOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.AttachToOwner");

	AUTWeapon_AttachToOwner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeapon.AttachToHolster
// (Native, Public)

void AUTWeapon::AttachToHolster()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.AttachToHolster");

	AUTWeapon_AttachToHolster_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeapon.AddAmmo
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// int                            Amount                         (Parm, ZeroConstructor, IsPlainOldData)

void AUTWeapon::AddAmmo(int Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapon.AddAmmo");

	AUTWeapon_AddAmmo_Params params;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLineUpZoneVisualizationCharacter.OnChangeTeamNum
// (Final, Native, Public)

void AUTLineUpZoneVisualizationCharacter::OnChangeTeamNum()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLineUpZoneVisualizationCharacter.OnChangeTeamNum");

	AUTLineUpZoneVisualizationCharacter_OnChangeTeamNum_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLineUpZoneVisualizationCharacter.GetTeamNum
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

unsigned char AUTLineUpZoneVisualizationCharacter::GetTeamNum()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLineUpZoneVisualizationCharacter.GetTeamNum");

	AUTLineUpZoneVisualizationCharacter_GetTeamNum_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTLineUpZone.UpdateSpawnLocationsWithVisualizationMove
// (Final, Native, Public)

void AUTLineUpZone::UpdateSpawnLocationsWithVisualizationMove()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLineUpZone.UpdateSpawnLocationsWithVisualizationMove");

	AUTLineUpZone_UpdateSpawnLocationsWithVisualizationMove_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLineUpZone.UpdateMeshVisualizations
// (Final, Native, Public)

void AUTLineUpZone::UpdateMeshVisualizations()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLineUpZone.UpdateMeshVisualizations");

	AUTLineUpZone_UpdateMeshVisualizations_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLineUpZone.SnapToFloor
// (Final, Native, Public)

void AUTLineUpZone::SnapToFloor()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLineUpZone.SnapToFloor");

	AUTLineUpZone_SnapToFloor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLineUpZone.OnTransitionToWeaponReadyAnims
// (Native, Event, Public, BlueprintEvent)

void AUTLineUpZone::OnTransitionToWeaponReadyAnims()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLineUpZone.OnTransitionToWeaponReadyAnims");

	AUTLineUpZone_OnTransitionToWeaponReadyAnims_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLineUpZone.OnPlayWeaponReadyAnimOnCharacter
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AUTCharacter*            UTChar                         (Parm, ZeroConstructor, IsPlainOldData)

void AUTLineUpZone::OnPlayWeaponReadyAnimOnCharacter(class AUTCharacter* UTChar)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLineUpZone.OnPlayWeaponReadyAnimOnCharacter");

	AUTLineUpZone_OnPlayWeaponReadyAnimOnCharacter_Params params;
	params.UTChar = UTChar;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLineUpZone.OnPlayIntroAnimationOnCharacter
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AUTCharacter*            UTChar                         (Parm, ZeroConstructor, IsPlainOldData)

void AUTLineUpZone::OnPlayIntroAnimationOnCharacter(class AUTCharacter* UTChar)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLineUpZone.OnPlayIntroAnimationOnCharacter");

	AUTLineUpZone_OnPlayIntroAnimationOnCharacter_Params params;
	params.UTChar = UTChar;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLineUpZone.OnLineUpStart
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// ELineUpTypes                   Type                           (Parm, ZeroConstructor, IsPlainOldData)

void AUTLineUpZone::OnLineUpStart(ELineUpTypes Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLineUpZone.OnLineUpStart");

	AUTLineUpZone_OnLineUpStart_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLineUpZone.OnLineUpEnd
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// ELineUpTypes                   Type                           (Parm, ZeroConstructor, IsPlainOldData)

void AUTLineUpZone::OnLineUpEnd(ELineUpTypes Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLineUpZone.OnLineUpEnd");

	AUTLineUpZone_OnLineUpEnd_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLineUpZone.InitializeMeshVisualizations
// (Final, Native, Public)

void AUTLineUpZone::InitializeMeshVisualizations()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLineUpZone.InitializeMeshVisualizations");

	AUTLineUpZone_InitializeMeshVisualizations_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLineUpZone.DeleteAllMeshVisualizations
// (Final, Native, Public)

void AUTLineUpZone::DeleteAllMeshVisualizations()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLineUpZone.DeleteAllMeshVisualizations");

	AUTLineUpZone_DeleteAllMeshVisualizations_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTDemoRecSpectator.ToggleReplayWindow
// (Final, Exec, Native, Public)

void AUTDemoRecSpectator::ToggleReplayWindow()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTDemoRecSpectator.ToggleReplayWindow");

	AUTDemoRecSpectator_ToggleReplayWindow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTDemoRecSpectator.MulticastReceiveLocalizedMessage
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class UClass*                  Message                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            Switch                         (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerState*            RelatedPlayerState_2           (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerState*            RelatedPlayerState_3           (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 OptionalObject                 (Parm, ZeroConstructor, IsPlainOldData)

void AUTDemoRecSpectator::MulticastReceiveLocalizedMessage(class UClass* Message, int Switch, class APlayerState* RelatedPlayerState_2, class APlayerState* RelatedPlayerState_3, class UObject* OptionalObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTDemoRecSpectator.MulticastReceiveLocalizedMessage");

	AUTDemoRecSpectator_MulticastReceiveLocalizedMessage_Params params;
	params.Message = Message;
	params.Switch = Switch;
	params.RelatedPlayerState_2 = RelatedPlayerState_2;
	params.RelatedPlayerState_3 = RelatedPlayerState_3;
	params.OptionalObject = OptionalObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTDemoRecSpectator.DumpSpecInfo
// (Final, Exec, Native, Public)

void AUTDemoRecSpectator::DumpSpecInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTDemoRecSpectator.DumpSpecInfo");

	AUTDemoRecSpectator_DumpSpecInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTDemoRecSpectator.DemoNotifyCausedHit
// (Net, Native, Event, Public, HasDefaults, NetClient)
// Parameters:
// class APawn*                   InstigatorPawn                 (Parm, ZeroConstructor, IsPlainOldData)
// class AUTCharacter*            HitPawn                        (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  AppliedDamage                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Momentum                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FDamageEvent            DamageEvent                    (ConstParm, Parm, ReferenceParm)
// bool                           bArmorDamage                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bOverhealth                    (Parm, ZeroConstructor, IsPlainOldData)

void AUTDemoRecSpectator::DemoNotifyCausedHit(class APawn* InstigatorPawn, class AUTCharacter* HitPawn, unsigned char AppliedDamage, const struct FVector& Momentum, const struct FDamageEvent& DamageEvent, bool bArmorDamage, bool bOverhealth)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTDemoRecSpectator.DemoNotifyCausedHit");

	AUTDemoRecSpectator_DemoNotifyCausedHit_Params params;
	params.InstigatorPawn = InstigatorPawn;
	params.HitPawn = HitPawn;
	params.AppliedDamage = AppliedDamage;
	params.Momentum = Momentum;
	params.DamageEvent = DamageEvent;
	params.bArmorDamage = bArmorDamage;
	params.bOverhealth = bOverhealth;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBlurWidget.SetColorAndOpacity
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor            InColorAndOpacity              (Parm, ZeroConstructor, IsPlainOldData)

void UUTBlurWidget::SetColorAndOpacity(const struct FLinearColor& InColorAndOpacity)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBlurWidget.SetColorAndOpacity");

	UUTBlurWidget_SetColorAndOpacity_Params params;
	params.InColorAndOpacity = InColorAndOpacity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTUserWidgetBase.SetUTTooltip
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UWidget*                 InTooltipWidget                (Parm, ZeroConstructor, IsPlainOldData)

void UUTUserWidgetBase::SetUTTooltip(class UWidget* InTooltipWidget)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTUserWidgetBase.SetUTTooltip");

	UUTUserWidgetBase_SetUTTooltip_Params params;
	params.InTooltipWidget = InTooltipWidget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTUserWidgetBase.SetBasicTooltipTitle
// (Final, Native, Protected, HasOutParms, BlueprintCallable)
// Parameters:
// struct FText                   NewTooltipTitle                (ConstParm, Parm, OutParm, ReferenceParm)

void UUTUserWidgetBase::SetBasicTooltipTitle(const struct FText& NewTooltipTitle)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTUserWidgetBase.SetBasicTooltipTitle");

	UUTUserWidgetBase_SetBasicTooltipTitle_Params params;
	params.NewTooltipTitle = NewTooltipTitle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTUserWidgetBase.SetBasicTooltipText
// (Final, Native, Protected, HasOutParms, BlueprintCallable)
// Parameters:
// struct FText                   NewTooltipText                 (ConstParm, Parm, OutParm, ReferenceParm)

void UUTUserWidgetBase::SetBasicTooltipText(const struct FText& NewTooltipText)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTUserWidgetBase.SetBasicTooltipText");

	UUTUserWidgetBase_SetBasicTooltipText_Params params;
	params.NewTooltipText = NewTooltipText;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTUserWidgetBase.SetBasicTooltipInfo
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// struct FText                   NewTooltipTitle                (Parm)
// struct FText                   NewTooltipText                 (Parm)

void UUTUserWidgetBase::SetBasicTooltipInfo(const struct FText& NewTooltipTitle, const struct FText& NewTooltipText)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTUserWidgetBase.SetBasicTooltipInfo");

	UUTUserWidgetBase_SetBasicTooltipInfo_Params params;
	params.NewTooltipTitle = NewTooltipTitle;
	params.NewTooltipText = NewTooltipText;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTUserWidgetBase.GetBasicTooltipText
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)

struct FText UUTUserWidgetBase::GetBasicTooltipText()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTUserWidgetBase.GetBasicTooltipText");

	UUTUserWidgetBase_GetBasicTooltipText_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTUserWidgetBase.DynamicGetTooltipContent
// (Final, Native, Private)
// Parameters:
// class UWidget*                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UWidget* UUTUserWidgetBase::DynamicGetTooltipContent()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTUserWidgetBase.DynamicGetTooltipContent");

	UUTUserWidgetBase_DynamicGetTooltipContent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTInputHandlerWidget.HandleRequestedInput
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// struct FKey                    Key                            (Parm)
// TEnumAsByte<EInputEvent>       EventType                      (Parm, ZeroConstructor, IsPlainOldData)

void UUTInputHandlerWidget::HandleRequestedInput(const struct FKey& Key, TEnumAsByte<EInputEvent> EventType)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTInputHandlerWidget.HandleRequestedInput");

	UUTInputHandlerWidget_HandleRequestedInput_Params params;
	params.Key = Key;
	params.EventType = EventType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTButtonStyle.GetSelectedTextStyle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UUTTextStyle*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UUTTextStyle* UUTButtonStyle::GetSelectedTextStyle()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTButtonStyle.GetSelectedTextStyle");

	UUTButtonStyle_GetSelectedTextStyle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTButtonStyle.GetSelectedPressedBrush
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EUTWidgetStyleSize> Size                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FSlateBrush             Brush                          (Parm, OutParm)

void UUTButtonStyle::GetSelectedPressedBrush(TEnumAsByte<EUTWidgetStyleSize> Size, struct FSlateBrush* Brush)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTButtonStyle.GetSelectedPressedBrush");

	UUTButtonStyle_GetSelectedPressedBrush_Params params;
	params.Size = Size;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Brush != nullptr)
		*Brush = params.Brush;
}


// Function UnrealTournament.UTButtonStyle.GetSelectedHoveredBrush
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EUTWidgetStyleSize> Size                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FSlateBrush             Brush                          (Parm, OutParm)

void UUTButtonStyle::GetSelectedHoveredBrush(TEnumAsByte<EUTWidgetStyleSize> Size, struct FSlateBrush* Brush)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTButtonStyle.GetSelectedHoveredBrush");

	UUTButtonStyle_GetSelectedHoveredBrush_Params params;
	params.Size = Size;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Brush != nullptr)
		*Brush = params.Brush;
}


// Function UnrealTournament.UTButtonStyle.GetSelectedBaseBrush
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EUTWidgetStyleSize> Size                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FSlateBrush             Brush                          (Parm, OutParm)

void UUTButtonStyle::GetSelectedBaseBrush(TEnumAsByte<EUTWidgetStyleSize> Size, struct FSlateBrush* Brush)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTButtonStyle.GetSelectedBaseBrush");

	UUTButtonStyle_GetSelectedBaseBrush_Params params;
	params.Size = Size;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Brush != nullptr)
		*Brush = params.Brush;
}


// Function UnrealTournament.UTButtonStyle.GetNormalTextStyle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UUTTextStyle*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UUTTextStyle* UUTButtonStyle::GetNormalTextStyle()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTButtonStyle.GetNormalTextStyle");

	UUTButtonStyle_GetNormalTextStyle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTButtonStyle.GetNormalPressedBrush
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EUTWidgetStyleSize> Size                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FSlateBrush             Brush                          (Parm, OutParm)

void UUTButtonStyle::GetNormalPressedBrush(TEnumAsByte<EUTWidgetStyleSize> Size, struct FSlateBrush* Brush)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTButtonStyle.GetNormalPressedBrush");

	UUTButtonStyle_GetNormalPressedBrush_Params params;
	params.Size = Size;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Brush != nullptr)
		*Brush = params.Brush;
}


// Function UnrealTournament.UTButtonStyle.GetNormalHoveredBrush
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EUTWidgetStyleSize> Size                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FSlateBrush             Brush                          (Parm, OutParm)

void UUTButtonStyle::GetNormalHoveredBrush(TEnumAsByte<EUTWidgetStyleSize> Size, struct FSlateBrush* Brush)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTButtonStyle.GetNormalHoveredBrush");

	UUTButtonStyle_GetNormalHoveredBrush_Params params;
	params.Size = Size;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Brush != nullptr)
		*Brush = params.Brush;
}


// Function UnrealTournament.UTButtonStyle.GetNormalBaseBrush
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EUTWidgetStyleSize> Size                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FSlateBrush             Brush                          (Parm, OutParm)

void UUTButtonStyle::GetNormalBaseBrush(TEnumAsByte<EUTWidgetStyleSize> Size, struct FSlateBrush* Brush)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTButtonStyle.GetNormalBaseBrush");

	UUTButtonStyle_GetNormalBaseBrush_Params params;
	params.Size = Size;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Brush != nullptr)
		*Brush = params.Brush;
}


// Function UnrealTournament.UTButtonStyle.GetDisabledTextStyle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UUTTextStyle*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UUTTextStyle* UUTButtonStyle::GetDisabledTextStyle()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTButtonStyle.GetDisabledTextStyle");

	UUTButtonStyle_GetDisabledTextStyle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTButtonStyle.GetDisabledBrush
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EUTWidgetStyleSize> Size                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FSlateBrush             Brush                          (Parm, OutParm)

void UUTButtonStyle::GetDisabledBrush(TEnumAsByte<EUTWidgetStyleSize> Size, struct FSlateBrush* Brush)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTButtonStyle.GetDisabledBrush");

	UUTButtonStyle_GetDisabledBrush_Params params;
	params.Size = Size;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Brush != nullptr)
		*Brush = params.Brush;
}


// Function UnrealTournament.UTButtonStyle.GetCustomPadding
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EUTWidgetStyleSize> Size                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FMargin                 OutCustomPadding               (Parm, OutParm)

void UUTButtonStyle::GetCustomPadding(TEnumAsByte<EUTWidgetStyleSize> Size, struct FMargin* OutCustomPadding)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTButtonStyle.GetCustomPadding");

	UUTButtonStyle_GetCustomPadding_Params params;
	params.Size = Size;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutCustomPadding != nullptr)
		*OutCustomPadding = params.OutCustomPadding;
}


// Function UnrealTournament.UTButtonStyle.GetButtonPadding
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EUTWidgetStyleSize> Size                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FMargin                 OutButtonPadding               (Parm, OutParm)

void UUTButtonStyle::GetButtonPadding(TEnumAsByte<EUTWidgetStyleSize> Size, struct FMargin* OutButtonPadding)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTButtonStyle.GetButtonPadding");

	UUTButtonStyle_GetButtonPadding_Params params;
	params.Size = Size;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutButtonPadding != nullptr)
		*OutButtonPadding = params.OutButtonPadding;
}


// Function UnrealTournament.UTBaseButton.SetStyleSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EUTWidgetStyleSize> InSize                         (Parm, ZeroConstructor, IsPlainOldData)

void UUTBaseButton::SetStyleSize(TEnumAsByte<EUTWidgetStyleSize> InSize)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBaseButton.SetStyleSize");

	UUTBaseButton_SetStyleSize_Params params;
	params.InSize = InSize;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBaseButton.SetStyle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  InStyle                        (Parm, ZeroConstructor, IsPlainOldData)

void UUTBaseButton::SetStyle(class UClass* InStyle)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBaseButton.SetStyle");

	UUTBaseButton_SetStyle_Params params;
	params.InStyle = InStyle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBaseButton.SetSelectedInternal
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                           bInSelected                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAllowSound                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bBroadcast                     (Parm, ZeroConstructor, IsPlainOldData)

void UUTBaseButton::SetSelectedInternal(bool bInSelected, bool bAllowSound, bool bBroadcast)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBaseButton.SetSelectedInternal");

	UUTBaseButton_SetSelectedInternal_Params params;
	params.bInSelected = bInSelected;
	params.bAllowSound = bAllowSound;
	params.bBroadcast = bBroadcast;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBaseButton.SetMinDimensions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            InMinWidth                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            InMinHeight                    (Parm, ZeroConstructor, IsPlainOldData)

void UUTBaseButton::SetMinDimensions(int InMinWidth, int InMinHeight)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBaseButton.SetMinDimensions");

	UUTBaseButton_SetMinDimensions_Params params;
	params.InMinWidth = InMinWidth;
	params.InMinHeight = InMinHeight;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBaseButton.SetIsSelected
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           InSelected                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromClick                     (Parm, ZeroConstructor, IsPlainOldData)

void UUTBaseButton::SetIsSelected(bool InSelected, bool bFromClick)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBaseButton.SetIsSelected");

	UUTBaseButton_SetIsSelected_Params params;
	params.InSelected = InSelected;
	params.bFromClick = bFromClick;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBaseButton.SetIsSelectable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bInIsSelectable                (Parm, ZeroConstructor, IsPlainOldData)

void UUTBaseButton::SetIsSelectable(bool bInIsSelectable)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBaseButton.SetIsSelectable");

	UUTBaseButton_SetIsSelectable_Params params;
	params.bInIsSelectable = bInIsSelectable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBaseButton.OnStyleSizeChanged
// (Event, Protected, BlueprintEvent)

void UUTBaseButton::OnStyleSizeChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBaseButton.OnStyleSizeChanged");

	UUTBaseButton_OnStyleSizeChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBaseButton.IsPressed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUTBaseButton::IsPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBaseButton.IsPressed");

	UUTBaseButton_IsPressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTBaseButton.IsInteractionEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUTBaseButton::IsInteractionEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBaseButton.IsInteractionEnabled");

	UUTBaseButton_IsInteractionEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTBaseButton.IsHovered
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUTBaseButton::IsHovered()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBaseButton.IsHovered");

	UUTBaseButton_IsHovered_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTBaseButton.HandleButtonClicked
// (Final, Native, Protected)

void UUTBaseButton::HandleButtonClicked()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBaseButton.HandleButtonClicked");

	UUTBaseButton_HandleButtonClicked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBaseButton.GetStyle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UUTButtonStyle*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UUTButtonStyle* UUTBaseButton::GetStyle()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBaseButton.GetStyle");

	UUTBaseButton_GetStyle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTBaseButton.GetSelected
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUTBaseButton::GetSelected()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBaseButton.GetSelected");

	UUTBaseButton_GetSelected_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTBaseButton.GetCurrentTextStyleClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UUTBaseButton::GetCurrentTextStyleClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBaseButton.GetCurrentTextStyleClass");

	UUTBaseButton_GetCurrentTextStyleClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTBaseButton.GetCurrentTextStyle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UUTTextStyle*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UUTTextStyle* UUTBaseButton::GetCurrentTextStyle()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBaseButton.GetCurrentTextStyle");

	UUTBaseButton_GetCurrentTextStyle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTBaseButton.GetCurrentCustomPadding
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FMargin                 OutCustomPadding               (Parm, OutParm)

void UUTBaseButton::GetCurrentCustomPadding(struct FMargin* OutCustomPadding)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBaseButton.GetCurrentCustomPadding");

	UUTBaseButton_GetCurrentCustomPadding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutCustomPadding != nullptr)
		*OutCustomPadding = params.OutCustomPadding;
}


// Function UnrealTournament.UTBaseButton.GetCurrentButtonPadding
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FMargin                 OutButtonPadding               (Parm, OutParm)

void UUTBaseButton::GetCurrentButtonPadding(struct FMargin* OutButtonPadding)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBaseButton.GetCurrentButtonPadding");

	UUTBaseButton_GetCurrentButtonPadding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutButtonPadding != nullptr)
		*OutButtonPadding = params.OutButtonPadding;
}


// Function UnrealTournament.UTBaseButton.EnableButton
// (Final, Native, Public, BlueprintCallable)

void UUTBaseButton::EnableButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBaseButton.EnableButton");

	UUTBaseButton_EnableButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBaseButton.DisableButtonWithReason
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FText                   DisabledReason                 (ConstParm, Parm, OutParm, ReferenceParm)

void UUTBaseButton::DisableButtonWithReason(const struct FText& DisabledReason)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBaseButton.DisableButtonWithReason");

	UUTBaseButton_DisableButtonWithReason_Params params;
	params.DisabledReason = DisabledReason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBaseButton.DisableButton
// (Final, Native, Public, BlueprintCallable)

void UUTBaseButton::DisableButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBaseButton.DisableButton");

	UUTBaseButton_DisableButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBaseButton.ClearSelection
// (Final, Native, Public, BlueprintCallable)

void UUTBaseButton::ClearSelection()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBaseButton.ClearSelection");

	UUTBaseButton_ClearSelection_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBaseButton.BP_OnUnhovered
// (Event, Protected, BlueprintEvent)

void UUTBaseButton::BP_OnUnhovered()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBaseButton.BP_OnUnhovered");

	UUTBaseButton_BP_OnUnhovered_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBaseButton.BP_OnSelected
// (Event, Protected, BlueprintEvent)

void UUTBaseButton::BP_OnSelected()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBaseButton.BP_OnSelected");

	UUTBaseButton_BP_OnSelected_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBaseButton.BP_OnHovered
// (Event, Protected, BlueprintEvent)

void UUTBaseButton::BP_OnHovered()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBaseButton.BP_OnHovered");

	UUTBaseButton_BP_OnHovered_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBaseButton.BP_OnEnabled
// (Event, Protected, BlueprintEvent)

void UUTBaseButton::BP_OnEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBaseButton.BP_OnEnabled");

	UUTBaseButton_BP_OnEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBaseButton.BP_OnDisabled
// (Event, Protected, BlueprintEvent)

void UUTBaseButton::BP_OnDisabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBaseButton.BP_OnDisabled");

	UUTBaseButton_BP_OnDisabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBaseButton.BP_OnDeselected
// (Event, Protected, BlueprintEvent)

void UUTBaseButton::BP_OnDeselected()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBaseButton.BP_OnDeselected");

	UUTBaseButton_BP_OnDeselected_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBaseButton.BP_OnClicked
// (Event, Protected, BlueprintEvent)

void UUTBaseButton::BP_OnClicked()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBaseButton.BP_OnClicked");

	UUTBaseButton_BP_OnClicked_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCanvasRenderTarget2D.UpdateDispatcher
// (Final, Native, Public)
// Parameters:
// class UCanvas*                 Canvas                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            Width                          (Parm, ZeroConstructor, IsPlainOldData)
// int                            Height                         (Parm, ZeroConstructor, IsPlainOldData)

void UUTCanvasRenderTarget2D::UpdateDispatcher(class UCanvas* Canvas, int Width, int Height)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCanvasRenderTarget2D.UpdateDispatcher");

	UUTCanvasRenderTarget2D_UpdateDispatcher_Params params;
	params.Canvas = Canvas;
	params.Width = Width;
	params.Height = Height;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCheatManager.WOff
// (Exec, Native, Public)
// Parameters:
// float                          F                              (Parm, ZeroConstructor, IsPlainOldData)

void UUTCheatManager::WOff(float F)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCheatManager.WOff");

	UUTCheatManager_WOff_Params params;
	params.F = F;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCheatManager.ViewBot
// (Final, Exec, Native, Public)

void UUTCheatManager::ViewBot()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCheatManager.ViewBot");

	UUTCheatManager_ViewBot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCheatManager.UnlockTutorials
// (Final, Exec, Native, Public)

void UUTCheatManager::UnlockTutorials()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCheatManager.UnlockTutorials");

	UUTCheatManager_UnlockTutorials_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCheatManager.UnlimitedPowerupUses
// (Final, Exec, Native, Public)

void UUTCheatManager::UnlimitedPowerupUses()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCheatManager.UnlimitedPowerupUses");

	UUTCheatManager_UnlimitedPowerupUses_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCheatManager.UnlimitedAmmo
// (Exec, Native, Public)

void UUTCheatManager::UnlimitedAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCheatManager.UnlimitedAmmo");

	UUTCheatManager_UnlimitedAmmo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCheatManager.ua
// (Exec, Native, Public)

void UUTCheatManager::ua()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCheatManager.ua");

	UUTCheatManager_ua_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCheatManager.TestPaths
// (Final, Exec, Native, Public)
// Parameters:
// bool                           bHighJumps                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bWallDodges                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bLifts                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bLiftJumps                     (Parm, ZeroConstructor, IsPlainOldData)

void UUTCheatManager::TestPaths(bool bHighJumps, bool bWallDodges, bool bLifts, bool bLiftJumps)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCheatManager.TestPaths");

	UUTCheatManager_TestPaths_Params params;
	params.bHighJumps = bHighJumps;
	params.bWallDodges = bWallDodges;
	params.bLifts = bLifts;
	params.bLiftJumps = bLiftJumps;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCheatManager.TestAMDAllocation
// (Final, Exec, Native, Public)

void UUTCheatManager::TestAMDAllocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCheatManager.TestAMDAllocation");

	UUTCheatManager_TestAMDAllocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCheatManager.Teleport
// (Exec, Native, Public)

void UUTCheatManager::Teleport()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCheatManager.Teleport");

	UUTCheatManager_Teleport_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCheatManager.Spread
// (Final, Exec, Native, Public)
// Parameters:
// float                          Scaling                        (Parm, ZeroConstructor, IsPlainOldData)

void UUTCheatManager::Spread(float Scaling)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCheatManager.Spread");

	UUTCheatManager_Spread_Params params;
	params.Scaling = Scaling;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCheatManager.SetHat
// (Exec, Native, Public)
// Parameters:
// struct FString                 Hat                            (Parm, ZeroConstructor)

void UUTCheatManager::SetHat(const struct FString& Hat)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCheatManager.SetHat");

	UUTCheatManager_SetHat_Params params;
	params.Hat = Hat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCheatManager.SetEyewear
// (Exec, Native, Public)
// Parameters:
// struct FString                 Eyewear                        (Parm, ZeroConstructor)

void UUTCheatManager::SetEyewear(const struct FString& Eyewear)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCheatManager.SetEyewear");

	UUTCheatManager_SetEyewear_Params params;
	params.Eyewear = Eyewear;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCheatManager.SetChar
// (Exec, Native, Public)
// Parameters:
// struct FString                 NewChar                        (Parm, ZeroConstructor)

void UUTCheatManager::SetChar(const struct FString& NewChar)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCheatManager.SetChar");

	UUTCheatManager_SetChar_Params params;
	params.NewChar = NewChar;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCheatManager.ReportWaitTime
// (Final, Exec, Native, Public)
// Parameters:
// struct FString                 RatingType                     (Parm, ZeroConstructor)
// int                            Seconds                        (Parm, ZeroConstructor, IsPlainOldData)

void UUTCheatManager::ReportWaitTime(const struct FString& RatingType, int Seconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCheatManager.ReportWaitTime");

	UUTCheatManager_ReportWaitTime_Params params;
	params.RatingType = RatingType;
	params.Seconds = Seconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCheatManager.PlayTaunt
// (Exec, Native, Public)
// Parameters:
// struct FString                 TauntClass                     (Parm, ZeroConstructor)

void UUTCheatManager::PlayTaunt(const struct FString& TauntClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCheatManager.PlayTaunt");

	UUTCheatManager_PlayTaunt_Params params;
	params.TauntClass = TauntClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCheatManager.NoOutline
// (Exec, Native, Public)

void UUTCheatManager::NoOutline()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCheatManager.NoOutline");

	UUTCheatManager_NoOutline_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCheatManager.McpRefreshProfile
// (Final, Exec, Native, Public)

void UUTCheatManager::McpRefreshProfile()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCheatManager.McpRefreshProfile");

	UUTCheatManager_McpRefreshProfile_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCheatManager.McpGrantItem
// (Final, Exec, Native, Public)
// Parameters:
// struct FString                 ItemId                         (Parm, ZeroConstructor)

void UUTCheatManager::McpGrantItem(const struct FString& ItemId)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCheatManager.McpGrantItem");

	UUTCheatManager_McpGrantItem_Params params;
	params.ItemId = ItemId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCheatManager.McpGetVersion
// (Final, Exec, Native, Public)

void UUTCheatManager::McpGetVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCheatManager.McpGetVersion");

	UUTCheatManager_McpGetVersion_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCheatManager.McpDestroyItem
// (Final, Exec, Native, Public)
// Parameters:
// struct FString                 ItemId                         (Parm, ZeroConstructor)

void UUTCheatManager::McpDestroyItem(const struct FString& ItemId)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCheatManager.McpDestroyItem");

	UUTCheatManager_McpDestroyItem_Params params;
	params.ItemId = ItemId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCheatManager.McpCheat
// (Final, Exec, Native, Public)

void UUTCheatManager::McpCheat()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCheatManager.McpCheat");

	UUTCheatManager_McpCheat_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCheatManager.MatchmakeMyParty
// (Final, Exec, Native, Public)
// Parameters:
// int                            PlaylistId                     (Parm, ZeroConstructor, IsPlainOldData)

void UUTCheatManager::MatchmakeMyParty(int PlaylistId)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCheatManager.MatchmakeMyParty");

	UUTCheatManager_MatchmakeMyParty_Params params;
	params.PlaylistId = PlaylistId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCheatManager.Loaded
// (Exec, Native, Public)

void UUTCheatManager::Loaded()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCheatManager.Loaded");

	UUTCheatManager_Loaded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCheatManager.ImpartWeaponSkin
// (Exec, Native, Public)
// Parameters:
// struct FString                 Skin                           (Parm, ZeroConstructor)

void UUTCheatManager::ImpartWeaponSkin(const struct FString& Skin)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCheatManager.ImpartWeaponSkin");

	UUTCheatManager_ImpartWeaponSkin_Params params;
	params.Skin = Skin;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCheatManager.ImpartHats
// (Exec, Native, Public)
// Parameters:
// struct FString                 Hat                            (Parm, ZeroConstructor)

void UUTCheatManager::ImpartHats(const struct FString& Hat)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCheatManager.ImpartHats");

	UUTCheatManager_ImpartHats_Params params;
	params.Hat = Hat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCheatManager.ImpartEyewear
// (Exec, Native, Public)
// Parameters:
// struct FString                 Eyewear                        (Parm, ZeroConstructor)

void UUTCheatManager::ImpartEyewear(const struct FString& Eyewear)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCheatManager.ImpartEyewear");

	UUTCheatManager_ImpartEyewear_Params params;
	params.Eyewear = Eyewear;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCheatManager.HL
// (Exec, Native, Public)

void UUTCheatManager::HL()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCheatManager.HL");

	UUTCheatManager_HL_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCheatManager.Gibs
// (Exec, Native, Public)

void UUTCheatManager::Gibs()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCheatManager.Gibs");

	UUTCheatManager_Gibs_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCheatManager.EstimateWaitTimes
// (Final, Exec, Native, Public)

void UUTCheatManager::EstimateWaitTimes()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCheatManager.EstimateWaitTimes");

	UUTCheatManager_EstimateWaitTimes_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCheatManager.DebugAchievement
// (Final, Exec, Native, Public)
// Parameters:
// struct FString                 AchievementName                (Parm, ZeroConstructor)

void UUTCheatManager::DebugAchievement(const struct FString& AchievementName)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCheatManager.DebugAchievement");

	UUTCheatManager_DebugAchievement_Params params;
	params.AchievementName = AchievementName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCheatManager.CheatShowRankedReconnectDialog
// (Final, Exec, Native, Public)

void UUTCheatManager::CheatShowRankedReconnectDialog()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCheatManager.CheatShowRankedReconnectDialog");

	UUTCheatManager_CheatShowRankedReconnectDialog_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCheatManager.AnnM
// (Exec, Native, Public)
// Parameters:
// float                          F                              (Parm, ZeroConstructor, IsPlainOldData)

void UUTCheatManager::AnnM(float F)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCheatManager.AnnM");

	UUTCheatManager_AnnM_Params params;
	params.F = F;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCheatManager.Ann
// (Exec, Native, Public)
// Parameters:
// int                            Switch                         (Parm, ZeroConstructor, IsPlainOldData)

void UUTCheatManager::Ann(int Switch)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCheatManager.Ann");

	UUTCheatManager_Ann_Params params;
	params.Switch = Switch;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTCheatManager.AllAmmo
// (Exec, Native, Public)

void UUTCheatManager::AllAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTCheatManager.AllAmmo");

	UUTCheatManager_AllAmmo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTDroppedArmor.OnArmorAmountReceived
// (Native, Public)

void AUTDroppedArmor::OnArmorAmountReceived()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTDroppedArmor.OnArmorAmountReceived");

	AUTDroppedArmor_OnArmorAmountReceived_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTDroppedLife.OnReceivedOwnerPlayerState
// (Native, Protected)

void AUTDroppedLife::OnReceivedOwnerPlayerState()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTDroppedLife.OnReceivedOwnerPlayerState");

	AUTDroppedLife_OnReceivedOwnerPlayerState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTDroppedLife.OnOverlapBegin
// (Native, Public, HasOutParms)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AUTDroppedLife::OnOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTDroppedLife.OnOverlapBegin");

	AUTDroppedLife_OnOverlapBegin_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTDroppedLife.Init
// (Final, Native, Public)
// Parameters:
// class AUTPlayerState*          inOwnerPlayerState             (Parm, ZeroConstructor, IsPlainOldData)
// class AUTPlayerState*          inKillerPlayerState            (Parm, ZeroConstructor, IsPlainOldData)
// float                          InValue                        (Parm, ZeroConstructor, IsPlainOldData)

void AUTDroppedLife::Init(class AUTPlayerState* inOwnerPlayerState, class AUTPlayerState* inKillerPlayerState, float InValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTDroppedLife.Init");

	AUTDroppedLife_Init_Params params;
	params.inOwnerPlayerState = inOwnerPlayerState;
	params.inKillerPlayerState = inKillerPlayerState;
	params.InValue = InValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTFlagReturnTrail.SetTeam
// (Event, Public, BlueprintEvent)
// Parameters:
// class AUTTeamInfo*             Team                           (Parm, ZeroConstructor, IsPlainOldData)

void AUTFlagReturnTrail::SetTeam(class AUTTeamInfo* Team)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTFlagReturnTrail.SetTeam");

	AUTFlagReturnTrail_SetTeam_Params params;
	params.Team = Team;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTFlagReturnTrail.SetPoints
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// TArray<struct FVector>         Points                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void AUTFlagReturnTrail::SetPoints(TArray<struct FVector> Points)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTFlagReturnTrail.SetPoints");

	AUTFlagReturnTrail_SetPoints_Params params;
	params.Points = Points;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTFlagReturnTrail.EndTrail
// (Event, Public, BlueprintEvent)

void AUTFlagReturnTrail::EndTrail()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTFlagReturnTrail.EndTrail");

	AUTFlagReturnTrail_EndTrail_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBlitzDeliveryPoint.OnDefenseEffectChanged
// (Final, Native, Public)

void AUTBlitzDeliveryPoint::OnDefenseEffectChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBlitzDeliveryPoint.OnDefenseEffectChanged");

	AUTBlitzDeliveryPoint_OnDefenseEffectChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTRallyPoint.OnReplicatedCountdown
// (Final, Native, Public)

void AUTRallyPoint::OnReplicatedCountdown()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTRallyPoint.OnReplicatedCountdown");

	AUTRallyPoint_OnReplicatedCountdown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTRallyPoint.OnRallyTimeRemaining
// (Final, Native, Public)

void AUTRallyPoint::OnRallyTimeRemaining()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTRallyPoint.OnRallyTimeRemaining");

	AUTRallyPoint_OnRallyTimeRemaining_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTRallyPoint.OnRallyStateChanged
// (Event, Public, BlueprintEvent)

void AUTRallyPoint::OnRallyStateChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTRallyPoint.OnRallyStateChanged");

	AUTRallyPoint_OnRallyStateChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTRallyPoint.OnRallyChargingChanged
// (Final, Native, Public)

void AUTRallyPoint::OnRallyChargingChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTRallyPoint.OnRallyChargingChanged");

	AUTRallyPoint_OnRallyChargingChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTRallyPoint.OnOverlapEnd
// (Final, Native, Public)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)

void AUTRallyPoint::OnOverlapEnd(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTRallyPoint.OnOverlapEnd");

	AUTRallyPoint_OnOverlapEnd_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTRallyPoint.OnOverlapBegin
// (Final, Native, Public, HasOutParms)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AUTRallyPoint::OnOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTRallyPoint.OnOverlapBegin");

	AUTRallyPoint_OnOverlapBegin_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTRallyPoint.OnAvailableEffectChanged
// (Final, Native, Public)

void AUTRallyPoint::OnAvailableEffectChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTRallyPoint.OnAvailableEffectChanged");

	AUTRallyPoint_OnAvailableEffectChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTRallyPoint.AmbientSoundUpdated
// (Final, Native, Public)

void AUTRallyPoint::AmbientSoundUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTRallyPoint.AmbientSoundUpdated");

	AUTRallyPoint_AmbientSoundUpdated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTRallyPoint.AmbientSoundPitchUpdated
// (Native, Public)

void AUTRallyPoint::AmbientSoundPitchUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTRallyPoint.AmbientSoundPitchUpdated");

	AUTRallyPoint_AmbientSoundPitchUpdated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTFlagRunGameState.IsTeamOnOffense
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            TeamNumber                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTFlagRunGameState::IsTeamOnOffense(int TeamNumber)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTFlagRunGameState.IsTeamOnOffense");

	AUTFlagRunGameState_IsTeamOnOffense_Params params;
	params.TeamNumber = TeamNumber;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTFlagRunGameState.IsTeamOnDefenseNextRound
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            TeamNumber                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTFlagRunGameState::IsTeamOnDefenseNextRound(int TeamNumber)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTFlagRunGameState.IsTeamOnDefenseNextRound");

	AUTFlagRunGameState_IsTeamOnDefenseNextRound_Params params;
	params.TeamNumber = TeamNumber;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTFlagRunGameState.IsTeamOnDefense
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            TeamNumber                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTFlagRunGameState::IsTeamOnDefense(int TeamNumber)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTFlagRunGameState.IsTeamOnDefense");

	AUTFlagRunGameState_IsTeamOnDefense_Params params;
	params.TeamNumber = TeamNumber;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTFlagRunGameState.IsSelectedBoostValid
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AUTPlayerState*          PlayerState                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTFlagRunGameState::IsSelectedBoostValid(class AUTPlayerState* PlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTFlagRunGameState.IsSelectedBoostValid");

	AUTFlagRunGameState_IsSelectedBoostValid_Params params;
	params.PlayerState = PlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTFlagRunGameState.GetSelectableBoostByIndex
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AUTPlayerState*          PlayerState                    (Parm, ZeroConstructor, IsPlainOldData)
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* AUTFlagRunGameState::GetSelectableBoostByIndex(class AUTPlayerState* PlayerState, int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTFlagRunGameState.GetSelectableBoostByIndex");

	AUTFlagRunGameState_GetSelectableBoostByIndex_Params params;
	params.PlayerState = PlayerState;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTFlagRunGameState.GetPowerupSelectWidgetPath
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            TeamNumber                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString AUTFlagRunGameState::GetPowerupSelectWidgetPath(int TeamNumber)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTFlagRunGameState.GetPowerupSelectWidgetPath");

	AUTFlagRunGameState_GetPowerupSelectWidgetPath_Params params;
	params.TeamNumber = TeamNumber;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTFlagRunGameState.GetOffenseFlag
// (Native, Public, BlueprintCallable)
// Parameters:
// class AUTBlitzFlag*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AUTBlitzFlag* AUTFlagRunGameState::GetOffenseFlag()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTFlagRunGameState.GetOffenseFlag");

	AUTFlagRunGameState_GetOffenseFlag_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTFlagRunGameState.GetFlagHolder
// (Native, Public, BlueprintCallable)
// Parameters:
// class AUTPlayerState*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AUTPlayerState* AUTFlagRunGameState::GetFlagHolder()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTFlagRunGameState.GetFlagHolder");

	AUTFlagRunGameState_GetFlagHolder_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTFlagRunGameState.AddScoringPlay
// (BlueprintAuthorityOnly, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FCTFScoringPlay         NewScoringPlay                 (ConstParm, Parm, OutParm, ReferenceParm)

void AUTFlagRunGameState::AddScoringPlay(const struct FCTFScoringPlay& NewScoringPlay)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTFlagRunGameState.AddScoringPlay");

	AUTFlagRunGameState_AddScoringPlay_Params params;
	params.NewScoringPlay = NewScoringPlay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTFlagRunPvEGameState.OnRep_EndingElapsedTime
// (Final, Native, Public)

void AUTFlagRunPvEGameState::OnRep_EndingElapsedTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTFlagRunPvEGameState.OnRep_EndingElapsedTime");

	AUTFlagRunPvEGameState_OnRep_EndingElapsedTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTShowdownGameState.OnRep_XRayVision
// (Native, Public)

void AUTShowdownGameState::OnRep_XRayVision()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTShowdownGameState.OnRep_XRayVision");

	AUTShowdownGameState_OnRep_XRayVision_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTShowdownGameState.OnRep_StartSpawnSelect
// (Native, Public)

void AUTShowdownGameState::OnRep_StartSpawnSelect()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTShowdownGameState.OnRep_StartSpawnSelect");

	AUTShowdownGameState_OnRep_StartSpawnSelect_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTTextStyle.GetShadowOffset
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EUTWidgetStyleSize> Size                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D               OutShadowOffset                (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void UUTTextStyle::GetShadowOffset(TEnumAsByte<EUTWidgetStyleSize> Size, struct FVector2D* OutShadowOffset)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTTextStyle.GetShadowOffset");

	UUTTextStyle_GetShadowOffset_Params params;
	params.Size = Size;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutShadowOffset != nullptr)
		*OutShadowOffset = params.OutShadowOffset;
}


// Function UnrealTournament.UTTextStyle.GetShadowColor
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EUTTextColor>      ColorType                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            OutColor                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void UUTTextStyle::GetShadowColor(TEnumAsByte<EUTTextColor> ColorType, struct FLinearColor* OutColor)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTTextStyle.GetShadowColor");

	UUTTextStyle_GetShadowColor_Params params;
	params.ColorType = ColorType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutColor != nullptr)
		*OutColor = params.OutColor;
}


// Function UnrealTournament.UTTextStyle.GetMargin
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EUTWidgetStyleSize> Size                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FMargin                 OutMargin                      (Parm, OutParm)

void UUTTextStyle::GetMargin(TEnumAsByte<EUTWidgetStyleSize> Size, struct FMargin* OutMargin)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTTextStyle.GetMargin");

	UUTTextStyle_GetMargin_Params params;
	params.Size = Size;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutMargin != nullptr)
		*OutMargin = params.OutMargin;
}


// Function UnrealTournament.UTTextStyle.GetLineHeightPercentage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EUTWidgetStyleSize> Size                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UUTTextStyle::GetLineHeightPercentage(TEnumAsByte<EUTWidgetStyleSize> Size)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTTextStyle.GetLineHeightPercentage");

	UUTTextStyle_GetLineHeightPercentage_Params params;
	params.Size = Size;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTTextStyle.GetFont
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EUTWidgetStyleSize> Size                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FSlateFontInfo          OutFont                        (Parm, OutParm)

void UUTTextStyle::GetFont(TEnumAsByte<EUTWidgetStyleSize> Size, struct FSlateFontInfo* OutFont)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTTextStyle.GetFont");

	UUTTextStyle_GetFont_Params params;
	params.Size = Size;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutFont != nullptr)
		*OutFont = params.OutFont;
}


// Function UnrealTournament.UTTextStyle.GetColor
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EUTTextColor>      ColorType                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            OutColor                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void UUTTextStyle::GetColor(TEnumAsByte<EUTTextColor> ColorType, struct FLinearColor* OutColor)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTTextStyle.GetColor");

	UUTTextStyle_GetColor_Params params;
	params.ColorType = ColorType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutColor != nullptr)
		*OutColor = params.OutColor;
}


// Function UnrealTournament.UTTextBlock.SetWrapTextWidth
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            InWrapTextAt                   (Parm, ZeroConstructor, IsPlainOldData)

void UUTTextBlock::SetWrapTextWidth(int InWrapTextAt)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTTextBlock.SetWrapTextWidth");

	UUTTextBlock_SetWrapTextWidth_Params params;
	params.InWrapTextAt = InWrapTextAt;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTTextBlock.SetUseDropShadow
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bShouldUseDropShadow           (Parm, ZeroConstructor, IsPlainOldData)

void UUTTextBlock::SetUseDropShadow(bool bShouldUseDropShadow)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTTextBlock.SetUseDropShadow");

	UUTTextBlock_SetUseDropShadow_Params params;
	params.bShouldUseDropShadow = bShouldUseDropShadow;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTTextBlock.SetStyle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  InStyle                        (Parm, ZeroConstructor, IsPlainOldData)

void UUTTextBlock::SetStyle(class UClass* InStyle)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTTextBlock.SetStyle");

	UUTTextBlock_SetStyle_Params params;
	params.InStyle = InStyle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTTextBlock.SetSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EUTWidgetStyleSize> Size                           (Parm, ZeroConstructor, IsPlainOldData)

void UUTTextBlock::SetSize(TEnumAsByte<EUTWidgetStyleSize> Size)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTTextBlock.SetSize");

	UUTTextBlock_SetSize_Params params;
	params.Size = Size;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTTextBlock.SetProperties
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  InStyle                        (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EUTWidgetStyleSize> Size                           (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EUTTextColor>      Color                          (Parm, ZeroConstructor, IsPlainOldData)
// int                            InWrapTextAt                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bShouldUseDropShadow           (Parm, ZeroConstructor, IsPlainOldData)

void UUTTextBlock::SetProperties(class UClass* InStyle, TEnumAsByte<EUTWidgetStyleSize> Size, TEnumAsByte<EUTTextColor> Color, int InWrapTextAt, bool bShouldUseDropShadow)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTTextBlock.SetProperties");

	UUTTextBlock_SetProperties_Params params;
	params.InStyle = InStyle;
	params.Size = Size;
	params.Color = Color;
	params.InWrapTextAt = InWrapTextAt;
	params.bShouldUseDropShadow = bShouldUseDropShadow;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTTextBlock.SetColorType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EUTTextColor>      Color                          (Parm, ZeroConstructor, IsPlainOldData)

void UUTTextBlock::SetColorType(TEnumAsByte<EUTTextColor> Color)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTTextBlock.SetColorType");

	UUTTextBlock_SetColorType_Params params;
	params.Color = Color;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTRichTextHelperLibrary.GetCurrencyIconTagSpecific
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EUTCurrencyType                Currency                       (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EUTWidgetStyleSize> Size                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UUTRichTextHelperLibrary::STATIC_GetCurrencyIconTagSpecific(EUTCurrencyType Currency, TEnumAsByte<EUTWidgetStyleSize> Size)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTRichTextHelperLibrary.GetCurrencyIconTagSpecific");

	UUTRichTextHelperLibrary_GetCurrencyIconTagSpecific_Params params;
	params.Currency = Currency;
	params.Size = Size;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTRichTextHelperLibrary.GetCurrencyIconTag
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EUTCurrencyType                Currency                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UUTRichTextHelperLibrary::STATIC_GetCurrencyIconTag(EUTCurrencyType Currency)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTRichTextHelperLibrary.GetCurrencyIconTag");

	UUTRichTextHelperLibrary_GetCurrencyIconTag_Params params;
	params.Currency = Currency;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTRichTextHelperLibrary.FormatAsKeywordSpecific
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FString                 Text                           (Parm, ZeroConstructor)
// TEnumAsByte<EUTWidgetStyleSize> Size                           (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EUTTextColor>      Color                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UUTRichTextHelperLibrary::STATIC_FormatAsKeywordSpecific(const struct FString& Text, TEnumAsByte<EUTWidgetStyleSize> Size, TEnumAsByte<EUTTextColor> Color)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTRichTextHelperLibrary.FormatAsKeywordSpecific");

	UUTRichTextHelperLibrary_FormatAsKeywordSpecific_Params params;
	params.Text = Text;
	params.Size = Size;
	params.Color = Color;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTRichTextHelperLibrary.FormatAsKeyword
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FString                 Text                           (Parm, ZeroConstructor)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UUTRichTextHelperLibrary::STATIC_FormatAsKeyword(const struct FString& Text)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTRichTextHelperLibrary.FormatAsKeyword");

	UUTRichTextHelperLibrary_FormatAsKeyword_Params params;
	params.Text = Text;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTRichTextHelperLibrary.FormatAsCurrency
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EUTCurrencyType                Currency                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   DisplayValue                   (Parm)
// TEnumAsByte<EUTWidgetStyleSize> Size                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UUTRichTextHelperLibrary::STATIC_FormatAsCurrency(EUTCurrencyType Currency, const struct FText& DisplayValue, TEnumAsByte<EUTWidgetStyleSize> Size)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTRichTextHelperLibrary.FormatAsCurrency");

	UUTRichTextHelperLibrary_FormatAsCurrency_Params params;
	params.Currency = Currency;
	params.DisplayValue = DisplayValue;
	params.Size = Size;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTRichTextHelperLibrary.ConvertToKeywordSpecific
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FText                   Text                           (Parm, OutParm, ReferenceParm)
// TEnumAsByte<EUTWidgetStyleSize> Size                           (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EUTTextColor>      Color                          (Parm, ZeroConstructor, IsPlainOldData)

void UUTRichTextHelperLibrary::STATIC_ConvertToKeywordSpecific(TEnumAsByte<EUTWidgetStyleSize> Size, TEnumAsByte<EUTTextColor> Color, struct FText* Text)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTRichTextHelperLibrary.ConvertToKeywordSpecific");

	UUTRichTextHelperLibrary_ConvertToKeywordSpecific_Params params;
	params.Size = Size;
	params.Color = Color;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Text != nullptr)
		*Text = params.Text;
}


// Function UnrealTournament.UTRichTextHelperLibrary.ConvertToKeyword
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FText                   Text                           (Parm, OutParm, ReferenceParm)

void UUTRichTextHelperLibrary::STATIC_ConvertToKeyword(struct FText* Text)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTRichTextHelperLibrary.ConvertToKeyword");

	UUTRichTextHelperLibrary_ConvertToKeyword_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Text != nullptr)
		*Text = params.Text;
}


// Function UnrealTournament.UTGhostComponent.GhostStopRecording
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UUTGhostComponent::GhostStopRecording()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGhostComponent.GhostStopRecording");

	UUTGhostComponent_GhostStopRecording_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGhostComponent.GhostStopPlaying
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UUTGhostComponent::GhostStopPlaying()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGhostComponent.GhostStopPlaying");

	UUTGhostComponent_GhostStopPlaying_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGhostComponent.GhostStartRecording
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UUTGhostComponent::GhostStartRecording()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGhostComponent.GhostStartRecording");

	UUTGhostComponent_GhostStartRecording_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGhostComponent.GhostStartPlaying
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UUTGhostComponent::GhostStartPlaying()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGhostComponent.GhostStartPlaying");

	UUTGhostComponent_GhostStartPlaying_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGhostComponent.GhostMoveToStart
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UUTGhostComponent::GhostMoveToStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGhostComponent.GhostMoveToStart");

	UUTGhostComponent_GhostMoveToStart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGhostComponent.CreateAndAddEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  EventClass                     (Parm, ZeroConstructor, IsPlainOldData)
// class UUTGhostEvent*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UUTGhostEvent* UUTGhostComponent::CreateAndAddEvent(class UClass* EventClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGhostComponent.CreateAndAddEvent");

	UUTGhostComponent_CreateAndAddEvent_Params params;
	params.EventClass = EventClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTGhostEvent.ApplyEvent
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AUTCharacter*            UTC                            (Parm, ZeroConstructor, IsPlainOldData)

void UUTGhostEvent::ApplyEvent(class AUTCharacter* UTC)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGhostEvent.ApplyEvent");

	UUTGhostEvent_ApplyEvent_Params params;
	params.UTC = UTC;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGhostEvent_Move.ApplyEvent
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AUTCharacter*            UTC                            (Parm, ZeroConstructor, IsPlainOldData)

void UUTGhostEvent_Move::ApplyEvent(class AUTCharacter* UTC)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGhostEvent_Move.ApplyEvent");

	UUTGhostEvent_Move_ApplyEvent_Params params;
	params.UTC = UTC;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGhostEvent_MovementEvent.ApplyEvent
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AUTCharacter*            UTC                            (Parm, ZeroConstructor, IsPlainOldData)

void UUTGhostEvent_MovementEvent::ApplyEvent(class AUTCharacter* UTC)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGhostEvent_MovementEvent.ApplyEvent");

	UUTGhostEvent_MovementEvent_ApplyEvent_Params params;
	params.UTC = UTC;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGhostEvent_Input.ApplyEvent
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AUTCharacter*            UTC                            (Parm, ZeroConstructor, IsPlainOldData)

void UUTGhostEvent_Input::ApplyEvent(class AUTCharacter* UTC)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGhostEvent_Input.ApplyEvent");

	UUTGhostEvent_Input_ApplyEvent_Params params;
	params.UTC = UTC;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGhostEvent_Weapon.ApplyEvent
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AUTCharacter*            UTC                            (Parm, ZeroConstructor, IsPlainOldData)

void UUTGhostEvent_Weapon::ApplyEvent(class AUTCharacter* UTC)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGhostEvent_Weapon.ApplyEvent");

	UUTGhostEvent_Weapon_ApplyEvent_Params params;
	params.UTC = UTC;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGhostEvent_JumpBoots.ApplyEvent
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AUTCharacter*            UTC                            (Parm, ZeroConstructor, IsPlainOldData)

void UUTGhostEvent_JumpBoots::ApplyEvent(class AUTCharacter* UTC)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGhostEvent_JumpBoots.ApplyEvent");

	UUTGhostEvent_JumpBoots_ApplyEvent_Params params;
	params.UTC = UTC;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGhostFlag.OnSetCarriedObject
// (Native, Public)

void AUTGhostFlag::OnSetCarriedObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGhostFlag.OnSetCarriedObject");

	AUTGhostFlag_OnSetCarriedObject_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTScoreboard.HandleContextCommand
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// unsigned char                  ContextId                      (Parm, ZeroConstructor, IsPlainOldData)
// class AUTPlayerState*          InSelectedPlayer               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUTScoreboard::HandleContextCommand(unsigned char ContextId, class AUTPlayerState* InSelectedPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTScoreboard.HandleContextCommand");

	UUTScoreboard_HandleContextCommand_Params params;
	params.ContextId = ContextId;
	params.InSelectedPlayer = InSelectedPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTScoreboard.GetContextMenuItems
// (Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// TArray<struct FScoreboardContextMenuItem> MenuItems                      (Parm, OutParm, ZeroConstructor)

void UUTScoreboard::GetContextMenuItems(TArray<struct FScoreboardContextMenuItem>* MenuItems)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTScoreboard.GetContextMenuItems");

	UUTScoreboard_GetContextMenuItems_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (MenuItems != nullptr)
		*MenuItems = params.MenuItems;
}


// Function UnrealTournament.UTHUD.UpdateMinimapTexture
// (Native, Public)
// Parameters:
// class UCanvas*                 C                              (Parm, ZeroConstructor, IsPlainOldData)
// int                            Width                          (Parm, ZeroConstructor, IsPlainOldData)
// int                            Height                         (Parm, ZeroConstructor, IsPlainOldData)

void AUTHUD::UpdateMinimapTexture(class UCanvas* C, int Width, int Height)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUD.UpdateMinimapTexture");

	AUTHUD_UpdateMinimapTexture_Params params;
	params.C = C;
	params.Width = Width;
	params.Height = Height;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTHUD.ToggleScoreboard
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           bShow                          (Parm, ZeroConstructor, IsPlainOldData)

void AUTHUD::ToggleScoreboard(bool bShow)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUD.ToggleScoreboard");

	AUTHUD_ToggleScoreboard_Params params;
	params.bShow = bShow;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTHUD.ShowUTMenu
// (Native, Protected)

void AUTHUD::ShowUTMenu()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUD.ShowUTMenu");

	AUTHUD_ShowUTMenu_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTHUD.ResolveFlag
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class AUTPlayerState*          PS                             (Parm, ZeroConstructor, IsPlainOldData)
// struct FTextureUVs             UV                             (Parm, OutParm)
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* AUTHUD::ResolveFlag(class AUTPlayerState* PS, struct FTextureUVs* UV)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUD.ResolveFlag");

	AUTHUD_ResolveFlag_Params params;
	params.PS = PS;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (UV != nullptr)
		*UV = params.UV;

	return params.ReturnValue;
}


// Function UnrealTournament.UTHUD.IsUMGWidgetActive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUTUMGHudWidget*         TestWidget                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTHUD::IsUMGWidgetActive(class UUTUMGHudWidget* TestWidget)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUD.IsUMGWidgetActive");

	AUTHUD_IsUMGWidgetActive_Params params;
	params.TestWidget = TestWidget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTHUD.GetUseWeaponColors
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTHUD::GetUseWeaponColors()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUD.GetUseWeaponColors");

	AUTHUD_GetUseWeaponColors_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTHUD.GetQuickStatsType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName AUTHUD::GetQuickStatsType()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUD.GetQuickStatsType");

	AUTHUD_GetQuickStatsType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTHUD.GetQuickStatsHidden
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTHUD::GetQuickStatsHidden()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUD.GetQuickStatsHidden");

	AUTHUD_GetQuickStatsHidden_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTHUD.GetQuickStatsForegroundAlpha
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AUTHUD::GetQuickStatsForegroundAlpha()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUD.GetQuickStatsForegroundAlpha");

	AUTHUD_GetQuickStatsForegroundAlpha_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTHUD.GetQuickStatsDistance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AUTHUD::GetQuickStatsDistance()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUD.GetQuickStatsDistance");

	AUTHUD_GetQuickStatsDistance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTHUD.GetQuickStatScaleOverride
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AUTHUD::GetQuickStatScaleOverride()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUD.GetQuickStatScaleOverride");

	AUTHUD_GetQuickStatScaleOverride_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTHUD.GetQuickStatsBackgroundAlpha
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AUTHUD::GetQuickStatsBackgroundAlpha()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUD.GetQuickStatsBackgroundAlpha");

	AUTHUD_GetQuickStatsBackgroundAlpha_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTHUD.GetQuickInfoHidden
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTHUD::GetQuickInfoHidden()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUD.GetQuickInfoHidden");

	AUTHUD_GetQuickInfoHidden_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTHUD.GetPlayKillSoundMsg
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTHUD::GetPlayKillSoundMsg()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUD.GetPlayKillSoundMsg");

	AUTHUD_GetPlayKillSoundMsg_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTHUD.GetInputMode
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// TEnumAsByte<EInputMode>        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EInputMode> AUTHUD::GetInputMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUD.GetInputMode");

	AUTHUD_GetInputMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTHUD.GetHUDWidgetWeaponBarScaleOverride
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AUTHUD::GetHUDWidgetWeaponBarScaleOverride()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUD.GetHUDWidgetWeaponBarScaleOverride");

	AUTHUD_GetHUDWidgetWeaponBarScaleOverride_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTHUD.GetHUDWidgetWeaponbarInactiveOpacity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AUTHUD::GetHUDWidgetWeaponbarInactiveOpacity()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUD.GetHUDWidgetWeaponbarInactiveOpacity");

	AUTHUD_GetHUDWidgetWeaponbarInactiveOpacity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTHUD.GetHUDWidgetWeaponBarInactiveIconOpacity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AUTHUD::GetHUDWidgetWeaponBarInactiveIconOpacity()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUD.GetHUDWidgetWeaponBarInactiveIconOpacity");

	AUTHUD_GetHUDWidgetWeaponBarInactiveIconOpacity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTHUD.GetHUDWidgetWeaponBarEmptyOpacity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AUTHUD::GetHUDWidgetWeaponBarEmptyOpacity()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUD.GetHUDWidgetWeaponBarEmptyOpacity");

	AUTHUD_GetHUDWidgetWeaponBarEmptyOpacity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTHUD.GetHUDWidgetSlateOpacity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AUTHUD::GetHUDWidgetSlateOpacity()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUD.GetHUDWidgetSlateOpacity");

	AUTHUD_GetHUDWidgetSlateOpacity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTHUD.GetHUDWidgetScaleOverride
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AUTHUD::GetHUDWidgetScaleOverride()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUD.GetHUDWidgetScaleOverride");

	AUTHUD_GetHUDWidgetScaleOverride_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTHUD.GetHUDWidgetOpacity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AUTHUD::GetHUDWidgetOpacity()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUD.GetHUDWidgetOpacity");

	AUTHUD_GetHUDWidgetOpacity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTHUD.GetHUDWidgetBorderOpacity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AUTHUD::GetHUDWidgetBorderOpacity()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUD.GetHUDWidgetBorderOpacity");

	AUTHUD_GetHUDWidgetBorderOpacity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTHUD.GetHUDMessageScaleOverride
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AUTHUD::GetHUDMessageScaleOverride()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUD.GetHUDMessageScaleOverride");

	AUTHUD_GetHUDMessageScaleOverride_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTHUD.GetHealthArcShown
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTHUD::GetHealthArcShown()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUD.GetHealthArcShown");

	AUTHUD_GetHealthArcShown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTHUD.GetHealthArcRadius
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AUTHUD::GetHealthArcRadius()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUD.GetHealthArcRadius");

	AUTHUD_GetHealthArcRadius_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTHUD.GetDrawHUDKillIconMsg
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTHUD::GetDrawHUDKillIconMsg()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUD.GetDrawHUDKillIconMsg");

	AUTHUD_GetDrawHUDKillIconMsg_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTHUD.GetDrawChatKillMsg
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTHUD::GetDrawChatKillMsg()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUD.GetDrawChatKillMsg");

	AUTHUD_GetDrawChatKillMsg_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTHUD.GetDrawCenteredKillMsg
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTHUD::GetDrawCenteredKillMsg()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUD.GetDrawCenteredKillMsg");

	AUTHUD_GetDrawCenteredKillMsg_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTHUD.GetCrosshairForWeapon
// (Final, Native, Public, HasOutParms)
// Parameters:
// struct FName                   WeaponCustomizationTag         (Parm, ZeroConstructor, IsPlainOldData)
// struct FWeaponCustomizationInfo outWeaponCustomizationInfo     (Parm, OutParm)
// class UUTCrosshair*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UUTCrosshair* AUTHUD::GetCrosshairForWeapon(const struct FName& WeaponCustomizationTag, struct FWeaponCustomizationInfo* outWeaponCustomizationInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUD.GetCrosshairForWeapon");

	AUTHUD_GetCrosshairForWeapon_Params params;
	params.WeaponCustomizationTag = WeaponCustomizationTag;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (outWeaponCustomizationInfo != nullptr)
		*outWeaponCustomizationInfo = params.outWeaponCustomizationInfo;

	return params.ReturnValue;
}


// Function UnrealTournament.UTHUD.DrawMinimapIcon
// (Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UTexture2D*              Texture                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D               Pos                            (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D               DrawSize                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D               UV                             (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D               UVL                            (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            DrawColor                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bDropShadow                    (Parm, ZeroConstructor, IsPlainOldData)

void AUTHUD::DrawMinimapIcon(class UTexture2D* Texture, const struct FVector2D& Pos, const struct FVector2D& DrawSize, const struct FVector2D& UV, const struct FVector2D& UVL, const struct FLinearColor& DrawColor, bool bDropShadow)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUD.DrawMinimapIcon");

	AUTHUD_DrawMinimapIcon_Params params;
	params.Texture = Texture;
	params.Pos = Pos;
	params.DrawSize = DrawSize;
	params.UV = UV;
	params.UVL = UVL;
	params.DrawColor = DrawColor;
	params.bDropShadow = bDropShadow;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTHUD.DrawMinimap
// (Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FColor                  DrawColor                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float                          MapSize                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D               DrawPos                        (Parm, ZeroConstructor, IsPlainOldData)

void AUTHUD::DrawMinimap(const struct FColor& DrawColor, float MapSize, const struct FVector2D& DrawPos)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUD.DrawMinimap");

	AUTHUD_DrawMinimap_Params params;
	params.DrawColor = DrawColor;
	params.MapSize = MapSize;
	params.DrawPos = DrawPos;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTHUD.DeactivateUMGHudWidget
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 UMGHudWidgetClassName          (Parm, ZeroConstructor)

void AUTHUD::DeactivateUMGHudWidget(const struct FString& UMGHudWidgetClassName)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUD.DeactivateUMGHudWidget");

	AUTHUD_DeactivateUMGHudWidget_Params params;
	params.UMGHudWidgetClassName = UMGHudWidgetClassName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTHUD.DeactivateActualUMGHudWidget
// (Native, Public, BlueprintCallable)
// Parameters:
// class UUTUMGHudWidget*         WidgetToDeactivate             (Parm, ZeroConstructor, IsPlainOldData)

void AUTHUD::DeactivateActualUMGHudWidget(class UUTUMGHudWidget* WidgetToDeactivate)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUD.DeactivateActualUMGHudWidget");

	AUTHUD_DeactivateActualUMGHudWidget_Params params;
	params.WidgetToDeactivate = WidgetToDeactivate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTHUD.ClientRestart
// (Native, Public)

void AUTHUD::ClientRestart()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUD.ClientRestart");

	AUTHUD_ClientRestart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTHUD.ClearAllUMGWidgets
// (Native, Public, BlueprintCallable)

void AUTHUD::ClearAllUMGWidgets()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUD.ClearAllUMGWidgets");

	AUTHUD_ClearAllUMGWidgets_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTHUD.BeforeFirstFrame
// (Native, Event, Protected, BlueprintEvent)

void AUTHUD::BeforeFirstFrame()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUD.BeforeFirstFrame");

	AUTHUD_BeforeFirstFrame_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTHUD.AddHudWidget
// (BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  NewWidgetClass                 (Parm, ZeroConstructor, IsPlainOldData)
// class UUTHUDWidget*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UUTHUDWidget* AUTHUD::AddHudWidget(class UClass* NewWidgetClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUD.AddHudWidget");

	AUTHUD_AddHudWidget_Params params;
	params.NewWidgetClass = NewWidgetClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTHUD.ActivateUMGHudWidget
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 UMGHudWidgetClassName          (Parm, ZeroConstructor)
// bool                           bUnique                        (Parm, ZeroConstructor, IsPlainOldData)
// class UUTUMGHudWidget*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UUTUMGHudWidget* AUTHUD::ActivateUMGHudWidget(const struct FString& UMGHudWidgetClassName, bool bUnique)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUD.ActivateUMGHudWidget");

	AUTHUD_ActivateUMGHudWidget_Params params;
	params.UMGHudWidgetClassName = UMGHudWidgetClassName;
	params.bUnique = bUnique;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTHUD.ActivateActualUMGHudWidget
// (Native, Public, BlueprintCallable)
// Parameters:
// class UUTUMGHudWidget*         WidgetToActivate               (Parm, ZeroConstructor, IsPlainOldData)

void AUTHUD::ActivateActualUMGHudWidget(class UUTUMGHudWidget* WidgetToActivate)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUD.ActivateActualUMGHudWidget");

	AUTHUD_ActivateActualUMGHudWidget_Params params;
	params.WidgetToActivate = WidgetToActivate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTHUDWidget_GameClock.GetPlayerScoreText
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UUTHUDWidget_GameClock::GetPlayerScoreText()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUDWidget_GameClock.GetPlayerScoreText");

	UUTHUDWidget_GameClock_GetPlayerScoreText_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTHUDWidget_GameClock.GetPlayerRankThText
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UUTHUDWidget_GameClock::GetPlayerRankThText()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUDWidget_GameClock.GetPlayerRankThText");

	UUTHUDWidget_GameClock_GetPlayerRankThText_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTHUDWidget_GameClock.GetPlayerRankText
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UUTHUDWidget_GameClock::GetPlayerRankText()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUDWidget_GameClock.GetPlayerRankText");

	UUTHUDWidget_GameClock_GetPlayerRankText_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTHUDWidget_GameClock.GetNumPlayersText
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UUTHUDWidget_GameClock::GetNumPlayersText()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUDWidget_GameClock.GetNumPlayersText");

	UUTHUDWidget_GameClock_GetNumPlayersText_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTHUDWidget_GameClock.GetClockText
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UUTHUDWidget_GameClock::GetClockText()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUDWidget_GameClock.GetClockText");

	UUTHUDWidget_GameClock_GetClockText_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTHUDWidget_TeamGameClock.GetRedScoreText
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UUTHUDWidget_TeamGameClock::GetRedScoreText()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUDWidget_TeamGameClock.GetRedScoreText");

	UUTHUDWidget_TeamGameClock_GetRedScoreText_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTHUDWidget_TeamGameClock.GetClockText
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UUTHUDWidget_TeamGameClock::GetClockText()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUDWidget_TeamGameClock.GetClockText");

	UUTHUDWidget_TeamGameClock_GetClockText_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTHUDWidget_TeamGameClock.GetBlueScoreText
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UUTHUDWidget_TeamGameClock::GetBlueScoreText()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUDWidget_TeamGameClock.GetBlueScoreText");

	UUTHUDWidget_TeamGameClock_GetBlueScoreText_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTHUDWidget_WeaponInfo.GetAmmoAmount
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UUTHUDWidget_WeaponInfo::GetAmmoAmount()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUDWidget_WeaponInfo.GetAmmoAmount");

	UUTHUDWidget_WeaponInfo_GetAmmoAmount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTHUDWidgetMessage.AgeMessages
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UUTHUDWidgetMessage::AgeMessages(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTHUDWidgetMessage.AgeMessages");

	UUTHUDWidgetMessage_AgeMessages_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLineUpHelper.SpawnPlayerWeapon
// (Final, Native, Protected)
// Parameters:
// class AUTCharacter*            UTChar                         (Parm, ZeroConstructor, IsPlainOldData)

void AUTLineUpHelper::SpawnPlayerWeapon(class AUTCharacter* UTChar)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLineUpHelper.SpawnPlayerWeapon");

	AUTLineUpHelper_SpawnPlayerWeapon_Params params;
	params.UTChar = UTChar;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLineUpHelper.SpawnLineUp
// (Final, Native, Protected)

void AUTLineUpHelper::SpawnLineUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLineUpHelper.SpawnLineUp");

	AUTLineUpHelper_SpawnLineUp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLineUpHelper.SpawnCharactersToSlots
// (Final, Native, Protected)

void AUTLineUpHelper::SpawnCharactersToSlots()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLineUpHelper.SpawnCharactersToSlots");

	AUTLineUpHelper_SpawnCharactersToSlots_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLineUpHelper.SpawnCharacterFromLineUpSlot
// (Final, Native, Protected, HasOutParms)
// Parameters:
// struct FLineUpSlot             Slot                           (Parm, OutParm)
// class AUTCharacter*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AUTCharacter* AUTLineUpHelper::SpawnCharacterFromLineUpSlot(struct FLineUpSlot* Slot)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLineUpHelper.SpawnCharacterFromLineUpSlot");

	AUTLineUpHelper_SpawnCharacterFromLineUpSlot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Slot != nullptr)
		*Slot = params.Slot;

	return params.ReturnValue;
}


// Function UnrealTournament.UTLineUpHelper.SetupCharactersForLineUp
// (Final, Native, Protected)

void AUTLineUpHelper::SetupCharactersForLineUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLineUpHelper.SetupCharactersForLineUp");

	AUTLineUpHelper_SetupCharactersForLineUp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLineUpHelper.SetLineUpWeapons
// (Final, Native, Protected)

void AUTLineUpHelper::SetLineUpWeapons()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLineUpHelper.SetLineUpWeapons");

	AUTLineUpHelper_SetLineUpWeapons_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLineUpHelper.ServerOnPlayerChange
// (Final, Native, Public)
// Parameters:
// class AUTPlayerState*          PlayerChanged                  (Parm, ZeroConstructor, IsPlainOldData)

void AUTLineUpHelper::ServerOnPlayerChange(class AUTPlayerState* PlayerChanged)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLineUpHelper.ServerOnPlayerChange");

	AUTLineUpHelper_ServerOnPlayerChange_Params params;
	params.PlayerChanged = PlayerChanged;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLineUpHelper.PlayIntroClientAnimationOnCharacter
// (Final, Native, Protected)
// Parameters:
// class AUTCharacter*            UTChar                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bShouldPlayFullIntro           (Parm, ZeroConstructor, IsPlainOldData)

void AUTLineUpHelper::PlayIntroClientAnimationOnCharacter(class AUTCharacter* UTChar, bool bShouldPlayFullIntro)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLineUpHelper.PlayIntroClientAnimationOnCharacter");

	AUTLineUpHelper_PlayIntroClientAnimationOnCharacter_Params params;
	params.UTChar = UTChar;
	params.bShouldPlayFullIntro = bShouldPlayFullIntro;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLineUpHelper.PerformLineUp
// (Final, Native, Protected)

void AUTLineUpHelper::PerformLineUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLineUpHelper.PerformLineUp");

	AUTLineUpHelper_PerformLineUp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLineUpHelper.OnRep_CheckForClientIntro
// (Final, Native, Protected)

void AUTLineUpHelper::OnRep_CheckForClientIntro()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLineUpHelper.OnRep_CheckForClientIntro");

	AUTLineUpHelper_OnRep_CheckForClientIntro_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLineUpHelper.NotifyClientsOfLineUp
// (Final, Native, Protected)

void AUTLineUpHelper::NotifyClientsOfLineUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLineUpHelper.NotifyClientsOfLineUp");

	AUTLineUpHelper_NotifyClientsOfLineUp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLineUpHelper.MoveCharacterToLineUpSlot
// (Final, Native, Protected, HasOutParms)
// Parameters:
// class AUTCharacter*            UTChar                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FLineUpSlot             Slot                           (Parm, OutParm)

void AUTLineUpHelper::MoveCharacterToLineUpSlot(class AUTCharacter* UTChar, struct FLineUpSlot* Slot)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLineUpHelper.MoveCharacterToLineUpSlot");

	AUTLineUpHelper_MoveCharacterToLineUpSlot_Params params;
	params.UTChar = UTChar;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Slot != nullptr)
		*Slot = params.Slot;
}


// Function UnrealTournament.UTLineUpHelper.IsLineupDataReplicated
// (Final, Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTLineUpHelper::IsLineupDataReplicated()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLineUpHelper.IsLineupDataReplicated");

	AUTLineUpHelper_IsLineupDataReplicated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTLineUpHelper.IsActive
// (Final, Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTLineUpHelper::IsActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLineUpHelper.IsActive");

	AUTLineUpHelper_IsActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTLineUpHelper.IntroSwapMeshComponentLocations
// (Final, Native, Protected)
// Parameters:
// class AUTCharacter*            UTChar1                        (Parm, ZeroConstructor, IsPlainOldData)
// class AUTCharacter*            UTChar2                        (Parm, ZeroConstructor, IsPlainOldData)

void AUTLineUpHelper::IntroSwapMeshComponentLocations(class AUTCharacter* UTChar1, class AUTCharacter* UTChar2)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLineUpHelper.IntroSwapMeshComponentLocations");

	AUTLineUpHelper_IntroSwapMeshComponentLocations_Params params;
	params.UTChar1 = UTChar1;
	params.UTChar2 = UTChar2;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLineUpHelper.IntroCheckForPawnReplicationToComplete
// (Final, Native, Protected)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTLineUpHelper::IntroCheckForPawnReplicationToComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLineUpHelper.IntroCheckForPawnReplicationToComplete");

	AUTLineUpHelper_IntroCheckForPawnReplicationToComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTLineUpHelper.InitializeLineUp
// (Final, Native, Public)
// Parameters:
// ELineUpTypes                   LineUpType                     (Parm, ZeroConstructor, IsPlainOldData)

void AUTLineUpHelper::InitializeLineUp(ELineUpTypes LineUpType)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLineUpHelper.InitializeLineUp");

	AUTLineUpHelper_InitializeLineUp_Params params;
	params.LineUpType = LineUpType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLineUpHelper.HandleIntroClientAnimations
// (Final, Native, Protected)

void AUTLineUpHelper::HandleIntroClientAnimations()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLineUpHelper.HandleIntroClientAnimations");

	AUTLineUpHelper_HandleIntroClientAnimations_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLineUpHelper.FlagFixUp
// (Final, Native, Protected)

void AUTLineUpHelper::FlagFixUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLineUpHelper.FlagFixUp");

	AUTLineUpHelper_FlagFixUp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLineUpHelper.DestroySpawnedClones
// (Final, Native, Protected)

void AUTLineUpHelper::DestroySpawnedClones()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLineUpHelper.DestroySpawnedClones");

	AUTLineUpHelper_DestroySpawnedClones_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLineUpHelper.ClientOnPlayerChange
// (Final, Native, Public)
// Parameters:
// class AUTPlayerState*          PlayerChanged                  (Parm, ZeroConstructor, IsPlainOldData)

void AUTLineUpHelper::ClientOnPlayerChange(class AUTPlayerState* PlayerChanged)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLineUpHelper.ClientOnPlayerChange");

	AUTLineUpHelper_ClientOnPlayerChange_Params params;
	params.PlayerChanged = PlayerChanged;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLineUpHelper.CleanUp
// (Final, Native, Public)

void AUTLineUpHelper::CleanUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLineUpHelper.CleanUp");

	AUTLineUpHelper_CleanUp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLineUpHelper.CanInitiateGroupTaunt
// (Final, Native, Public)
// Parameters:
// class AUTPlayerState*          PlayerToCheck                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTLineUpHelper::CanInitiateGroupTaunt(class AUTPlayerState* PlayerToCheck)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLineUpHelper.CanInitiateGroupTaunt");

	AUTLineUpHelper_CanInitiateGroupTaunt_Params params;
	params.PlayerToCheck = PlayerToCheck;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTLineUpHelper.CalculateAllLineUpData
// (Final, Native, Protected)

void AUTLineUpHelper::CalculateAllLineUpData()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLineUpHelper.CalculateAllLineUpData");

	AUTLineUpHelper_CalculateAllLineUpData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLineUpHelper.BuildMapWeaponList
// (Final, Native, Protected)

void AUTLineUpHelper::BuildMapWeaponList()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLineUpHelper.BuildMapWeaponList");

	AUTLineUpHelper_BuildMapWeaponList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLineUpHelper.ApplyCharacterAnimsForLineUp
// (Final, Native, Static, Public)
// Parameters:
// class AUTCharacter*            UTChar                         (Parm, ZeroConstructor, IsPlainOldData)

void AUTLineUpHelper::STATIC_ApplyCharacterAnimsForLineUp(class AUTCharacter* UTChar)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLineUpHelper.ApplyCharacterAnimsForLineUp");

	AUTLineUpHelper_ApplyCharacterAnimsForLineUp_Params params;
	params.UTChar = UTChar;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTImpactEffect.SpawnEffect
// (Native, Event, Public, HasOutParms, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UWorld*                  World                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FTransform              InTransform                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// class UPrimitiveComponent*     HitComp                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  SpawnedBy                      (Parm, ZeroConstructor, IsPlainOldData)
// class AController*             InstigatedBy                   (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ESoundReplicationType> SoundReplication               (Parm, ZeroConstructor, IsPlainOldData)
// struct FImpactEffectNamedParameters EffectParams                   (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTImpactEffect::SpawnEffect(class UWorld* World, const struct FTransform& InTransform, class UPrimitiveComponent* HitComp, class AActor* SpawnedBy, class AController* InstigatedBy, TEnumAsByte<ESoundReplicationType> SoundReplication, const struct FImpactEffectNamedParameters& EffectParams)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTImpactEffect.SpawnEffect");

	AUTImpactEffect_SpawnEffect_Params params;
	params.World = World;
	params.InTransform = InTransform;
	params.HitComp = HitComp;
	params.SpawnedBy = SpawnedBy;
	params.InstigatedBy = InstigatedBy;
	params.SoundReplication = SoundReplication;
	params.EffectParams = EffectParams;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTImpactEffect.ShouldCreateComponent
// (BlueprintCosmetic, Native, Event, Public, HasOutParms, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class USceneComponent*         TestComp                       (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FName                   CompTemplateName               (Parm, ZeroConstructor, IsPlainOldData)
// struct FTransform              BaseTransform                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// class UPrimitiveComponent*     HitComp                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  SpawnedBy                      (Parm, ZeroConstructor, IsPlainOldData)
// class AController*             InstigatedBy                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTImpactEffect::ShouldCreateComponent(class USceneComponent* TestComp, const struct FName& CompTemplateName, const struct FTransform& BaseTransform, class UPrimitiveComponent* HitComp, class AActor* SpawnedBy, class AController* InstigatedBy)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTImpactEffect.ShouldCreateComponent");

	AUTImpactEffect_ShouldCreateComponent_Params params;
	params.TestComp = TestComp;
	params.CompTemplateName = CompTemplateName;
	params.BaseTransform = BaseTransform;
	params.HitComp = HitComp;
	params.SpawnedBy = SpawnedBy;
	params.InstigatedBy = InstigatedBy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTImpactEffect.ComponentCreated
// (BlueprintCosmetic, Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class USceneComponent*         NewComp                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UPrimitiveComponent*     HitComp                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  SpawnedBy                      (Parm, ZeroConstructor, IsPlainOldData)
// class AController*             InstigatedBy                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FImpactEffectNamedParameters EffectParams                   (Parm)

void AUTImpactEffect::ComponentCreated(class USceneComponent* NewComp, class UPrimitiveComponent* HitComp, class AActor* SpawnedBy, class AController* InstigatedBy, const struct FImpactEffectNamedParameters& EffectParams)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTImpactEffect.ComponentCreated");

	AUTImpactEffect_ComponentCreated_Params params;
	params.NewComp = NewComp;
	params.HitComp = HitComp;
	params.SpawnedBy = SpawnedBy;
	params.InstigatedBy = InstigatedBy;
	params.EffectParams = EffectParams;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTImpactEffect.CallSpawnEffect
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  Effect                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FTransform              InTransform                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// class UPrimitiveComponent*     HitComp                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  SpawnedBy                      (Parm, ZeroConstructor, IsPlainOldData)
// class AController*             InstigatedBy                   (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ESoundReplicationType> SoundReplication               (Parm, ZeroConstructor, IsPlainOldData)
// struct FImpactEffectNamedParameters EffectParams                   (ConstParm, Parm, OutParm, ReferenceParm)

void AUTImpactEffect::STATIC_CallSpawnEffect(class UObject* WorldContextObject, class UClass* Effect, const struct FTransform& InTransform, class UPrimitiveComponent* HitComp, class AActor* SpawnedBy, class AController* InstigatedBy, TEnumAsByte<ESoundReplicationType> SoundReplication, const struct FImpactEffectNamedParameters& EffectParams)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTImpactEffect.CallSpawnEffect");

	AUTImpactEffect_CallSpawnEffect_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Effect = Effect;
	params.InTransform = InTransform;
	params.HitComp = HitComp;
	params.SpawnedBy = SpawnedBy;
	params.InstigatedBy = InstigatedBy;
	params.SoundReplication = SoundReplication;
	params.EffectParams = EffectParams;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTInputVisualizer.ShowSpecificKey
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FKey                    Key                            (Parm)

void UUTInputVisualizer::ShowSpecificKey(const struct FKey& Key)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTInputVisualizer.ShowSpecificKey");

	UUTInputVisualizer_ShowSpecificKey_Params params;
	params.Key = Key;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTInputVisualizer.ShowInputAxis
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   InAxisName                     (Parm, ZeroConstructor, IsPlainOldData)

void UUTInputVisualizer::ShowInputAxis(const struct FName& InAxisName)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTInputVisualizer.ShowInputAxis");

	UUTInputVisualizer_ShowInputAxis_Params params;
	params.InAxisName = InAxisName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTInputVisualizer.ShowInputAction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   InActionName                   (Parm, ZeroConstructor, IsPlainOldData)

void UUTInputVisualizer::ShowInputAction(const struct FName& InActionName)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTInputVisualizer.ShowInputAction");

	UUTInputVisualizer_ShowInputAction_Params params;
	params.InActionName = InActionName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTInputVisualizer.SetSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EUTWidgetStyleSize> InSize                         (Parm, ZeroConstructor, IsPlainOldData)

void UUTInputVisualizer::SetSize(TEnumAsByte<EUTWidgetStyleSize> InSize)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTInputVisualizer.SetSize");

	UUTInputVisualizer_SetSize_Params params;
	params.InSize = InSize;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTInputVisualizer.HandleControlsChanged
// (Final, Native, Protected)

void UUTInputVisualizer::HandleControlsChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTInputVisualizer.HandleControlsChanged");

	UUTInputVisualizer_HandleControlsChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTIntermissionBeginInterface.IntermissionBegin
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UUTIntermissionBeginInterface::IntermissionBegin()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTIntermissionBeginInterface.IntermissionBegin");

	UUTIntermissionBeginInterface_IntermissionBegin_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeaponAttachment.StopFiringEffects
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                           bIgnoreCurrentMode             (Parm, ZeroConstructor, IsPlainOldData)

void AUTWeaponAttachment::StopFiringEffects(bool bIgnoreCurrentMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeaponAttachment.StopFiringEffects");

	AUTWeaponAttachment_StopFiringEffects_Params params;
	params.bIgnoreCurrentMode = bIgnoreCurrentMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeaponAttachment.PlayFiringEffects
// (Native, Public, BlueprintCallable)

void AUTWeaponAttachment::PlayFiringEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeaponAttachment.PlayFiringEffects");

	AUTWeaponAttachment_PlayFiringEffects_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeaponAttachment.PlayBulletWhip
// (Native, Public, BlueprintCallable)

void AUTWeaponAttachment::PlayBulletWhip()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeaponAttachment.PlayBulletWhip");

	AUTWeaponAttachment_PlayBulletWhip_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeaponAttachment.OverrideFiringEffects
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTWeaponAttachment::OverrideFiringEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeaponAttachment.OverrideFiringEffects");

	AUTWeaponAttachment_OverrideFiringEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTWeaponAttachment.NotifyTeamChanged
// (Event, Public, BlueprintEvent)

void AUTWeaponAttachment::NotifyTeamChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeaponAttachment.NotifyTeamChanged");

	AUTWeaponAttachment_NotifyTeamChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeaponAttachment.ModifyFireEffect
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UParticleSystemComponent* Effect                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AUTWeaponAttachment::ModifyFireEffect(class UParticleSystemComponent* Effect)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeaponAttachment.ModifyFireEffect");

	AUTWeaponAttachment_ModifyFireEffect_Params params;
	params.Effect = Effect;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeaponAttachment.HolsterToOwner
// (Native, Event, Public, BlueprintEvent)

void AUTWeaponAttachment::HolsterToOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeaponAttachment.HolsterToOwner");

	AUTWeaponAttachment_HolsterToOwner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeaponAttachment.FiringExtraUpdated
// (Native, Public, BlueprintCallable)

void AUTWeaponAttachment::FiringExtraUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeaponAttachment.FiringExtraUpdated");

	AUTWeaponAttachment_FiringExtraUpdated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeaponAttachment.DetachFromOwner
// (Native, Event, Public, BlueprintEvent)

void AUTWeaponAttachment::DetachFromOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeaponAttachment.DetachFromOwner");

	AUTWeaponAttachment_DetachFromOwner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeaponAttachment.CancelImpactEffect
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FHitResult              ImpactHit                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTWeaponAttachment::CancelImpactEffect(const struct FHitResult& ImpactHit)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeaponAttachment.CancelImpactEffect");

	AUTWeaponAttachment_CancelImpactEffect_Params params;
	params.ImpactHit = ImpactHit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTWeaponAttachment.AttachToOwner
// (Native, Event, Public, BlueprintEvent)

void AUTWeaponAttachment::AttachToOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeaponAttachment.AttachToOwner");

	AUTWeaponAttachment_AttachToOwner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTSlowBurst.OnActorSpawned
// (Native, Public)
// Parameters:
// class AActor*                  NewActor                       (Parm, ZeroConstructor, IsPlainOldData)

void AUTSlowBurst::OnActorSpawned(class AActor* NewActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTSlowBurst.OnActorSpawned");

	AUTSlowBurst_OnActorSpawned_Params params;
	params.NewActor = NewActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTTimedPowerup.TimeExpired
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)

void AUTTimedPowerup::TimeExpired()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTTimedPowerup.TimeExpired");

	AUTTimedPowerup_TimeExpired_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTTimedPowerup.PlayFadingSound
// (Native, Public)

void AUTTimedPowerup::PlayFadingSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTTimedPowerup.PlayFadingSound");

	AUTTimedPowerup_PlayFadingSound_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTTimedPowerup.ClientSetTimeRemaining
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// float                          InTimeRemaining                (Parm, ZeroConstructor, IsPlainOldData)

void AUTTimedPowerup::ClientSetTimeRemaining(float InTimeRemaining)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTTimedPowerup.ClientSetTimeRemaining");

	AUTTimedPowerup_ClientSetTimeRemaining_Params params;
	params.InTimeRemaining = InTimeRemaining;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTProj_Rocket.OnRep_TargetActor
// (Final, Native, Public)

void AUTProj_Rocket::OnRep_TargetActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTProj_Rocket.OnRep_TargetActor");

	AUTProj_Rocket_OnRep_TargetActor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTRocketSalvoBoost.FireSalvo
// (Native, Public)

void AUTRocketSalvoBoost::FireSalvo()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTRocketSalvoBoost.FireSalvo");

	AUTRocketSalvoBoost_FireSalvo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTDualWeapon.BecomeDual
// (Native, Public, BlueprintCallable)

void AUTDualWeapon::BecomeDual()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTDualWeapon.BecomeDual");

	AUTDualWeapon_BecomeDual_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeap_Enforcer.ModifySpread
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void AUTWeap_Enforcer::ModifySpread()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeap_Enforcer.ModifySpread");

	AUTWeap_Enforcer_ModifySpread_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeap_BioRifle.OnStartCharging
// (Native, Event, Public, BlueprintEvent)

void AUTWeap_BioRifle::OnStartCharging()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeap_BioRifle.OnStartCharging");

	AUTWeap_BioRifle_OnStartCharging_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeap_BioRifle.OnChargeShot
// (Native, Event, Public, BlueprintEvent)

void AUTWeap_BioRifle::OnChargeShot()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeap_BioRifle.OnChargeShot");

	AUTWeap_BioRifle_OnChargeShot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeap_FlakCannon.GetFireRotationForMultiShot
// (Native, Event, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int                            MultiShotIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 FireLocation                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FRotator                FireRotation                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FRotator                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FRotator AUTWeap_FlakCannon::GetFireRotationForMultiShot(int MultiShotIndex, const struct FVector& FireLocation, const struct FRotator& FireRotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeap_FlakCannon.GetFireRotationForMultiShot");

	AUTWeap_FlakCannon_GetFireRotationForMultiShot_Params params;
	params.MultiShotIndex = MultiShotIndex;
	params.FireLocation = FireLocation;
	params.FireRotation = FireRotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTWeap_FlakCannon.GetFireLocationForMultiShot
// (Native, Event, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int                            MultiShotIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 FireLocation                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FRotator                FireRotation                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector AUTWeap_FlakCannon::GetFireLocationForMultiShot(int MultiShotIndex, const struct FVector& FireLocation, const struct FRotator& FireRotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeap_FlakCannon.GetFireLocationForMultiShot");

	AUTWeap_FlakCannon_GetFireLocationForMultiShot_Params params;
	params.MultiShotIndex = MultiShotIndex;
	params.FireLocation = FireLocation;
	params.FireRotation = FireRotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTProj_Grenade_Sticky.PlayIdleEffects
// (Event, Public, BlueprintEvent)

void AUTProj_Grenade_Sticky::PlayIdleEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTProj_Grenade_Sticky.PlayIdleEffects");

	AUTProj_Grenade_Sticky_PlayIdleEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTProj_Grenade_Sticky.PlayDamagedDetonationEffects
// (Event, Public, BlueprintEvent)

void AUTProj_Grenade_Sticky::PlayDamagedDetonationEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTProj_Grenade_Sticky.PlayDamagedDetonationEffects");

	AUTProj_Grenade_Sticky_PlayDamagedDetonationEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTProj_Grenade_Sticky.GetInstigatorTeamNum
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

unsigned char AUTProj_Grenade_Sticky::GetInstigatorTeamNum()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTProj_Grenade_Sticky.GetInstigatorTeamNum");

	AUTProj_Grenade_Sticky_GetInstigatorTeamNum_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTProj_Grenade_Sticky.ExplodeDueToTimeout
// (Final, Native, Public)

void AUTProj_Grenade_Sticky::ExplodeDueToTimeout()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTProj_Grenade_Sticky.ExplodeDueToTimeout");

	AUTProj_Grenade_Sticky_ExplodeDueToTimeout_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTProj_Grenade_Sticky.ArmGrenade
// (Final, Native, Public, BlueprintCallable)

void AUTProj_Grenade_Sticky::ArmGrenade()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTProj_Grenade_Sticky.ArmGrenade");

	AUTProj_Grenade_Sticky_ArmGrenade_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeap_GrenadeLauncher.ShowDetonatorUI
// (Event, Public, BlueprintEvent)

void AUTWeap_GrenadeLauncher::ShowDetonatorUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeap_GrenadeLauncher.ShowDetonatorUI");

	AUTWeap_GrenadeLauncher_ShowDetonatorUI_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeap_GrenadeLauncher.PlayDetonationEffects
// (Event, Public, BlueprintEvent)

void AUTWeap_GrenadeLauncher::PlayDetonationEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeap_GrenadeLauncher.PlayDetonationEffects");

	AUTWeap_GrenadeLauncher_PlayDetonationEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeap_GrenadeLauncher.OnRep_HasStickyGrenades
// (Final, Native, Private)

void AUTWeap_GrenadeLauncher::OnRep_HasStickyGrenades()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeap_GrenadeLauncher.OnRep_HasStickyGrenades");

	AUTWeap_GrenadeLauncher_OnRep_HasStickyGrenades_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeap_GrenadeLauncher.HideDetonatorUI
// (Event, Public, BlueprintEvent)

void AUTWeap_GrenadeLauncher::HideDetonatorUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeap_GrenadeLauncher.HideDetonatorUI");

	AUTWeap_GrenadeLauncher_HideDetonatorUI_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeap_ImpactHammer.ClientAutoHit
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)

void AUTWeap_ImpactHammer::ClientAutoHit(class AActor* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeap_ImpactHammer.ClientAutoHit");

	AUTWeap_ImpactHammer_ClientAutoHit_Params params;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeap_ImpactHammer.AllowAutoHit
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  PotentialTarget                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTWeap_ImpactHammer::AllowAutoHit(class AActor* PotentialTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeap_ImpactHammer.AllowAutoHit");

	AUTWeap_ImpactHammer_AllowAutoHit_Params params;
	params.PotentialTarget = PotentialTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTWeap_LinkGun.UpdateScreenTexture
// (Native, Public)
// Parameters:
// class UCanvas*                 C                              (Parm, ZeroConstructor, IsPlainOldData)
// int                            Width                          (Parm, ZeroConstructor, IsPlainOldData)
// int                            Height                         (Parm, ZeroConstructor, IsPlainOldData)

void AUTWeap_LinkGun::UpdateScreenTexture(class UCanvas* C, int Width, int Height)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeap_LinkGun.UpdateScreenTexture");

	AUTWeap_LinkGun_UpdateScreenTexture_Params params;
	params.C = C;
	params.Width = Width;
	params.Height = Height;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeap_LinkGun.ServerSetPulseTarget
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AActor*                  InTarget                       (Parm, ZeroConstructor, IsPlainOldData)

void AUTWeap_LinkGun::ServerSetPulseTarget(class AActor* InTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeap_LinkGun.ServerSetPulseTarget");

	AUTWeap_LinkGun_ServerSetPulseTarget_Params params;
	params.InTarget = InTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeap_LinkGun.CheckBotPulseFire
// (Native, Public)

void AUTWeap_LinkGun::CheckBotPulseFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeap_LinkGun.CheckBotPulseFire");

	AUTWeap_LinkGun_CheckBotPulseFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTRemoteRedeemer.TryToDrive
// (Native, Public)
// Parameters:
// class APawn*                   NewDriver                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTRemoteRedeemer::TryToDrive(class APawn* NewDriver)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTRemoteRedeemer.TryToDrive");

	AUTRemoteRedeemer_TryToDrive_Params params;
	params.NewDriver = NewDriver;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTRemoteRedeemer.ServerDriverLeave
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AUTRemoteRedeemer::ServerDriverLeave()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTRemoteRedeemer.ServerDriverLeave");

	AUTRemoteRedeemer_ServerDriverLeave_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTRemoteRedeemer.ServerBlowUp
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AUTRemoteRedeemer::ServerBlowUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTRemoteRedeemer.ServerBlowUp");

	AUTRemoteRedeemer_ServerBlowUp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTRemoteRedeemer.RedeemerRestarted
// (Event, Public, BlueprintEvent)
// Parameters:
// class AController*             NewController                  (Parm, ZeroConstructor, IsPlainOldData)

void AUTRemoteRedeemer::RedeemerRestarted(class AController* NewController)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTRemoteRedeemer.RedeemerRestarted");

	AUTRemoteRedeemer_RedeemerRestarted_Params params;
	params.NewController = NewController;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTRemoteRedeemer.OnStop
// (Native, Public, HasOutParms)
// Parameters:
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AUTRemoteRedeemer::OnStop(const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTRemoteRedeemer.OnStop");

	AUTRemoteRedeemer_OnStop_Params params;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTRemoteRedeemer.OnOverlapBegin
// (Native, Public, HasOutParms)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AUTRemoteRedeemer::OnOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTRemoteRedeemer.OnOverlapBegin");

	AUTRemoteRedeemer_OnOverlapBegin_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTRemoteRedeemer.GetTeamNum
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

unsigned char AUTRemoteRedeemer::GetTeamNum()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTRemoteRedeemer.GetTeamNum");

	AUTRemoteRedeemer_GetTeamNum_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTRemoteRedeemer.ForceReplication
// (Net, NetReliable, Native, Event, Public, NetClient)

void AUTRemoteRedeemer::ForceReplication()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTRemoteRedeemer.ForceReplication");

	AUTRemoteRedeemer_ForceReplication_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTRemoteRedeemer.ExplodeTimed
// (Native, Public)

void AUTRemoteRedeemer::ExplodeTimed()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTRemoteRedeemer.ExplodeTimed");

	AUTRemoteRedeemer_ExplodeTimed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTRemoteRedeemer.ExplodeStage3
// (Final, Native, Public)

void AUTRemoteRedeemer::ExplodeStage3()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTRemoteRedeemer.ExplodeStage3");

	AUTRemoteRedeemer_ExplodeStage3_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTRemoteRedeemer.ExplodeStage2
// (Final, Native, Public)

void AUTRemoteRedeemer::ExplodeStage2()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTRemoteRedeemer.ExplodeStage2");

	AUTRemoteRedeemer_ExplodeStage2_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTRemoteRedeemer.ExplodeStage1
// (Final, Native, Public)

void AUTRemoteRedeemer::ExplodeStage1()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTRemoteRedeemer.ExplodeStage1");

	AUTRemoteRedeemer_ExplodeStage1_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTRemoteRedeemer.DriverLeave
// (Native, Public)
// Parameters:
// bool                           bForceLeave                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTRemoteRedeemer::DriverLeave(bool bForceLeave)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTRemoteRedeemer.DriverLeave");

	AUTRemoteRedeemer_DriverLeave_Params params;
	params.bForceLeave = bForceLeave;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTRemoteRedeemer.DriverEnter
// (Native, Public)
// Parameters:
// class APawn*                   NewDriver                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTRemoteRedeemer::DriverEnter(class APawn* NewDriver)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTRemoteRedeemer.DriverEnter");

	AUTRemoteRedeemer_DriverEnter_Params params;
	params.NewDriver = NewDriver;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTRemoteRedeemer.BlowUp
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FVector                 HitNormal                      (Parm, ZeroConstructor, IsPlainOldData)

void AUTRemoteRedeemer::BlowUp(const struct FVector& HitNormal)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTRemoteRedeemer.BlowUp");

	AUTRemoteRedeemer_BlowUp_Params params;
	params.HitNormal = HitNormal;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeap_RocketLauncher.OnRep_PendingLockedTarget
// (Native, Public)

void AUTWeap_RocketLauncher::OnRep_PendingLockedTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeap_RocketLauncher.OnRep_PendingLockedTarget");

	AUTWeap_RocketLauncher_OnRep_PendingLockedTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeap_RocketLauncher.OnRep_LockedTarget
// (Native, Public)

void AUTWeap_RocketLauncher::OnRep_LockedTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeap_RocketLauncher.OnRep_LockedTarget");

	AUTWeap_RocketLauncher_OnRep_LockedTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeap_RocketLauncher.FireRocketProjectile
// (Native, Public, BlueprintCallable)
// Parameters:
// class AUTProjectile*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AUTProjectile* AUTWeap_RocketLauncher::FireRocketProjectile()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeap_RocketLauncher.FireRocketProjectile");

	AUTWeap_RocketLauncher_FireRocketProjectile_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTWeap_RocketLauncher.ClientAbortLoad
// (Net, NetReliable, Native, Event, Public, NetClient)

void AUTWeap_RocketLauncher::ClientAbortLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeap_RocketLauncher.ClientAbortLoad");

	AUTWeap_RocketLauncher_ClientAbortLoad_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeap_RocketLauncher.ClearLoadedRockets
// (Native, Public, BlueprintCallable)

void AUTWeap_RocketLauncher::ClearLoadedRockets()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeap_RocketLauncher.ClearLoadedRockets");

	AUTWeap_RocketLauncher_ClearLoadedRockets_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeap_ShockRifle.UpdateScreenTexture
// (Native, Public)
// Parameters:
// class UCanvas*                 C                              (Parm, ZeroConstructor, IsPlainOldData)
// int                            Width                          (Parm, ZeroConstructor, IsPlainOldData)
// int                            Height                         (Parm, ZeroConstructor, IsPlainOldData)

void AUTWeap_ShockRifle::UpdateScreenTexture(class UCanvas* C, int Width, int Height)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeap_ShockRifle.UpdateScreenTexture");

	AUTWeap_ShockRifle_UpdateScreenTexture_Params params;
	params.C = C;
	params.Width = Width;
	params.Height = Height;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeap_ShockRifle.Play1PComboEffects
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AUTWeap_ShockRifle::Play1PComboEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeap_ShockRifle.Play1PComboEffects");

	AUTWeap_ShockRifle_Play1PComboEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeap_LightningRifle.OnRepCharging
// (Final, Native, Public)

void AUTWeap_LightningRifle::OnRepCharging()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeap_LightningRifle.OnRepCharging");

	AUTWeap_LightningRifle_OnRepCharging_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeaponRedirector.UpdateCollisionShape
// (Native, Public)

void AUTWeaponRedirector::UpdateCollisionShape()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeaponRedirector.UpdateCollisionShape");

	AUTWeaponRedirector_UpdateCollisionShape_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeaponRedirector.InitFor
// (Native, Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// class APawn*                   InInstigator                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FRepCollisionShape      InCollision                    (ConstParm, Parm, OutParm, ReferenceParm)
// class UPrimitiveComponent*     InBase                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FTransform              InDest                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AUTWeaponRedirector::InitFor(class APawn* InInstigator, const struct FRepCollisionShape& InCollision, class UPrimitiveComponent* InBase, const struct FTransform& InDest)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeaponRedirector.InitFor");

	AUTWeaponRedirector_InitFor_Params params;
	params.InInstigator = InInstigator;
	params.InCollision = InCollision;
	params.InBase = InBase;
	params.InDest = InDest;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeap_Translocator.OnRep_TransDisk
// (Native, Public)

void AUTWeap_Translocator::OnRep_TransDisk()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeap_Translocator.OnRep_TransDisk");

	AUTWeap_Translocator_OnRep_TransDisk_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTJumpPad.TriggerBeginOverlap
// (Native, Public, HasOutParms)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AUTJumpPad::TriggerBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTJumpPad.TriggerBeginOverlap");

	AUTJumpPad_TriggerBeginOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTJumpPad.Launch
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)

void AUTJumpPad::Launch(class AActor* Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTJumpPad.Launch");

	AUTJumpPad_Launch_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTJumpPad.IsEnabled
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTJumpPad::IsEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTJumpPad.IsEnabled");

	AUTJumpPad_IsEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTJumpPad.CanLaunch
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  TestActor                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTJumpPad::CanLaunch(class AActor* TestActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTJumpPad.CanLaunch");

	AUTJumpPad_CanLaunch_Params params;
	params.TestActor = TestActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTJumpPad.CalculateJumpVelocity
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                  JumpActor                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector AUTJumpPad::CalculateJumpVelocity(class AActor* JumpActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTJumpPad.CalculateJumpVelocity");

	AUTJumpPad_CalculateJumpVelocity_Params params;
	params.JumpActor = JumpActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTLoadGuard.SetLoadingText
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FText                   InLoadingText                  (ConstParm, Parm, OutParm, ReferenceParm)

void UUTLoadGuard::SetLoadingText(const struct FText& InLoadingText)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLoadGuard.SetLoadingText");

	UUTLoadGuard_SetLoadingText_Params params;
	params.InLoadingText = InLoadingText;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLoadGuard.SetIsLoading
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bInIsLoading                   (Parm, ZeroConstructor, IsPlainOldData)

void UUTLoadGuard::SetIsLoading(bool bInIsLoading)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLoadGuard.SetIsLoading");

	UUTLoadGuard_SetIsLoading_Params params;
	params.bInIsLoading = bInIsLoading;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction UnrealTournament.UTLoadGuard.OnAssetLoaded__DelegateSignature
// (Public, Delegate)
// Parameters:
// class UObject*                 Object                         (Parm, ZeroConstructor, IsPlainOldData)

void UUTLoadGuard::OnAssetLoaded__DelegateSignature(class UObject* Object)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction UnrealTournament.UTLoadGuard.OnAssetLoaded__DelegateSignature");

	UUTLoadGuard_OnAssetLoaded__DelegateSignature_Params params;
	params.Object = Object;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLoadGuard.IsLoading
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUTLoadGuard::IsLoading()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLoadGuard.IsLoading");

	UUTLoadGuard_IsLoading_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTLoadGuard.BP_GuardAndLoadAsset
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TAssetPtr<class UObject>       InLazyAsset                    (ConstParm, Parm, OutParm, ReferenceParm)
// struct FScriptDelegate         OnAssetLoaded                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UUTLoadGuard::BP_GuardAndLoadAsset(TAssetPtr<class UObject> InLazyAsset, const struct FScriptDelegate& OnAssetLoaded)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLoadGuard.BP_GuardAndLoadAsset");

	UUTLoadGuard_BP_GuardAndLoadAsset_Params params;
	params.InLazyAsset = InLazyAsset;
	params.OnAssetLoaded = OnAssetLoaded;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLazyImage.SetBrushFromLazyTexture
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TAssetPtr<class UTexture2D>    LazyTexture                    (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           bMatchSize                     (Parm, ZeroConstructor, IsPlainOldData)

void UUTLazyImage::SetBrushFromLazyTexture(TAssetPtr<class UTexture2D> LazyTexture, bool bMatchSize)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLazyImage.SetBrushFromLazyTexture");

	UUTLazyImage_SetBrushFromLazyTexture_Params params;
	params.LazyTexture = LazyTexture;
	params.bMatchSize = bMatchSize;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLazyImage.SetBrushFromLazyMaterial
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TAssetPtr<class UMaterialInterface> LazyMaterial                   (ConstParm, Parm, OutParm, ReferenceParm)

void UUTLazyImage::SetBrushFromLazyMaterial(TAssetPtr<class UMaterialInterface> LazyMaterial)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLazyImage.SetBrushFromLazyMaterial");

	UUTLazyImage_SetBrushFromLazyMaterial_Params params;
	params.LazyMaterial = LazyMaterial;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLazyImage.SetBrushFromLazyDisplayAsset
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TAssetPtr<class UObject>       LazyObject                     (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           bMatchTextureSize              (Parm, ZeroConstructor, IsPlainOldData)

void UUTLazyImage::SetBrushFromLazyDisplayAsset(TAssetPtr<class UObject> LazyObject, bool bMatchTextureSize)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLazyImage.SetBrushFromLazyDisplayAsset");

	UUTLazyImage_SetBrushFromLazyDisplayAsset_Params params;
	params.LazyObject = LazyObject;
	params.bMatchTextureSize = bMatchTextureSize;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLazyImage.SetBrushFromItemDefinition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUtMcpDefinition*        ItemDefinition                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bMatchTextureSize              (Parm, ZeroConstructor, IsPlainOldData)

void UUTLazyImage::SetBrushFromItemDefinition(class UUtMcpDefinition* ItemDefinition, bool bMatchTextureSize)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLazyImage.SetBrushFromItemDefinition");

	UUTLazyImage_SetBrushFromItemDefinition_Params params;
	params.ItemDefinition = ItemDefinition;
	params.bMatchTextureSize = bMatchTextureSize;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLazyImage.IsLoading
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUTLazyImage::IsLoading()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLazyImage.IsLoading");

	UUTLazyImage_IsLoading_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTLazyImage.ForwardLoadingStateChanged
// (Final, Native, Private)
// Parameters:
// bool                           bIsLoading                     (Parm, ZeroConstructor, IsPlainOldData)

void UUTLazyImage::ForwardLoadingStateChanged(bool bIsLoading)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLazyImage.ForwardLoadingStateChanged");

	UUTLazyImage_ForwardLoadingStateChanged_Params params;
	params.bIsLoading = bIsLoading;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTMovementBaseInterface.RemoveBasedCharacter
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AUTCharacter*            BasedCharacter                 (Parm, ZeroConstructor, IsPlainOldData)

void UUTMovementBaseInterface::RemoveBasedCharacter(class AUTCharacter* BasedCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTMovementBaseInterface.RemoveBasedCharacter");

	UUTMovementBaseInterface_RemoveBasedCharacter_Params params;
	params.BasedCharacter = BasedCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTMovementBaseInterface.AddBasedCharacter
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AUTCharacter*            BasedCharacter                 (Parm, ZeroConstructor, IsPlainOldData)

void UUTMovementBaseInterface::AddBasedCharacter(class AUTCharacter* BasedCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTMovementBaseInterface.AddBasedCharacter");

	UUTMovementBaseInterface_AddBasedCharacter_Params params;
	params.BasedCharacter = BasedCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLift.UpdateCurrentlyBasedCharacters
// (Native, Public, BlueprintCallable)
// Parameters:
// class AUTCharacter*            BasedCharacter                 (Parm, ZeroConstructor, IsPlainOldData)

void AUTLift::UpdateCurrentlyBasedCharacters(class AUTCharacter* BasedCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLift.UpdateCurrentlyBasedCharacters");

	AUTLift_UpdateCurrentlyBasedCharacters_Params params;
	params.BasedCharacter = BasedCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLift.SetEncroachComponent
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*     NewEncroachComponent           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AUTLift::SetEncroachComponent(class UPrimitiveComponent* NewEncroachComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLift.SetEncroachComponent");

	AUTLift_SetEncroachComponent_Params params;
	params.NewEncroachComponent = NewEncroachComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLift.OnOverlapBegin
// (Native, Public, HasOutParms)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AUTLift::OnOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLift.OnOverlapBegin");

	AUTLift_OnOverlapBegin_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLift.OnEncroachActor
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  EncroachedActor                (Parm, ZeroConstructor, IsPlainOldData)

void AUTLift::OnEncroachActor(class AActor* EncroachedActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLift.OnEncroachActor");

	AUTLift_OnEncroachActor_Params params;
	params.EncroachedActor = EncroachedActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLift.MoveLiftTo
// (Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 NewLocation                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FRotator                NewRotation                    (Parm, ZeroConstructor, IsPlainOldData)

void AUTLift::MoveLiftTo(const struct FVector& NewLocation, const struct FRotator& NewRotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLift.MoveLiftTo");

	AUTLift_MoveLiftTo_Params params;
	params.NewLocation = NewLocation;
	params.NewRotation = NewRotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLift.HasBasedCharacters
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTLift::HasBasedCharacters()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLift.HasBasedCharacters");

	AUTLift_HasBasedCharacters_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTLift.GetStops
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// TArray<struct FVector>         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FVector> AUTLift::GetStops()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLift.GetStops");

	AUTLift_GetStops_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTLiftMeshComponent.SetIndirectLightingCacheQuality
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EIndirectLightingCacheQuality> Quality                        (Parm, ZeroConstructor, IsPlainOldData)

void UUTLiftMeshComponent::SetIndirectLightingCacheQuality(TEnumAsByte<EIndirectLightingCacheQuality> Quality)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLiftMeshComponent.SetIndirectLightingCacheQuality");

	UUTLiftMeshComponent_SetIndirectLightingCacheQuality_Params params;
	params.Quality = Quality;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTListItem.ToggleExpansion
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UUTListItem::ToggleExpansion()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTListItem.ToggleExpansion");

	UUTListItem_ToggleExpansion_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTListItem.SetSelected
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                           bSelected                      (Parm, ZeroConstructor, IsPlainOldData)

void UUTListItem::SetSelected(bool bSelected)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTListItem.SetSelected");

	UUTListItem_SetSelected_Params params;
	params.bSelected = bSelected;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTListItem.SetIndexInList
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int                            InIndexInList                  (Parm, ZeroConstructor, IsPlainOldData)

void UUTListItem::SetIndexInList(int InIndexInList)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTListItem.SetIndexInList");

	UUTListItem_SetIndexInList_Params params;
	params.InIndexInList = InIndexInList;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTListItem.RegisterOnClicked
// (Native, Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FScriptDelegate         Callback                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UUTListItem::RegisterOnClicked(const struct FScriptDelegate& Callback)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTListItem.RegisterOnClicked");

	UUTListItem_RegisterOnClicked_Params params;
	params.Callback = Callback;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTListItem.Private_OnExpanderArrowShiftClicked
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UUTListItem::Private_OnExpanderArrowShiftClicked()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTListItem.Private_OnExpanderArrowShiftClicked");

	UUTListItem_Private_OnExpanderArrowShiftClicked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTListItem.IsItemExpanded
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUTListItem::IsItemExpanded()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTListItem.IsItemExpanded");

	UUTListItem_IsItemExpanded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTListItem.GetSelectionMode
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<ESelectionMode>    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<ESelectionMode> UUTListItem::GetSelectionMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTListItem.GetSelectionMode");

	UUTListItem_GetSelectionMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTListItem.GetIndentLevel
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UUTListItem::GetIndentLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTListItem.GetIndentLevel");

	UUTListItem_GetIndentLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTListItem.DoesItemHaveChildren
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UUTListItem::DoesItemHaveChildren()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTListItem.DoesItemHaveChildren");

	UUTListItem_DoesItemHaveChildren_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTObjectListItem.SetData
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                 InData                         (Parm, ZeroConstructor, IsPlainOldData)

void UUTObjectListItem::SetData(class UObject* InData)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTObjectListItem.SetData");

	UUTObjectListItem_SetData_Params params;
	params.InData = InData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTObjectListItem.Reset
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UUTObjectListItem::Reset()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTObjectListItem.Reset");

	UUTObjectListItem_Reset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTObjectListItem.GetData
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UObject*                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UObject* UUTObjectListItem::GetData()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTObjectListItem.GetData");

	UUTObjectListItem_GetData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTListView.SetSelectedItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bWaitIfPendingRefresh          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUTListView::SetSelectedItem(class UObject* Item, bool bWaitIfPendingRefresh)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTListView.SetSelectedItem");

	UUTListView_SetSelectedItem_Params params;
	params.Item = Item;
	params.bWaitIfPendingRefresh = bWaitIfPendingRefresh;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTListView.SetSelectedIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUTListView::SetSelectedIndex(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTListView.SetSelectedIndex");

	UUTListView_SetSelectedIndex_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTListView.SetItemSelection
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSelected                      (Parm, ZeroConstructor, IsPlainOldData)

void UUTListView::SetItemSelection(class UObject* Item, bool bSelected)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTListView.SetItemSelection");

	UUTListView_SetItemSelection_Params params;
	params.Item = Item;
	params.bSelected = bSelected;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTListView.SetItemHeight
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          NewHeight                      (Parm, ZeroConstructor, IsPlainOldData)

void UUTListView::SetItemHeight(float NewHeight)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTListView.SetItemHeight");

	UUTListView_SetItemHeight_Params params;
	params.NewHeight = NewHeight;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTListView.SetDesiredItemPadding
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FMargin                 DesiredPadding                 (ConstParm, Parm, OutParm, ReferenceParm)

void UUTListView::SetDesiredItemPadding(const struct FMargin& DesiredPadding)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTListView.SetDesiredItemPadding");

	UUTListView_SetDesiredItemPadding_Params params;
	params.DesiredPadding = DesiredPadding;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTListView.SetDataProvider
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<class UObject*>         InDataProvider                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UUTListView::SetDataProvider(TArray<class UObject*> InDataProvider)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTListView.SetDataProvider");

	UUTListView_SetDataProvider_Params params;
	params.InDataProvider = InDataProvider;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTListView.ScrollIntoView
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                 Item                           (Parm, ZeroConstructor, IsPlainOldData)

void UUTListView::ScrollIntoView(class UObject* Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTListView.ScrollIntoView");

	UUTListView_ScrollIntoView_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTListView.IsRefreshPending
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUTListView::IsRefreshPending()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTListView.IsRefreshPending");

	UUTListView_IsRefreshPending_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTListView.IsItemVisible
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUTListView::IsItemVisible(class UObject* Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTListView.IsItemVisible");

	UUTListView_IsItemVisible_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTListView.GetSelectedItems
// (Final, Native, Public, HasOutParms, BlueprintCallable, Const)
// Parameters:
// TArray<class UObject*>         Items                          (Parm, OutParm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUTListView::GetSelectedItems(TArray<class UObject*>* Items)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTListView.GetSelectedItems");

	UUTListView_GetSelectedItems_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Items != nullptr)
		*Items = params.Items;

	return params.ReturnValue;
}


// Function UnrealTournament.UTListView.GetSelectedItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UObject* UUTListView::GetSelectedItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTListView.GetSelectedItem");

	UUTListView_GetSelectedItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTListView.GetNumItemsSelected
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UUTListView::GetNumItemsSelected()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTListView.GetNumItemsSelected");

	UUTListView_GetNumItemsSelected_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTListView.GetItemAt
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UObject* UUTListView::GetItemAt(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTListView.GetItemAt");

	UUTListView_GetItemAt_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTListView.GetIndexForItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UUTListView::GetIndexForItem(class UObject* Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTListView.GetIndexForItem");

	UUTListView_GetIndexForItem_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTListView.DynamicHandleItemClicked
// (Final, Native, Private)
// Parameters:
// class UUserWidget*             Widget                         (Parm, ZeroConstructor, IsPlainOldData)

void UUTListView::DynamicHandleItemClicked(class UUserWidget* Widget)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTListView.DynamicHandleItemClicked");

	UUTListView_DynamicHandleItemClicked_Params params;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTListView.ClearSelection
// (Final, Native, Public, BlueprintCallable)

void UUTListView::ClearSelection()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTListView.ClearSelection");

	UUTListView_ClearSelection_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTListView.Clear
// (Final, Native, Public, BlueprintCallable)

void UUTListView::Clear()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTListView.Clear");

	UUTListView_Clear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTListView.AddItem
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class UObject*                 Item                           (Parm, ZeroConstructor, IsPlainOldData)

void UUTListView::AddItem(class UObject* Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTListView.AddItem");

	UUTListView_AddItem_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTTileView.SetItemWidth
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          NewWidth                       (Parm, ZeroConstructor, IsPlainOldData)

void UUTTileView::SetItemWidth(float NewWidth)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTTileView.SetItemWidth");

	UUTTileView_SetItemWidth_Params params;
	params.NewWidth = NewWidth;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLobbyMatchInfo.ServerInvitePlayer
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AUTLobbyPlayerState*     Who                            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInvite                        (Parm, ZeroConstructor, IsPlainOldData)

void AUTLobbyMatchInfo::ServerInvitePlayer(class AUTLobbyPlayerState* Who, bool bInvite)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLobbyMatchInfo.ServerInvitePlayer");

	AUTLobbyMatchInfo_ServerInvitePlayer_Params params;
	params.Who = Who;
	params.bInvite = bInvite;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLobbyMatchInfo.OnRep_Update
// (Native, Protected)

void AUTLobbyMatchInfo::OnRep_Update()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLobbyMatchInfo.OnRep_Update");

	AUTLobbyMatchInfo_OnRep_Update_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLobbyMatchInfo.OnRep_RedirectsChanged
// (Final, Native, Protected)

void AUTLobbyMatchInfo::OnRep_RedirectsChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLobbyMatchInfo.OnRep_RedirectsChanged");

	AUTLobbyMatchInfo_OnRep_RedirectsChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLobbyMatchInfo.OnRep_MatchUpdate
// (Native, Protected)

void AUTLobbyMatchInfo::OnRep_MatchUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLobbyMatchInfo.OnRep_MatchUpdate");

	AUTLobbyMatchInfo_OnRep_MatchUpdate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLobbyMatchInfo.OnRep_InitialMap
// (Native, Protected)

void AUTLobbyMatchInfo::OnRep_InitialMap()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLobbyMatchInfo.OnRep_InitialMap");

	AUTLobbyMatchInfo_OnRep_InitialMap_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLobbyMatchInfo.OnRep_CurrentRuleset
// (Native, Protected)

void AUTLobbyMatchInfo::OnRep_CurrentRuleset()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLobbyMatchInfo.OnRep_CurrentRuleset");

	AUTLobbyMatchInfo_OnRep_CurrentRuleset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTProfileSettings.GetWeaponSkinClassname
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AUTWeapon*               Weapon                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UUTProfileSettings::GetWeaponSkinClassname(class AUTWeapon* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTProfileSettings.GetWeaponSkinClassname");

	UUTProfileSettings_GetWeaponSkinClassname_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTProfileSettings.GetWeaponGroup
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class AUTWeapon*               WeaponClass                    (Parm, ZeroConstructor, IsPlainOldData)
// int                            WeaponGroup                    (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// int                            GroupPriority                  (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void UUTProfileSettings::GetWeaponGroup(class AUTWeapon* WeaponClass, int* WeaponGroup, int* GroupPriority)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTProfileSettings.GetWeaponGroup");

	UUTProfileSettings_GetWeaponGroup_Params params;
	params.WeaponClass = WeaponClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (WeaponGroup != nullptr)
		*WeaponGroup = params.WeaponGroup;
	if (GroupPriority != nullptr)
		*GroupPriority = params.GroupPriority;
}


// Function UnrealTournament.UTProfileSettings.GetWeaponCustomizationForWeapon
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class AUTWeapon*               Weapon                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FWeaponCustomizationInfo outWeaponCustomizationInfo     (Parm, OutParm)

void UUTProfileSettings::GetWeaponCustomizationForWeapon(class AUTWeapon* Weapon, struct FWeaponCustomizationInfo* outWeaponCustomizationInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTProfileSettings.GetWeaponCustomizationForWeapon");

	UUTProfileSettings_GetWeaponCustomizationForWeapon_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (outWeaponCustomizationInfo != nullptr)
		*outWeaponCustomizationInfo = params.outWeaponCustomizationInfo;
}


// Function UnrealTournament.UTProfileSettings.GetWeaponCustomization
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FName                   WeaponCustomizationTag         (Parm, ZeroConstructor, IsPlainOldData)
// struct FWeaponCustomizationInfo outWeaponCustomizationInfo     (Parm, OutParm)

void UUTProfileSettings::GetWeaponCustomization(const struct FName& WeaponCustomizationTag, struct FWeaponCustomizationInfo* outWeaponCustomizationInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTProfileSettings.GetWeaponCustomization");

	UUTProfileSettings_GetWeaponCustomization_Params params;
	params.WeaponCustomizationTag = WeaponCustomizationTag;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (outWeaponCustomizationInfo != nullptr)
		*outWeaponCustomizationInfo = params.outWeaponCustomizationInfo;
}


// Function UnrealTournament.UTProfileSettings.GetPlayerName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UUTProfileSettings::GetPlayerName()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTProfileSettings.GetPlayerName");

	UUTProfileSettings_GetPlayerName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTProfileSettings.ApplyInputSettings
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUTLocalPlayer*          ProfilePlayer                  (Parm, ZeroConstructor, IsPlainOldData)

void UUTProfileSettings::ApplyInputSettings(class UUTLocalPlayer* ProfilePlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTProfileSettings.ApplyInputSettings");

	UUTProfileSettings_ApplyInputSettings_Params params;
	params.ProfilePlayer = ProfilePlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLocalPlayer.UpdateCheck
// (Final, Native, Protected)

void UUTLocalPlayer::UpdateCheck()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLocalPlayer.UpdateCheck");

	UUTLocalPlayer_UpdateCheck_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLocalPlayer.ShowRankedReconnectDialog
// (Final, Native, Public)
// Parameters:
// struct FString                 UniqueId                       (Parm, ZeroConstructor)

void UUTLocalPlayer::ShowRankedReconnectDialog(const struct FString& UniqueId)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLocalPlayer.ShowRankedReconnectDialog");

	UUTLocalPlayer_ShowRankedReconnectDialog_Params params;
	params.UniqueId = UniqueId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLocalPlayer.SetPartyType
// (Final, Native, Public)
// Parameters:
// EPartyType                     InPartyType                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bLeaderFriendsOnly             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bLeaderInvitesOnly             (Parm, ZeroConstructor, IsPlainOldData)

void UUTLocalPlayer::SetPartyType(EPartyType InPartyType, bool bLeaderFriendsOnly, bool bLeaderInvitesOnly)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLocalPlayer.SetPartyType");

	UUTLocalPlayer_SetPartyType_Params params;
	params.InPartyType = InPartyType;
	params.bLeaderFriendsOnly = bLeaderFriendsOnly;
	params.bLeaderInvitesOnly = bLeaderInvitesOnly;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLocalPlayer.SendFriendRequest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AUTPlayerState*          DesiredPlayerState             (Parm, ZeroConstructor, IsPlainOldData)

void UUTLocalPlayer::SendFriendRequest(class AUTPlayerState* DesiredPlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLocalPlayer.SendFriendRequest");

	UUTLocalPlayer_SendFriendRequest_Params params;
	params.DesiredPlayerState = DesiredPlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLocalPlayer.SaveProgression
// (Native, Public)

void UUTLocalPlayer::SaveProgression()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLocalPlayer.SaveProgression");

	UUTLocalPlayer_SaveProgression_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLocalPlayer.RestartTutorial
// (Native, Public, BlueprintCallable)

void UUTLocalPlayer::RestartTutorial()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLocalPlayer.RestartTutorial");

	UUTLocalPlayer_RestartTutorial_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLocalPlayer.PrevTutorial
// (Native, Public, BlueprintCallable)

void UUTLocalPlayer::PrevTutorial()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLocalPlayer.PrevTutorial");

	UUTLocalPlayer_PrevTutorial_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLocalPlayer.OpenUMGWidget
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 UMGClass                       (Parm, ZeroConstructor)
// class UUTUMGWidget*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UUTUMGWidget* UUTLocalPlayer::OpenUMGWidget(const struct FString& UMGClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLocalPlayer.OpenUMGWidget");

	UUTLocalPlayer_OpenUMGWidget_Params params;
	params.UMGClass = UMGClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTLocalPlayer.NextTutorial
// (Native, Public, BlueprintCallable)

void UUTLocalPlayer::NextTutorial()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLocalPlayer.NextTutorial");

	UUTLocalPlayer_NextTutorial_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLocalPlayer.LaunchTutorial
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   TutorialName                   (Parm, ZeroConstructor, IsPlainOldData)

void UUTLocalPlayer::LaunchTutorial(const struct FName& TutorialName)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLocalPlayer.LaunchTutorial");

	UUTLocalPlayer_LaunchTutorial_Params params;
	params.TutorialName = TutorialName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLocalPlayer.LaunchPendingQuickmatch
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUTLocalPlayer::LaunchPendingQuickmatch()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLocalPlayer.LaunchPendingQuickmatch");

	UUTLocalPlayer_LaunchPendingQuickmatch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTLocalPlayer.IsTutorialMaskCompleted
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            TutorialMask                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUTLocalPlayer::IsTutorialMaskCompleted(int TutorialMask)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLocalPlayer.IsTutorialMaskCompleted");

	UUTLocalPlayer_IsTutorialMaskCompleted_Params params;
	params.TutorialMask = TutorialMask;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTLocalPlayer.IsTutorialCompleted
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   TutorialName                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUTLocalPlayer::IsTutorialCompleted(const struct FName& TutorialName)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLocalPlayer.IsTutorialCompleted");

	UUTLocalPlayer_IsTutorialCompleted_Params params;
	params.TutorialName = TutorialName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTLocalPlayer.IsSystemMenuOpen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUTLocalPlayer::IsSystemMenuOpen()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLocalPlayer.IsSystemMenuOpen");

	UUTLocalPlayer_IsSystemMenuOpen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTLocalPlayer.IsKillcamReplayActive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUTLocalPlayer::IsKillcamReplayActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLocalPlayer.IsKillcamReplayActive");

	UUTLocalPlayer_IsKillcamReplayActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTLocalPlayer.GetTutorialSectionText
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<ETutorialSections> Section                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UUTLocalPlayer::GetTutorialSectionText(TEnumAsByte<ETutorialSections> Section)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLocalPlayer.GetTutorialSectionText");

	UUTLocalPlayer_GetTutorialSectionText_Params params;
	params.Section = Section;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTLocalPlayer.GetTutorialMask
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UUTLocalPlayer::GetTutorialMask()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLocalPlayer.GetTutorialMask");

	UUTLocalPlayer_GetTutorialMask_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTLocalPlayer.GetStarsFromXP
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// int                            XPValue                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            StarLevel                      (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void UUTLocalPlayer::STATIC_GetStarsFromXP(int XPValue, int* StarLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLocalPlayer.GetStarsFromXP");

	UUTLocalPlayer_GetStarsFromXP_Params params;
	params.XPValue = XPValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (StarLevel != nullptr)
		*StarLevel = params.StarLevel;
}


// Function UnrealTournament.UTLocalPlayer.GetProfileSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// class UUTProfileSettings*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UUTProfileSettings* UUTLocalPlayer::GetProfileSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLocalPlayer.GetProfileSettings");

	UUTLocalPlayer_GetProfileSettings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTLocalPlayer.GetPrevTutorialName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UUTLocalPlayer::GetPrevTutorialName()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLocalPlayer.GetPrevTutorialName");

	UUTLocalPlayer_GetPrevTutorialName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTLocalPlayer.GetNextTutorialName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UUTLocalPlayer::GetNextTutorialName()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLocalPlayer.GetNextTutorialName");

	UUTLocalPlayer_GetNextTutorialName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTLocalPlayer.GetBestTutorialTime
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   TutorialName                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UUTLocalPlayer::GetBestTutorialTime(const struct FName& TutorialName)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLocalPlayer.GetBestTutorialTime");

	UUTLocalPlayer_GetBestTutorialTime_Params params;
	params.TutorialName = TutorialName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTLocalPlayer.FindUMGWidget
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   SearchTag                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class UUTUMGWidget*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UUTUMGWidget* UUTLocalPlayer::FindUMGWidget(const struct FName& SearchTag)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLocalPlayer.FindUMGWidget");

	UUTLocalPlayer_FindUMGWidget_Params params;
	params.SearchTag = SearchTag;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTLocalPlayer.CloseUMGWidgetByTag
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   Tag                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UUTLocalPlayer::CloseUMGWidgetByTag(const struct FName& Tag)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLocalPlayer.CloseUMGWidgetByTag");

	UUTLocalPlayer_CloseUMGWidgetByTag_Params params;
	params.Tag = Tag;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLocalPlayer.CloseUMGWidget
// (Native, Public, BlueprintCallable)
// Parameters:
// class UUTUMGWidget*            WidgetToClose                  (Parm, ZeroConstructor, IsPlainOldData)

void UUTLocalPlayer::CloseUMGWidget(class UUTUMGWidget* WidgetToClose)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLocalPlayer.CloseUMGWidget");

	UUTLocalPlayer_CloseUMGWidget_Params params;
	params.WidgetToClose = WidgetToClose;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLocalPlayer.CloseSavingWidget
// (Final, Native, Public, BlueprintCallable)

void UUTLocalPlayer::CloseSavingWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLocalPlayer.CloseSavingWidget");

	UUTLocalPlayer_CloseSavingWidget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLocalPlayer.CheckForNewUpdate
// (Final, Native, Public)

void UUTLocalPlayer::CheckForNewUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLocalPlayer.CheckForNewUpdate");

	UUTLocalPlayer_CheckForNewUpdate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLocalPlayer.ChangeStatsViewerTarget
// (Native, Public)
// Parameters:
// struct FString                 InStatsID                      (Parm, ZeroConstructor)

void UUTLocalPlayer::ChangeStatsViewerTarget(const struct FString& InStatsID)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLocalPlayer.ChangeStatsViewerTarget");

	UUTLocalPlayer_ChangeStatsViewerTarget_Params params;
	params.InStatsID = InStatsID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTLocalPlayer.bIsQuickmatchDialogOpen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUTLocalPlayer::bIsQuickmatchDialogOpen()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLocalPlayer.bIsQuickmatchDialogOpen");

	UUTLocalPlayer_bIsQuickmatchDialogOpen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTLocalPlayer.AreMenusOpen
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUTLocalPlayer::AreMenusOpen()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTLocalPlayer.AreMenusOpen");

	UUTLocalPlayer_AreMenusOpen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTPartyBeaconClient.ServerEmptyServerReservationRequest
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FString                 InSessionId                    (Parm, ZeroConstructor)
// struct FEmptyServerReservation ReservationData                (ConstParm, Parm)
// struct FPartyReservation       Reservation                    (Parm)

void AUTPartyBeaconClient::ServerEmptyServerReservationRequest(const struct FString& InSessionId, const struct FEmptyServerReservation& ReservationData, const struct FPartyReservation& Reservation)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPartyBeaconClient.ServerEmptyServerReservationRequest");

	AUTPartyBeaconClient_ServerEmptyServerReservationRequest_Params params;
	params.InSessionId = InSessionId;
	params.ReservationData = ReservationData;
	params.Reservation = Reservation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPartyBeaconClient.ClientAllowedToProceedFromReservationTimeout
// (Net, NetReliable, Native, Event, Public, NetClient)

void AUTPartyBeaconClient::ClientAllowedToProceedFromReservationTimeout()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPartyBeaconClient.ClientAllowedToProceedFromReservationTimeout");

	AUTPartyBeaconClient_ClientAllowedToProceedFromReservationTimeout_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPartyBeaconClient.ClientAllowedToProceedFromReservation
// (Net, NetReliable, Native, Event, Public, NetClient)

void AUTPartyBeaconClient::ClientAllowedToProceedFromReservation()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPartyBeaconClient.ClientAllowedToProceedFromReservation");

	AUTPartyBeaconClient_ClientAllowedToProceedFromReservation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTMutator.TriggerBoost
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)
// Parameters:
// class AUTPlayerState*          Who                            (Parm, ZeroConstructor, IsPlainOldData)

void AUTMutator::TriggerBoost(class AUTPlayerState* Who)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTMutator.TriggerBoost");

	AUTMutator_TriggerBoost_Params params;
	params.Who = Who;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTMutator.ScoreObject
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)
// Parameters:
// class AUTCarriedObject*        GameObject                     (Parm, ZeroConstructor, IsPlainOldData)
// class AUTCharacter*            HolderPawn                     (Parm, ZeroConstructor, IsPlainOldData)
// class AUTPlayerState*          Holder                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   Reason                         (Parm, ZeroConstructor, IsPlainOldData)

void AUTMutator::ScoreObject(class AUTCarriedObject* GameObject, class AUTCharacter* HolderPawn, class AUTPlayerState* Holder, const struct FName& Reason)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTMutator.ScoreObject");

	AUTMutator_ScoreObject_Params params;
	params.GameObject = GameObject;
	params.HolderPawn = HolderPawn;
	params.Holder = Holder;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTMutator.ScoreKill
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)
// Parameters:
// class AController*             Killer                         (Parm, ZeroConstructor, IsPlainOldData)
// class AController*             Other                          (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  DamageType                     (Parm, ZeroConstructor, IsPlainOldData)

void AUTMutator::ScoreKill(class AController* Killer, class AController* Other, class UClass* DamageType)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTMutator.ScoreKill");

	AUTMutator_ScoreKill_Params params;
	params.Killer = Killer;
	params.Other = Other;
	params.DamageType = DamageType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTMutator.ScoreDamage
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)
// Parameters:
// int                            DamageAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// class AUTPlayerState*          Victim                         (Parm, ZeroConstructor, IsPlainOldData)
// class AUTPlayerState*          Attacker                       (Parm, ZeroConstructor, IsPlainOldData)

void AUTMutator::ScoreDamage(int DamageAmount, class AUTPlayerState* Victim, class AUTPlayerState* Attacker)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTMutator.ScoreDamage");

	AUTMutator_ScoreDamage_Params params;
	params.DamageAmount = DamageAmount;
	params.Victim = Victim;
	params.Attacker = Attacker;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTMutator.PreventDeath
// (Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// class APawn*                   KilledPawn                     (Parm, ZeroConstructor, IsPlainOldData)
// class AController*             Killer                         (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  DamageType                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              HitInfo                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTMutator::PreventDeath(class APawn* KilledPawn, class AController* Killer, class UClass* DamageType, const struct FHitResult& HitInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTMutator.PreventDeath");

	AUTMutator_PreventDeath_Params params;
	params.KilledPawn = KilledPawn;
	params.Killer = Killer;
	params.DamageType = DamageType;
	params.HitInfo = HitInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTMutator.PostPlayerInit
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)
// Parameters:
// class AController*             C                              (Parm, ZeroConstructor, IsPlainOldData)

void AUTMutator::PostPlayerInit(class AController* C)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTMutator.PostPlayerInit");

	AUTMutator_PostPlayerInit_Params params;
	params.C = C;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTMutator.ParseOption
// (Final, BlueprintAuthorityOnly, Native, Protected, BlueprintCallable)
// Parameters:
// struct FString                 Options                        (Parm, ZeroConstructor)
// struct FString                 InKey                          (Parm, ZeroConstructor)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString AUTMutator::ParseOption(const struct FString& Options, const struct FString& InKey)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTMutator.ParseOption");

	AUTMutator_ParseOption_Params params;
	params.Options = Options;
	params.InKey = InKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTMutator.OverridePickupQuery
// (BlueprintAuthorityOnly, Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// class APawn*                   Other                          (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  ItemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Pickup                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAllowPickup                   (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTMutator::OverridePickupQuery(class APawn* Other, class UClass* ItemClass, class AActor* Pickup, bool* bAllowPickup)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTMutator.OverridePickupQuery");

	AUTMutator_OverridePickupQuery_Params params;
	params.Other = Other;
	params.ItemClass = ItemClass;
	params.Pickup = Pickup;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (bAllowPickup != nullptr)
		*bAllowPickup = params.bAllowPickup;

	return params.ReturnValue;
}


// Function UnrealTournament.UTMutator.NotifyMatchStateChange
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)
// Parameters:
// struct FName                   NewState                       (Parm, ZeroConstructor, IsPlainOldData)

void AUTMutator::NotifyMatchStateChange(const struct FName& NewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTMutator.NotifyMatchStateChange");

	AUTMutator_NotifyMatchStateChange_Params params;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTMutator.NotifyLogout
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)
// Parameters:
// class AController*             C                              (Parm, ZeroConstructor, IsPlainOldData)

void AUTMutator::NotifyLogout(class AController* C)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTMutator.NotifyLogout");

	AUTMutator_NotifyLogout_Params params;
	params.C = C;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTMutator.Mutate
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 MutateString                   (Parm, ZeroConstructor)
// class APlayerController*       Sender                         (Parm, ZeroConstructor, IsPlainOldData)

void AUTMutator::Mutate(const struct FString& MutateString, class APlayerController* Sender)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTMutator.Mutate");

	AUTMutator_Mutate_Params params;
	params.MutateString = MutateString;
	params.Sender = Sender;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTMutator.ModifyPlayer
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)
// Parameters:
// class APawn*                   Other                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIsNewSpawn                    (Parm, ZeroConstructor, IsPlainOldData)

void AUTMutator::ModifyPlayer(class APawn* Other, bool bIsNewSpawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTMutator.ModifyPlayer");

	AUTMutator_ModifyPlayer_Params params;
	params.Other = Other;
	params.bIsNewSpawn = bIsNewSpawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTMutator.ModifyLogin
// (BlueprintAuthorityOnly, Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FString                 Portal                         (Parm, OutParm, ZeroConstructor, ReferenceParm)
// struct FString                 Options                        (Parm, OutParm, ZeroConstructor, ReferenceParm)

void AUTMutator::ModifyLogin(struct FString* Portal, struct FString* Options)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTMutator.ModifyLogin");

	AUTMutator_ModifyLogin_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Portal != nullptr)
		*Portal = params.Portal;
	if (Options != nullptr)
		*Options = params.Options;
}


// Function UnrealTournament.UTMutator.ModifyInventory
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)
// Parameters:
// class AUTInventory*            Inv                            (Parm, ZeroConstructor, IsPlainOldData)
// class AUTCharacter*            NewOwner                       (Parm, ZeroConstructor, IsPlainOldData)

void AUTMutator::ModifyInventory(class AUTInventory* Inv, class AUTCharacter* NewOwner)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTMutator.ModifyInventory");

	AUTMutator_ModifyInventory_Params params;
	params.Inv = Inv;
	params.NewOwner = NewOwner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTMutator.ModifyDamage
// (BlueprintAuthorityOnly, Native, Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// int                            Damage                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector                 Momentum                       (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// class APawn*                   Injured                        (Parm, ZeroConstructor, IsPlainOldData)
// class AController*             InstigatedBy                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              HitInfo                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  DamageType                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTMutator::ModifyDamage(class APawn* Injured, class AController* InstigatedBy, const struct FHitResult& HitInfo, class AActor* DamageCauser, class UClass* DamageType, int* Damage, struct FVector* Momentum)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTMutator.ModifyDamage");

	AUTMutator_ModifyDamage_Params params;
	params.Injured = Injured;
	params.InstigatedBy = InstigatedBy;
	params.HitInfo = HitInfo;
	params.DamageCauser = DamageCauser;
	params.DamageType = DamageType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Damage != nullptr)
		*Damage = params.Damage;
	if (Momentum != nullptr)
		*Momentum = params.Momentum;

	return params.ReturnValue;
}


// Function UnrealTournament.UTMutator.Init
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 Options                        (Parm, ZeroConstructor)

void AUTMutator::Init(const struct FString& Options)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTMutator.Init");

	AUTMutator_Init_Params params;
	params.Options = Options;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTMutator.HasOption
// (Final, BlueprintAuthorityOnly, Native, Protected, BlueprintCallable)
// Parameters:
// struct FString                 Options                        (Parm, ZeroConstructor)
// struct FString                 InKey                          (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTMutator::HasOption(const struct FString& Options, const struct FString& InKey)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTMutator.HasOption");

	AUTMutator_HasOption_Params params;
	params.Options = Options;
	params.InKey = InKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTMutator.GetIntOption
// (Final, BlueprintAuthorityOnly, Native, Protected, BlueprintCallable)
// Parameters:
// struct FString                 Options                        (Parm, ZeroConstructor)
// struct FString                 ParseString                    (Parm, ZeroConstructor)
// int                            CurrentValue                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AUTMutator::GetIntOption(const struct FString& Options, const struct FString& ParseString, int CurrentValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTMutator.GetIntOption");

	AUTMutator_GetIntOption_Params params;
	params.Options = Options;
	params.ParseString = ParseString;
	params.CurrentValue = CurrentValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTMutator.GetGameURLOptions
// (Native, Event, Public, HasOutParms, BlueprintEvent, Const)
// Parameters:
// TArray<struct FString>         OptionsList                    (Parm, OutParm, ZeroConstructor, ReferenceParm)

void AUTMutator::GetGameURLOptions(TArray<struct FString>* OptionsList)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTMutator.GetGameURLOptions");

	AUTMutator_GetGameURLOptions_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OptionsList != nullptr)
		*OptionsList = params.OptionsList;
}


// Function UnrealTournament.UTMutator.CheckRelevance
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  Other                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTMutator::CheckRelevance(class AActor* Other)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTMutator.CheckRelevance");

	AUTMutator_CheckRelevance_Params params;
	params.Other = Other;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTMutator.AlwaysKeep
// (BlueprintAuthorityOnly, Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// class AActor*                  Other                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bPreventModify                 (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTMutator::AlwaysKeep(class AActor* Other, bool* bPreventModify)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTMutator.AlwaysKeep");

	AUTMutator_AlwaysKeep_Params params;
	params.Other = Other;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (bPreventModify != nullptr)
		*bPreventModify = params.bPreventModify;

	return params.ReturnValue;
}


// Function UnrealTournament.UTMutator.AllowTextMessage
// (Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FString                 Msg                            (Parm, OutParm, ZeroConstructor)
// bool                           bIsTeamMessage                 (Parm, ZeroConstructor, IsPlainOldData)
// class AUTBasePlayerController* Sender                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTMutator::AllowTextMessage(bool bIsTeamMessage, class AUTBasePlayerController* Sender, struct FString* Msg)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTMutator.AllowTextMessage");

	AUTMutator_AllowTextMessage_Params params;
	params.bIsTeamMessage = bIsTeamMessage;
	params.Sender = Sender;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Msg != nullptr)
		*Msg = params.Msg;

	return params.ReturnValue;
}


// Function UnrealTournament.UTMutator.AddDefaultInventory
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  InventoryClass                 (Parm, ZeroConstructor, IsPlainOldData)

void AUTMutator::AddDefaultInventory(class UClass* InventoryClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTMutator.AddDefaultInventory");

	AUTMutator_AddDefaultInventory_Params params;
	params.InventoryClass = InventoryClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPainVolume.AddOverlayMaterials
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class AUTGameState*            GS                             (Parm, ZeroConstructor, IsPlainOldData)

void AUTPainVolume::AddOverlayMaterials(class AUTGameState* GS)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPainVolume.AddOverlayMaterials");

	AUTPainVolume_AddOverlayMaterials_Params params;
	params.GS = GS;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWorldSettings.LevelActorDestroyed
// (Final, Native, Protected)
// Parameters:
// class AActor*                  TheActor                       (Parm, ZeroConstructor, IsPlainOldData)

void AUTWorldSettings::LevelActorDestroyed(class AActor* TheActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWorldSettings.LevelActorDestroyed");

	AUTWorldSettings_LevelActorDestroyed_Params params;
	params.TheActor = TheActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWorldSettings.GetWorldSettings
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class AUTWorldSettings*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AUTWorldSettings* AUTWorldSettings::STATIC_GetWorldSettings(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWorldSettings.GetWorldSettings");

	AUTWorldSettings_GetWorldSettings_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTWorldSettings.AddTimedMaterialParameter
// (BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInstanceDynamic* InMI                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   InParamName                    (Parm, ZeroConstructor, IsPlainOldData)
// class UCurveBase*              InCurve                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bInClearOnComplete             (Parm, ZeroConstructor, IsPlainOldData)

void AUTWorldSettings::AddTimedMaterialParameter(class UMaterialInstanceDynamic* InMI, const struct FName& InParamName, class UCurveBase* InCurve, bool bInClearOnComplete)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWorldSettings.AddTimedMaterialParameter");

	AUTWorldSettings_AddTimedMaterialParameter_Params params;
	params.InMI = InMI;
	params.InParamName = InParamName;
	params.InCurve = InCurve;
	params.bInClearOnComplete = bInClearOnComplete;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWorldSettings.AddTimedLightParameter
// (BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// class ULightComponent*         InLight                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// TEnumAsByte<ETimedLightParameter> InParam                        (Parm, ZeroConstructor, IsPlainOldData)
// class UCurveBase*              InCurve                        (Parm, ZeroConstructor, IsPlainOldData)

void AUTWorldSettings::AddTimedLightParameter(class ULightComponent* InLight, TEnumAsByte<ETimedLightParameter> InParam, class UCurveBase* InCurve)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWorldSettings.AddTimedLightParameter");

	AUTWorldSettings_AddTimedLightParameter_Params params;
	params.InLight = InLight;
	params.InParam = InParam;
	params.InCurve = InCurve;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeaponLocker.WeaponListUpdated
// (Native, Public)

void AUTWeaponLocker::WeaponListUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeaponLocker.WeaponListUpdated");

	AUTWeaponLocker_WeaponListUpdated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeaponLocker.SetWeaponList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FWeaponLockerItem> InList                         (Parm, ZeroConstructor)

void AUTWeaponLocker::SetWeaponList(TArray<struct FWeaponLockerItem> InList)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeaponLocker.SetWeaponList");

	AUTWeaponLocker_SetWeaponList_Params params;
	params.InList = InList;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPickupToken.Revoke
// (Final, Native, Public, BlueprintCallable)

void AUTPickupToken::Revoke()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPickupToken.Revoke");

	AUTPickupToken_Revoke_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPickupToken.PickedUp
// (Final, Native, Public, BlueprintCallable)

void AUTPickupToken::PickedUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPickupToken.PickedUp");

	AUTPickupToken_PickedUp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPickupToken.HasBeenPickedUpBefore
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTPickupToken::HasBeenPickedUpBefore()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPickupToken.HasBeenPickedUpBefore");

	AUTPickupToken_HasBeenPickedUpBefore_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTPowerupSelectorUserWidget.SetPlayerPowerup
// (Final, Native, Public, BlueprintCallable)

void UUTPowerupSelectorUserWidget::SetPlayerPowerup()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPowerupSelectorUserWidget.SetPlayerPowerup");

	UUTPowerupSelectorUserWidget_SetPlayerPowerup_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTPowerupSelectorUserWidget.GetBuyMenuKeyName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UUTPowerupSelectorUserWidget::GetBuyMenuKeyName()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTPowerupSelectorUserWidget.GetBuyMenuKeyName");

	UUTPowerupSelectorUserWidget_GetBuyMenuKeyName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTProj_BioGrenade.StartFuseTimed
// (Native, Public)

void AUTProj_BioGrenade::StartFuseTimed()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTProj_BioGrenade.StartFuseTimed");

	AUTProj_BioGrenade_StartFuseTimed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTProj_BioGrenade.StartFuse
// (Native, Public, BlueprintCallable)

void AUTProj_BioGrenade::StartFuse()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTProj_BioGrenade.StartFuse");

	AUTProj_BioGrenade_StartFuse_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTProj_BioGrenade.ProximityOverlapBegin
// (Native, Public, HasOutParms)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AUTProj_BioGrenade::ProximityOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTProj_BioGrenade.ProximityOverlapBegin");

	AUTProj_BioGrenade_ProximityOverlapBegin_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTProj_BioGrenade.PlayFuseBeep
// (Native, Public)

void AUTProj_BioGrenade::PlayFuseBeep()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTProj_BioGrenade.PlayFuseBeep");

	AUTProj_BioGrenade_PlayFuseBeep_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTProj_BioGrenade.FuseExpired
// (Native, Public)

void AUTProj_BioGrenade::FuseExpired()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTProj_BioGrenade.FuseExpired");

	AUTProj_BioGrenade_FuseExpired_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTProj_BioShot.SetGlobStrength
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          NewStrength                    (Parm, ZeroConstructor, IsPlainOldData)

void AUTProj_BioShot::SetGlobStrength(float NewStrength)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTProj_BioShot.SetGlobStrength");

	AUTProj_BioShot_SetGlobStrength_Params params;
	params.NewStrength = NewStrength;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTProj_BioShot.OnSetGlobStrength
// (Native, Event, Public, BlueprintEvent)

void AUTProj_BioShot::OnSetGlobStrength()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTProj_BioShot.OnSetGlobStrength");

	AUTProj_BioShot_OnSetGlobStrength_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTProj_BioShot.OnRep_GlobStrength
// (Native, Public)

void AUTProj_BioShot::OnRep_GlobStrength()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTProj_BioShot.OnRep_GlobStrength");

	AUTProj_BioShot_OnRep_GlobStrength_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTProj_BioShot.OnRep_BioLanded
// (Native, Public)

void AUTProj_BioShot::OnRep_BioLanded()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTProj_BioShot.OnRep_BioLanded");

	AUTProj_BioShot_OnRep_BioLanded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTProj_BioShot.OnLanded
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void AUTProj_BioShot::OnLanded()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTProj_BioShot.OnLanded");

	AUTProj_BioShot_OnLanded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTProj_BioShot.BioStabilityTimer
// (Native, Public)

void AUTProj_BioShot::BioStabilityTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTProj_BioShot.BioStabilityTimer");

	AUTProj_BioShot_BioStabilityTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTProj_BioLauncherShot.SpawnWebEffects
// (Native, Public)

void AUTProj_BioLauncherShot::SpawnWebEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTProj_BioLauncherShot.SpawnWebEffects");

	AUTProj_BioLauncherShot_SpawnWebEffects_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTProj_BioLauncherShot.PlayWebHitFlash
// (Native, Public)

void AUTProj_BioLauncherShot::PlayWebHitFlash()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTProj_BioLauncherShot.PlayWebHitFlash");

	AUTProj_BioLauncherShot_PlayWebHitFlash_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTProj_BioLauncherShot.OnWebOverlapBegin
// (Native, Public, HasOutParms)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AUTProj_BioLauncherShot::OnWebOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTProj_BioLauncherShot.OnWebOverlapBegin");

	AUTProj_BioLauncherShot_OnWebOverlapBegin_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTProj_RocketGrenade.OnRep_Seed
// (Final, Native, Public)

void AUTProj_RocketGrenade::OnRep_Seed()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTProj_RocketGrenade.OnRep_Seed");

	AUTProj_RocketGrenade_OnRep_Seed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTProj_ShockBall.OnRep_ComboExplosion
// (Final, Native, Public)

void AUTProj_ShockBall::OnRep_ComboExplosion()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTProj_ShockBall.OnRep_ComboExplosion");

	AUTProj_ShockBall_OnRep_ComboExplosion_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTProj_ShockBall.OnComboExplode
// (Native, Event, Public, BlueprintEvent)

void AUTProj_ShockBall::OnComboExplode()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTProj_ShockBall.OnComboExplode");

	AUTProj_ShockBall_OnComboExplode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTProj_TransDisk.OnRep_TransState
// (Native, Public)

void AUTProj_TransDisk::OnRep_TransState()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTProj_TransDisk.OnRep_TransState");

	AUTProj_TransDisk_OnRep_TransState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTProj_TransDisk.OnLanded
// (Native, Event, Public, BlueprintEvent)

void AUTProj_TransDisk::OnLanded()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTProj_TransDisk.OnLanded");

	AUTProj_TransDisk_OnLanded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTProj_TransDisk.OnDisrupted
// (Native, Event, Public, BlueprintEvent)

void AUTProj_TransDisk::OnDisrupted()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTProj_TransDisk.OnDisrupted");

	AUTProj_TransDisk_OnDisrupted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTProj_TransDisk.OnBlockingHit
// (Native, Public, HasOutParms, HasDefaults)
// Parameters:
// class UPrimitiveComponent*     HitComponent                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FVector                 NormalImpulse                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AUTProj_TransDisk::OnBlockingHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTProj_TransDisk.OnBlockingHit");

	AUTProj_TransDisk_OnBlockingHit_Params params;
	params.HitComponent = HitComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTProj_TransDisk.ModifyTakeDamage
// (Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// float                          DamageAmount                   (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FDamageEvent            DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm)
// class AController*             EventInstigator                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void AUTProj_TransDisk::ModifyTakeDamage(const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser, float* DamageAmount)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTProj_TransDisk.ModifyTakeDamage");

	AUTProj_TransDisk_ModifyTakeDamage_Params params;
	params.DamageEvent = DamageEvent;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (DamageAmount != nullptr)
		*DamageAmount = params.DamageAmount;
}


// Function UnrealTournament.UTRconAdminInfo.ServerNoLongerNeeded
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void AUTRconAdminInfo::ServerNoLongerNeeded()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTRconAdminInfo.ServerNoLongerNeeded");

	AUTRconAdminInfo_ServerNoLongerNeeded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTTeamPathBlocker.IsAllowedThrough
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// unsigned char                  TeamNum                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTTeamPathBlocker::IsAllowedThrough(unsigned char TeamNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTTeamPathBlocker.IsAllowedThrough");

	AUTTeamPathBlocker_IsAllowedThrough_Params params;
	params.TeamNum = TeamNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTTeamPathBlocker.GetBlockingComponent
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class USceneComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USceneComponent* AUTTeamPathBlocker::GetBlockingComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTTeamPathBlocker.GetBlockingComponent");

	AUTTeamPathBlocker_GetBlockingComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTRepulsorBubble.ShouldInteractWithActor
// (Final, Native, Public)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTRepulsorBubble::ShouldInteractWithActor(class AActor* OtherActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTRepulsorBubble.ShouldInteractWithActor");

	AUTRepulsorBubble_ShouldInteractWithActor_Params params;
	params.OtherActor = OtherActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTRepulsorBubble.ProcessHitProjectile
// (Final, Native, Protected, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class AUTProjectile*           OtherProj                      (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FVector                 HitLocation                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector                 HitNormal                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void AUTRepulsorBubble::ProcessHitProjectile(class AUTProjectile* OtherProj, class UPrimitiveComponent* OtherComp, const struct FVector& HitLocation, const struct FVector& HitNormal)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTRepulsorBubble.ProcessHitProjectile");

	AUTRepulsorBubble_ProcessHitProjectile_Params params;
	params.OtherProj = OtherProj;
	params.OtherComp = OtherComp;
	params.HitLocation = HitLocation;
	params.HitNormal = HitNormal;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTRepulsorBubble.ProcessHitPlayer
// (Final, Native, Protected, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class AUTCharacter*            OtherPlayer                    (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FVector                 HitLocation                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector                 HitNormal                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void AUTRepulsorBubble::ProcessHitPlayer(class AUTCharacter* OtherPlayer, class UPrimitiveComponent* OtherComp, const struct FVector& HitLocation, const struct FVector& HitNormal)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTRepulsorBubble.ProcessHitPlayer");

	AUTRepulsorBubble_ProcessHitPlayer_Params params;
	params.OtherPlayer = OtherPlayer;
	params.OtherComp = OtherComp;
	params.HitLocation = HitLocation;
	params.HitNormal = HitNormal;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTRepulsorBubble.ProcessHit
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FVector                 HitLocation                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector                 HitNormal                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void AUTRepulsorBubble::ProcessHit(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& HitLocation, const struct FVector& HitNormal)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTRepulsorBubble.ProcessHit");

	AUTRepulsorBubble_ProcessHit_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.HitLocation = HitLocation;
	params.HitNormal = HitNormal;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTRepulsorBubble.OnViewTargetChange
// (Native, Public, BlueprintCallable)
// Parameters:
// class AUTPlayerController*     NewViewTarget                  (Parm, ZeroConstructor, IsPlainOldData)

void AUTRepulsorBubble::OnViewTargetChange(class AUTPlayerController* NewViewTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTRepulsorBubble.OnViewTargetChange");

	AUTRepulsorBubble_OnViewTargetChange_Params params;
	params.NewViewTarget = NewViewTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTRepulsorBubble.OnRep_Health
// (Native, Public)

void AUTRepulsorBubble::OnRep_Health()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTRepulsorBubble.OnRep_Health");

	AUTRepulsorBubble_OnRep_Health_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTRepulsorBubble.OnProjectileHit
// (Native, Event, Public, BlueprintEvent)

void AUTRepulsorBubble::OnProjectileHit()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTRepulsorBubble.OnProjectileHit");

	AUTRepulsorBubble_OnProjectileHit_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTRepulsorBubble.OnOverlapBegin
// (Native, Public, HasOutParms)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AUTRepulsorBubble::OnOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTRepulsorBubble.OnOverlapBegin");

	AUTRepulsorBubble_OnOverlapBegin_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTRepulsorBubble.OnHitScanBlocked
// (Native, Event, Public, BlueprintEvent)

void AUTRepulsorBubble::OnHitScanBlocked()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTRepulsorBubble.OnHitScanBlocked");

	AUTRepulsorBubble_OnHitScanBlocked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTRepulsorBubble.OnCharacterBounce
// (Native, Event, Public, BlueprintEvent)

void AUTRepulsorBubble::OnCharacterBounce()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTRepulsorBubble.OnCharacterBounce");

	AUTRepulsorBubble_OnCharacterBounce_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTRepulsorBubble.BeginPlay
// (Native, Public)

void AUTRepulsorBubble::BeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTRepulsorBubble.BeginPlay");

	AUTRepulsorBubble_BeginPlay_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTTooltipBase.Show
// (Final, Native, Public, BlueprintCallable)

void UUTTooltipBase::Show()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTTooltipBase.Show");

	UUTTooltipBase_Show_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTTooltipBase.OnShow
// (Event, Protected, BlueprintEvent)

void UUTTooltipBase::OnShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTTooltipBase.OnShow");

	UUTTooltipBase_OnShow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTTooltipBase.OnHide
// (Event, Protected, BlueprintEvent)

void UUTTooltipBase::OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTTooltipBase.OnHide");

	UUTTooltipBase_OnHide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTTooltipBase.Hide
// (Final, Native, Public, BlueprintCallable)

void UUTTooltipBase::Hide()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTTooltipBase.Hide");

	UUTTooltipBase_Hide_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTRichText.SetText
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FText                   InText                         (ConstParm, Parm, OutParm, ReferenceParm)

void UUTRichText::SetText(const struct FText& InText)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTRichText.SetText");

	UUTRichText_SetText_Params params;
	params.InText = InText;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTRichText.SetSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EUTWidgetStyleSize> Size                           (Parm, ZeroConstructor, IsPlainOldData)

void UUTRichText::SetSize(TEnumAsByte<EUTWidgetStyleSize> Size)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTRichText.SetSize");

	UUTRichText_SetSize_Params params;
	params.Size = Size;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTRichText.SetInlineIconDisplayMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERichTextInlineIconDisplayMode DisplayMode                    (Parm, ZeroConstructor, IsPlainOldData)

void UUTRichText::SetInlineIconDisplayMode(ERichTextInlineIconDisplayMode DisplayMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTRichText.SetInlineIconDisplayMode");

	UUTRichText_SetInlineIconDisplayMode_Params params;
	params.DisplayMode = DisplayMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTRichText.SetColorType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EUTTextColor>      Color                          (Parm, ZeroConstructor, IsPlainOldData)

void UUTRichText::SetColorType(TEnumAsByte<EUTTextColor> Color)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTRichText.SetColorType");

	UUTRichText_SetColorType_Params params;
	params.Color = Color;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTRichText.Refresh
// (Final, Native, Public, BlueprintCallable)

void UUTRichText::Refresh()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTRichText.Refresh");

	UUTRichText_Refresh_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTRichText.GetStyleSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EUTWidgetStyleSize> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EUTWidgetStyleSize> UUTRichText::GetStyleSize()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTRichText.GetStyleSize");

	UUTRichText_GetStyleSize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTRichText.GetInlineIconColorType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EUTTextColor>      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EUTTextColor> UUTRichText::GetInlineIconColorType()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTRichText.GetInlineIconColorType");

	UUTRichText_GetInlineIconColorType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTRichText.GetColorType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EUTTextColor>      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EUTTextColor> UUTRichText::GetColorType()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTRichText.GetColorType");

	UUTRichText_GetColorType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTSupplyChest.GiveHealth
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AUTCharacter*            Character                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTSupplyChest::GiveHealth(class AUTCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTSupplyChest.GiveHealth");

	AUTSupplyChest_GiveHealth_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTSupplyChest.GiveAmmo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AUTCharacter*            Character                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTSupplyChest::GiveAmmo(class AUTCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTSupplyChest.GiveAmmo");

	AUTSupplyChest_GiveAmmo_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTTeamDeco.ScriptGetTeamNum
// (Event, Public, BlueprintEvent)
// Parameters:
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

unsigned char AUTTeamDeco::ScriptGetTeamNum()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTTeamDeco.ScriptGetTeamNum");

	AUTTeamDeco_ScriptGetTeamNum_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTTeleporter.PostTeleport
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)

void AUTTeleporter::PostTeleport(class AActor* OtherActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTTeleporter.PostTeleport");

	AUTTeleporter_PostTeleport_Params params;
	params.OtherActor = OtherActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTTeleporter.OnOverlapBegin
// (Native, Public)
// Parameters:
// class AActor*                  OverlappingActor               (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)

void AUTTeleporter::OnOverlapBegin(class AActor* OverlappingActor, class AActor* OtherActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTTeleporter.OnOverlapBegin");

	AUTTeleporter_OnOverlapBegin_Params params;
	params.OverlappingActor = OverlappingActor;
	params.OtherActor = OtherActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTTeleporter.CanTeleport
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AUTTeleporter::CanTeleport(class AActor* OtherActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTTeleporter.CanTeleport");

	AUTTeleporter_CanTeleport_Params params;
	params.OtherActor = OtherActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTUMGHudWidget_LocalMessage.InitializeMessage
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UClass*                  inMessageClass                 (Parm, ZeroConstructor, IsPlainOldData)
// int                            inSwitch                       (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerState*            inRelatedPlayerState_2         (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerState*            inRelatedPlayerState_3         (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 inOptionalObject               (Parm, ZeroConstructor, IsPlainOldData)

void UUTUMGHudWidget_LocalMessage::InitializeMessage(class UClass* inMessageClass, int inSwitch, class APlayerState* inRelatedPlayerState_2, class APlayerState* inRelatedPlayerState_3, class UObject* inOptionalObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTUMGHudWidget_LocalMessage.InitializeMessage");

	UUTUMGHudWidget_LocalMessage_InitializeMessage_Params params;
	params.inMessageClass = inMessageClass;
	params.inSwitch = inSwitch;
	params.inRelatedPlayerState_2 = inRelatedPlayerState_2;
	params.inRelatedPlayerState_3 = inRelatedPlayerState_3;
	params.inOptionalObject = inOptionalObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTUMGWidget_Toast.IsTopmostToast
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUTUMGWidget_Toast::IsTopmostToast()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTUMGWidget_Toast.IsTopmostToast");

	UUTUMGWidget_Toast_IsTopmostToast_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTActivatableWidget.OnHandleBackAction
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUTActivatableWidget::OnHandleBackAction()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTActivatableWidget.OnHandleBackAction");

	UUTActivatableWidget_OnHandleBackAction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTActivatableWidget.OnDeactivated
// (Event, Protected, BlueprintEvent)

void UUTActivatableWidget::OnDeactivated()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTActivatableWidget.OnDeactivated");

	UUTActivatableWidget_OnDeactivated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTActivatableWidget.OnActivated
// (Event, Protected, BlueprintEvent)

void UUTActivatableWidget::OnActivated()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTActivatableWidget.OnActivated");

	UUTActivatableWidget_OnActivated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTActivatableWidget.DeactivateWidget
// (Final, Native, Public, BlueprintCallable)

void UUTActivatableWidget::DeactivateWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTActivatableWidget.DeactivateWidget");

	UUTActivatableWidget_DeactivateWidget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTActivatableWidget.ActivateWidget
// (Final, Native, Public, BlueprintCallable)

void UUTActivatableWidget::ActivateWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTActivatableWidget.ActivateWidget");

	UUTActivatableWidget_ActivateWidget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTChestOpeningScreen.SetScreenState
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EUTSpinState                   NewState                       (Parm, ZeroConstructor, IsPlainOldData)

void UUTChestOpeningScreen::SetScreenState(EUTSpinState NewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTChestOpeningScreen.SetScreenState");

	UUTChestOpeningScreen_SetScreenState_Params params;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTChestOpeningScreen.SetItemRarities
// (Event, Protected, BlueprintEvent)
// Parameters:
// EUTItemRarity                  ItemRarity                     (Parm, ZeroConstructor, IsPlainOldData)

void UUTChestOpeningScreen::SetItemRarities(EUTItemRarity ItemRarity)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTChestOpeningScreen.SetItemRarities");

	UUTChestOpeningScreen_SetItemRarities_Params params;
	params.ItemRarity = ItemRarity;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTChestOpeningScreen.OnNextItemShown
// (Event, Protected, BlueprintEvent)
// Parameters:
// EUTItemRarity                  ItemRarity                     (Parm, ZeroConstructor, IsPlainOldData)
// EUTSpinState                   SpinState                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIsFinal                       (Parm, ZeroConstructor, IsPlainOldData)

void UUTChestOpeningScreen::OnNextItemShown(EUTItemRarity ItemRarity, EUTSpinState SpinState, bool bIsFinal)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTChestOpeningScreen.OnNextItemShown");

	UUTChestOpeningScreen_OnNextItemShown_Params params;
	params.ItemRarity = ItemRarity;
	params.SpinState = SpinState;
	params.bIsFinal = bIsFinal;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTChestOpeningScreen.NativeReset
// (Final, Native, Protected, BlueprintCallable)

void UUTChestOpeningScreen::NativeReset()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTChestOpeningScreen.NativeReset");

	UUTChestOpeningScreen_NativeReset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTChestOpeningScreen.FireSpinner
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UUtMcpCardPackItem*      PackToOpen                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FMcpItemIdAndQuantity> RewardArray                    (ConstParm, Parm, ZeroConstructor)

void UUTChestOpeningScreen::FireSpinner(class UUtMcpCardPackItem* PackToOpen, TArray<struct FMcpItemIdAndQuantity> RewardArray)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTChestOpeningScreen.FireSpinner");

	UUTChestOpeningScreen_FireSpinner_Params params;
	params.PackToOpen = PackToOpen;
	params.RewardArray = RewardArray;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTChestOpeningScreen.FinalSpinnerStop
// (Event, Protected, BlueprintEvent)
// Parameters:
// EUTItemRarity                  ItemRarity                     (Parm, ZeroConstructor, IsPlainOldData)

void UUTChestOpeningScreen::FinalSpinnerStop(EUTItemRarity ItemRarity)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTChestOpeningScreen.FinalSpinnerStop");

	UUTChestOpeningScreen_FinalSpinnerStop_Params params;
	params.ItemRarity = ItemRarity;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTChestOpeningScreen.BP_FullReset
// (Event, Protected, BlueprintEvent)

void UUTChestOpeningScreen::BP_FullReset()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTChestOpeningScreen.BP_FullReset");

	UUTChestOpeningScreen_BP_FullReset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTChestOpeningScreen.BeginSpinnerSlowdown
// (Final, Native, Protected, BlueprintCallable)

void UUTChestOpeningScreen::BeginSpinnerSlowdown()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTChestOpeningScreen.BeginSpinnerSlowdown");

	UUTChestOpeningScreen_BeginSpinnerSlowdown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTChestOpeningScreen.BeginOpen
// (Final, Native, Protected, BlueprintCallable)

void UUTChestOpeningScreen::BeginOpen()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTChestOpeningScreen.BeginOpen");

	UUTChestOpeningScreen_BeginOpen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTDefaultButton.UpdateText
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FText                   InText                         (ConstParm, Parm, OutParm, ReferenceParm)

void UUTDefaultButton::UpdateText(const struct FText& InText)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTDefaultButton.UpdateText");

	UUTDefaultButton_UpdateText_Params params;
	params.InText = InText;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTDefaultButton.UpdateSpecificImageSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EUTWidgetStyleSize> Type                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          InSize                         (Parm, ZeroConstructor, IsPlainOldData)

void UUTDefaultButton::UpdateSpecificImageSize(TEnumAsByte<EUTWidgetStyleSize> Type, float InSize)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTDefaultButton.UpdateSpecificImageSize");

	UUTDefaultButton_UpdateSpecificImageSize_Params params;
	params.Type = Type;
	params.InSize = InSize;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTDefaultButton.UpdateIconFromTexture
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTexture2D*              Texture                        (Parm, ZeroConstructor, IsPlainOldData)

void UUTDefaultButton::UpdateIconFromTexture(class UTexture2D* Texture)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTDefaultButton.UpdateIconFromTexture");

	UUTDefaultButton_UpdateIconFromTexture_Params params;
	params.Texture = Texture;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTDefaultButton.UpdateIcon
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FSlateBrush             Brush                          (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           bRetainBrushImageSize          (Parm, ZeroConstructor, IsPlainOldData)

void UUTDefaultButton::UpdateIcon(const struct FSlateBrush& Brush, bool bRetainBrushImageSize)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTDefaultButton.UpdateIcon");

	UUTDefaultButton_UpdateIcon_Params params;
	params.Brush = Brush;
	params.bRetainBrushImageSize = bRetainBrushImageSize;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTDefaultButton.SetNormalContentColor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EUTTextColor>      InNormalTextColor              (Parm, ZeroConstructor, IsPlainOldData)

void UUTDefaultButton::SetNormalContentColor(TEnumAsByte<EUTTextColor> InNormalTextColor)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTDefaultButton.SetNormalContentColor");

	UUTDefaultButton_SetNormalContentColor_Params params;
	params.InNormalTextColor = InNormalTextColor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTDefaultButton.SetHoveredContentColor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EUTTextColor>      InHoveredTextColor             (Parm, ZeroConstructor, IsPlainOldData)

void UUTDefaultButton::SetHoveredContentColor(TEnumAsByte<EUTTextColor> InHoveredTextColor)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTDefaultButton.SetHoveredContentColor");

	UUTDefaultButton_SetHoveredContentColor_Params params;
	params.InHoveredTextColor = InHoveredTextColor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTDefaultButton.RefreshLayout
// (Final, Native, Public, BlueprintCallable)

void UUTDefaultButton::RefreshLayout()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTDefaultButton.RefreshLayout");

	UUTDefaultButton_RefreshLayout_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTGlowingRarityText.SetRarityBP
// (Event, Public, BlueprintEvent)
// Parameters:
// EUTItemRarity                  ItemRarity                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bHideGlowingText               (Parm, ZeroConstructor, IsPlainOldData)

void UUTGlowingRarityText::SetRarityBP(EUTItemRarity ItemRarity, bool bHideGlowingText)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTGlowingRarityText.SetRarityBP");

	UUTGlowingRarityText_SetRarityBP_Params params;
	params.ItemRarity = ItemRarity;
	params.bHideGlowingText = bHideGlowingText;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasicTooltipWidget.UpdateTooltipText
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FText                   NewTooltipText                 (ConstParm, Parm, OutParm, ReferenceParm)

void UUTBasicTooltipWidget::UpdateTooltipText(const struct FText& NewTooltipText)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasicTooltipWidget.UpdateTooltipText");

	UUTBasicTooltipWidget_UpdateTooltipText_Params params;
	params.NewTooltipText = NewTooltipText;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTBasicTooltipWidget.UpdateTitleText
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FText                   NewTitleText                   (ConstParm, Parm, OutParm, ReferenceParm)

void UUTBasicTooltipWidget::UpdateTitleText(const struct FText& NewTitleText)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTBasicTooltipWidget.UpdateTitleText");

	UUTBasicTooltipWidget_UpdateTitleText_Params params;
	params.NewTitleText = NewTitleText;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWaterVolume.GetCurrentFor
// (Native, Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector AUTWaterVolume::GetCurrentFor(class AActor* Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWaterVolume.GetCurrentFor");

	AUTWaterVolume_GetCurrentFor_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTWeapAttachment_BioRifle.SetChargingEffect
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           bNowActive                     (Parm, ZeroConstructor, IsPlainOldData)

void AUTWeapAttachment_BioRifle::SetChargingEffect(bool bNowActive)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeapAttachment_BioRifle.SetChargingEffect");

	AUTWeapAttachment_BioRifle_SetChargingEffect_Params params;
	params.bNowActive = bNowActive;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTAfterImageEffect.StartEffect
// (Event, Public, BlueprintEvent)

void AUTAfterImageEffect::StartEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTAfterImageEffect.StartEffect");

	AUTAfterImageEffect_StartEffect_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTAfterImageEffect.SetMeshProperties
// (Native, Public, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*  DestComp                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AUTAfterImageEffect::SetMeshProperties(class USkeletalMeshComponent* DestComp)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTAfterImageEffect.SetMeshProperties");

	AUTAfterImageEffect_SetMeshProperties_Params params;
	params.DestComp = DestComp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTAfterImageEffect.OnRep_CharMesh
// (Native, Public)

void AUTAfterImageEffect::OnRep_CharMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTAfterImageEffect.OnRep_CharMesh");

	AUTAfterImageEffect_OnRep_CharMesh_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeaponReplacementUserWidget.GetUniqueDisplayName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AUTWeapon*               Weapon                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 PathName                       (Parm, ZeroConstructor)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UUTWeaponReplacementUserWidget::GetUniqueDisplayName(class AUTWeapon* Weapon, const struct FString& PathName)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeaponReplacementUserWidget.GetUniqueDisplayName");

	UUTWeaponReplacementUserWidget_GetUniqueDisplayName_Params params;
	params.Weapon = Weapon;
	params.PathName = PathName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTWeaponReplacementUserWidget.DisplayNameToPathName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 DisplayName                    (Parm, ZeroConstructor)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UUTWeaponReplacementUserWidget::DisplayNameToPathName(const struct FString& DisplayName)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeaponReplacementUserWidget.DisplayNameToPathName");

	UUTWeaponReplacementUserWidget_DisplayNameToPathName_Params params;
	params.DisplayName = DisplayName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function UnrealTournament.UTWeaponReplacementUserWidget.BuildWeaponList
// (Final, Native, Public, BlueprintCallable)

void UUTWeaponReplacementUserWidget::BuildWeaponList()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeaponReplacementUserWidget.BuildWeaponList");

	UUTWeaponReplacementUserWidget_BuildWeaponList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeaponStateFiring_LoopingFire.TransitionBeginToLoopExecute
// (Native, Protected)
// Parameters:
// class UAnimMontage*            AnimMontage                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bWasAnimInterupted             (Parm, ZeroConstructor, IsPlainOldData)

void UUTWeaponStateFiring_LoopingFire::TransitionBeginToLoopExecute(class UAnimMontage* AnimMontage, bool bWasAnimInterupted)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeaponStateFiring_LoopingFire.TransitionBeginToLoopExecute");

	UUTWeaponStateFiring_LoopingFire_TransitionBeginToLoopExecute_Params params;
	params.AnimMontage = AnimMontage;
	params.bWasAnimInterupted = bWasAnimInterupted;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeaponStateFiring_LoopingFire.TransitionBeginToLoopBind
// (Native, Protected)

void UUTWeaponStateFiring_LoopingFire::TransitionBeginToLoopBind()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeaponStateFiring_LoopingFire.TransitionBeginToLoopBind");

	UUTWeaponStateFiring_LoopingFire_TransitionBeginToLoopBind_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeaponStateFiringSpinUp.CooldownFinished
// (Native, Public)

void UUTWeaponStateFiringSpinUp::CooldownFinished()
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeaponStateFiringSpinUp.CooldownFinished");

	UUTWeaponStateFiringSpinUp_CooldownFinished_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function UnrealTournament.UTWeaponStateZooming.ToggleZoomInSound
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           bNowOn                         (Parm, ZeroConstructor, IsPlainOldData)

void UUTWeaponStateZooming::ToggleZoomInSound(bool bNowOn)
{
	static auto fn = UObject::FindObject<UFunction>("Function UnrealTournament.UTWeaponStateZooming.ToggleZoomInSound");

	UUTWeaponStateZooming_ToggleZoomInSound_Params params;
	params.bNowOn = bNowOn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
