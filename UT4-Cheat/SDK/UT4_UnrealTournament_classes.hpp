#pragma once

// Unreal Tournament 4 (Pre Alpha) SDK

#ifdef _MSC_VER
	#pragma pack(push, 0x8)
#endif

namespace Classes
{
//---------------------------------------------------------------------------
//Classes
//---------------------------------------------------------------------------

// Class UnrealTournament.AnimNotify_GroupTauntCascade
// 0x0000 (0x0038 - 0x0038)
class UAnimNotify_GroupTauntCascade : public UAnimNotify
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.AnimNotify_GroupTauntCascade");
		return ptr;
	}

};


// Class UnrealTournament.AnimNotify_TauntPlaySound
// 0x0008 (0x0040 - 0x0038)
class UAnimNotify_TauntPlaySound : public UAnimNotify
{
public:
	class USoundBase*                                  Sound;                                                    // 0x0038(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.AnimNotify_TauntPlaySound");
		return ptr;
	}

};


// Class UnrealTournament.SocialStyleAsset
// 0x6CA8 (0x6CD0 - 0x0028)
class USocialStyleAsset : public UDataAsset
{
public:
	struct FSocialStyle                                Style;                                                    // 0x0028(0x6CA8) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.SocialStyleAsset");
		return ptr;
	}

};


// Class UnrealTournament.StatManager
// 0x0070 (0x0098 - 0x0028)
class UStatManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x58];                                      // 0x0028(0x0058) MISSED OFFSET
	class AUTPlayerState*                              UTPS;                                                     // 0x0080(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0088(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.StatManager");
		return ptr;
	}

};


// Class UnrealTournament.ToolTipWidget
// 0x0000 (0x0028 - 0x0028)
class UToolTipWidget : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.ToolTipWidget");
		return ptr;
	}


	void Show();
	void SetAdditionalContent(class UWidget* Widget);
	void Hide();
};


// Class UnrealTournament.UTPathNode
// 0x0058 (0x0080 - 0x0028)
class UUTPathNode : public UObject
{
public:
	class APhysicsVolume*                              PhysicsVolume;                                            // 0x0028(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FCapsuleSize                                MinPolyEdgeSize;                                          // 0x0030(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<uint64_t>                                   Polys;                                                    // 0x0038(0x0010) (ZeroConstructor)
	TArray<struct FUTPathLink>                         Paths;                                                    // 0x0048(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<class AActor*>                              POIs;                                                     // 0x0058(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               bDestinationOnly;                                         // 0x0068(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0069(0x0003) MISSED OFFSET
	int                                                NearbyKills;                                              // 0x006C(0x0004) (BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData)
	int                                                NearbyDeaths;                                             // 0x0070(0x0004) (BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData)
	int                                                HideAttempts;                                             // 0x0074(0x0004) (BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData)
	float                                              AvgHideDuration;                                          // 0x0078(0x0004) (BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x007C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTPathNode");
		return ptr;
	}

};


// Class UnrealTournament.UTReachSpec
// 0x0018 (0x0040 - 0x0028)
class UUTReachSpec : public UObject
{
public:
	unsigned char                                      UnknownData00[0x14];                                      // 0x0028(0x0014) MISSED OFFSET
	int                                                RepeatFailCount;                                          // 0x003C(0x0004) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTReachSpec");
		return ptr;
	}

};


// Class UnrealTournament.UTRecastNavMesh
// 0x0150 (0x0780 - 0x0630)
class AUTRecastNavMesh : public ARecastNavMesh
{
public:
	TArray<struct FCapsuleSize>                        SizeSteps;                                                // 0x0630(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	float                                              JumpTestThreshold2D;                                      // 0x0640(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0644(0x0004) MISSED OFFSET
	class UClass*                                      ScoutClass;                                               // 0x0648(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DefaultEffectiveJumpZ;                                    // 0x0650(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x0654(0x000C) MISSED OFFSET
	TArray<class UUTPathNode*>                         PathNodes;                                                // 0x0660(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData02[0x50];                                      // 0x0670(0x0050) MISSED OFFSET
	TArray<class UUTReachSpec*>                        AllReachSpecs;                                            // 0x06C0(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData03[0xA2];                                      // 0x06D0(0x00A2) MISSED OFFSET
	bool                                               bNeedsRebuild;                                            // 0x0772(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0xD];                                       // 0x0773(0x000D) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTRecastNavMesh");
		return ptr;
	}

};


// Class UnrealTournament.UTTeamInterface
// 0x0000 (0x0028 - 0x0028)
class UUTTeamInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTTeamInterface");
		return ptr;
	}


	void SetTeamForSideSwap(unsigned char NewTeamNum);
	unsigned char ScriptGetTeamNum();
};


// Class UnrealTournament.UTBot
// 0x03D0 (0x0850 - 0x0480)
class AUTBot : public AAIController
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0480(0x0008) MISSED OFFSET
	float                                              TacticalHeightAdvantage;                                  // 0x0488(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x048C(0x0004) MISSED OFFSET
	class UUTBotCharacter*                             CharacterData;                                            // 0x0490(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FBotPersonality                             Personality;                                              // 0x0498(0x0028) (BlueprintVisible)
	float                                              Skill;                                                    // 0x04C0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TrackingReactionTime;                                     // 0x04C4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TrackingInterpTime;                                       // 0x04C8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TrackingTimeStamp;                                        // 0x04CC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxTrackingPredictionError;                               // 0x04D0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TrackingPredictionError;                                  // 0x04D4(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MaxTrackingOffsetError;                                   // 0x04D8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DirectionChangeOffsetPct;                                 // 0x04DC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AdjustedMaxTrackingOffsetError;                           // 0x04E0(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              TrackingOffsetError;                                      // 0x04E4(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bLargeTrackedVelocityChange;                              // 0x04E8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x04E9(0x0003) MISSED OFFSET
	float                                              TrackingErrorUpdateInterval;                              // 0x04EC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TrackingErrorUpdateTime;                                  // 0x04F0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StoppedOffsetErrorReduction;                              // 0x04F4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BothStoppedOffsetErrorReduction;                          // 0x04F8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SightRadius;                                              // 0x04FC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PeripheralVision;                                         // 0x0500(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              HearingRadiusMult;                                        // 0x0504(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bSlowerZAcquire;                                          // 0x0508(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bLeadTarget;                                              // 0x0509(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x050A(0x0002) MISSED OFFSET
	float                                              RespawnPredictionTime;                                    // 0x050C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    RotationRate;                                             // 0x0510(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bSeeFriendly;                                             // 0x051C(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x051D(0x0003) MISSED OFFSET
	float                                              ImpactJumpZ;                                              // 0x0520(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bHasTranslocator;                                         // 0x0524(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0525(0x0003) MISSED OFFSET
	class AUTProjectile*                               TransDiscTemplate;                                        // 0x0528(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TranslocInterval;                                         // 0x0530(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LastTranslocTime;                                         // 0x0534(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     TranslocTarget;                                           // 0x0538(0x000C) (ZeroConstructor, IsPlainOldData)
	bool                                               bUseSerpentineMovement;                                   // 0x0544(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bFinishRotation;                                          // 0x0545(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bRestrictedJump;                                          // 0x0546(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x1];                                       // 0x0547(0x0001) MISSED OFFSET
	float                                              CurrentAggression;                                        // 0x0548(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                UsingSquadRouteIndex;                                     // 0x054C(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bDisableSquadRoutes;                                      // 0x0550(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x7];                                       // 0x0551(0x0007) MISSED OFFSET
	struct FRouteCacheItem                             SquadRouteGoal;                                           // 0x0558(0x0028)
	class APawn*                                       HuntingTarget;                                            // 0x0580(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<struct FVector>                             HuntingCheckedSpots;                                      // 0x0588(0x0010) (ZeroConstructor)
	class UUTPathNode*                                 HuntingInterceptNode;                                     // 0x0598(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              HuntInterceptFailedTime;                                  // 0x05A0(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x4];                                       // 0x05A4(0x0004) MISSED OFFSET
	struct FString                                     GoalString;                                               // 0x05A8(0x0010) (ZeroConstructor)
	float                                              LastUnderFireTime;                                        // 0x05B8(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LastDeathTime;                                            // 0x05BC(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LastRespawnTime;                                          // 0x05C0(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x5C];                                      // 0x05C4(0x005C) MISSED OFFSET
	class UUTAIAction*                                 CurrentAction;                                            // 0x0620(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FRouteCacheItem                             MoveTarget;                                               // 0x0628(0x0028)
	struct FRouteCacheItem                             PrevMoveTarget;                                           // 0x0650(0x0028)
	int                                                RepeatMoveFailCount;                                      // 0x0678(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0x4];                                       // 0x067C(0x0004) MISSED OFFSET
	struct FUTPathLink                                 CurrentPath;                                              // 0x0680(0x0058)
	unsigned char                                      UnknownData11[0x10];                                      // 0x06D8(0x0010) MISSED OFFSET
	struct FVector                                     LastReachedMovePoint;                                     // 0x06E8(0x000C) (ZeroConstructor, IsPlainOldData)
	bool                                               bAdjusting;                                               // 0x06F4(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData12[0x3];                                       // 0x06F5(0x0003) MISSED OFFSET
	struct FVector                                     AdjustLoc;                                                // 0x06F8(0x000C) (ZeroConstructor, IsPlainOldData)
	float                                              SerpentineDir;                                            // 0x0704(0x0004) (ZeroConstructor, IsPlainOldData)
	TArray<class AUTAvoidMarker*>                      FearSpots;                                                // 0x0708(0x0010) (ZeroConstructor)
	float                                              MoveTimer;                                                // 0x0718(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData13[0x4];                                       // 0x071C(0x0004) MISSED OFFSET
	TArray<struct FRouteCacheItem>                     RouteCache;                                               // 0x0720(0x0010) (ZeroConstructor)
	unsigned char                                      NextFireMode;                                             // 0x0730(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData14[0x7];                                       // 0x0731(0x0007) MISSED OFFSET
	class AUTProjectile*                               WarningProj;                                              // 0x0738(0x0008) (ZeroConstructor, IsPlainOldData)
	class AUTCharacter*                                WarningShooter;                                           // 0x0740(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData15[0x8];                                       // 0x0748(0x0008) MISSED OFFSET
	TArray<struct FBotEnemyInfo>                       LocalEnemyList;                                           // 0x0750(0x0010) (ZeroConstructor)
	float                                              LastPickEnemyTime;                                        // 0x0760(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData16[0x4];                                       // 0x0764(0x0004) MISSED OFFSET
	TArray<struct FBotEnemyRating>                     LastPickEnemyRatings;                                     // 0x0768(0x0010) (ZeroConstructor)
	class AUTCharacter*                                UTChar;                                                   // 0x0778(0x0008) (ZeroConstructor, IsPlainOldData)
	class AUTSquadAI*                                  Squad;                                                    // 0x0780(0x0008) (ZeroConstructor, IsPlainOldData)
	class AUTRecastNavMesh*                            NavData;                                                  // 0x0788(0x0008) (ZeroConstructor, IsPlainOldData)
	class APawn*                                       Enemy;                                                    // 0x0790(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LastEnemyChangeTime;                                      // 0x0798(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData17[0x4];                                       // 0x079C(0x0004) MISSED OFFSET
	class AActor*                                      Target;                                                   // 0x07A0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData18[0x18];                                      // 0x07A8(0x0018) MISSED OFFSET
	class AActor*                                      BlockedAimTarget;                                         // 0x07C0(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData19[0x14];                                      // 0x07C8(0x0014) MISSED OFFSET
	struct FVector                                     FinalFocalPoint;                                          // 0x07DC(0x000C) (ZeroConstructor, IsPlainOldData)
	class AUTDefensePoint*                             DefensePoint;                                             // 0x07E8(0x0008) (ZeroConstructor, IsPlainOldData)
	class UUTAIAction*                                 WaitForMoveAction;                                        // 0x07F0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUTAIAction*                                 WaitForLandingAction;                                     // 0x07F8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUTAIAction*                                 RangedAttackAction;                                       // 0x0800(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUTAIAction*                                 TacticalMoveAction;                                       // 0x0808(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUTAIAction*                                 ChargeAction;                                             // 0x0810(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUTAIAction*                                 CampAction;                                               // 0x0818(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData20[0x30];                                      // 0x0820(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTBot");
		return ptr;
	}


	void WhatToDoNext();
	void UpdateEnemyInfo(class APawn* NewEnemy, TEnumAsByte<EAIEnemyUpdateType> UpdateType);
	void SetTarget(class AActor* NewTarget);
	void SetEnemy(class APawn* NewEnemy);
	void ReceiveProjWarning(class AUTProjectile* Incoming);
	void ReceiveInstantWarning(class AUTCharacter* Shooter, const struct FVector& FireDir);
	void ProcessIncomingWarning();
	void PostMovementUpdate(float DeltaTime, const struct FVector& OldLocation, const struct FVector& OldVelocity);
	void PickNewEnemy();
	void NotifyBump(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void CheckWeaponFiringTimed();
	void ApplyCrouch();
	void AddFearSpot(class AUTAvoidMarker* NewSpot);
};


// Class UnrealTournament.UTAIAction
// 0x0000 (0x0028 - 0x0028)
class UUTAIAction : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTAIAction");
		return ptr;
	}

};


// Class UnrealTournament.UTPathBuilderInterface
// 0x0000 (0x0028 - 0x0028)
class UUTPathBuilderInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTPathBuilderInterface");
		return ptr;
	}

};


// Class UnrealTournament.UTDefensePoint
// 0x0030 (0x03B8 - 0x0388)
class AUTDefensePoint : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0388(0x0008) MISSED OFFSET
	class AUTGameObjective*                            Objective;                                                // 0x0390(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	int                                                BasePriority;                                             // 0x0398(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bSniperSpot;                                              // 0x039C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x039D(0x0003) MISSED OFFSET
	class AUTBot*                                      CurrentUser;                                              // 0x03A0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UBillboardComponent*                         Icon;                                                     // 0x03A8(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UUTPathNode*                                 MyNode;                                                   // 0x03B0(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTDefensePoint");
		return ptr;
	}


	int GetPriorityFor(class AUTBot* B);
};


// Class UnrealTournament.UTAIAction_Camp
// 0x0008 (0x0030 - 0x0028)
class UUTAIAction_Camp : public UUTAIAction
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTAIAction_Camp");
		return ptr;
	}

};


// Class UnrealTournament.UTAIAction_RangedAttack
// 0x0008 (0x0030 - 0x0028)
class UUTAIAction_RangedAttack : public UUTAIAction
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTAIAction_RangedAttack");
		return ptr;
	}


	void FirstShotTimer();
	void EndTimer();
};


// Class UnrealTournament.UTAIAction_TacticalMove
// 0x0020 (0x0048 - 0x0028)
class UUTAIAction_TacticalMove : public UUTAIAction
{
public:
	float                                              MinStrafeDist;                                            // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1C];                                      // 0x002C(0x001C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTAIAction_TacticalMove");
		return ptr;
	}


	void StartFinalMove();
	void FinalWaitFinished();
};


// Class UnrealTournament.UTAIAction_WaitForLanding
// 0x0000 (0x0028 - 0x0028)
class UUTAIAction_WaitForLanding : public UUTAIAction
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTAIAction_WaitForLanding");
		return ptr;
	}

};


// Class UnrealTournament.UTAIAction_WaitForMove
// 0x0008 (0x0030 - 0x0028)
class UUTAIAction_WaitForMove : public UUTAIAction
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTAIAction_WaitForMove");
		return ptr;
	}

};


// Class UnrealTournament.UTAIAction_Charge
// 0x0000 (0x0030 - 0x0030)
class UUTAIAction_Charge : public UUTAIAction_WaitForMove
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTAIAction_Charge");
		return ptr;
	}

};


// Class UnrealTournament.UTAnalyticsBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class UUTAnalyticsBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTAnalyticsBlueprintLibrary");
		return ptr;
	}


	bool STATIC_StartSessionWithAttributes(TArray<struct FUTAnalyticsEventAttr> Attributes);
	bool STATIC_StartSession();
	void STATIC_SetUserId(const struct FString& UserId);
	void STATIC_SetSessionId(const struct FString& SessionId);
	void STATIC_SetLocation(const struct FString& Location);
	void STATIC_SetGender(const struct FString& Gender);
	void STATIC_SetBuildInfo(const struct FString& BuildInfo);
	void STATIC_SetAge(int Age);
	void STATIC_RecordSimpleItemPurchaseWithAttributes(const struct FString& ItemId, int ItemQuantity, TArray<struct FUTAnalyticsEventAttr> Attributes);
	void STATIC_RecordSimpleItemPurchase(const struct FString& ItemId, int ItemQuantity);
	void STATIC_RecordSimpleCurrencyPurchaseWithAttributes(const struct FString& GameCurrencyType, int GameCurrencyAmount, TArray<struct FUTAnalyticsEventAttr> Attributes);
	void STATIC_RecordSimpleCurrencyPurchase(const struct FString& GameCurrencyType, int GameCurrencyAmount);
	void STATIC_RecordProgressWithFullHierarchyAndAttributes(const struct FString& ProgressType, TArray<struct FString> ProgressNames, TArray<struct FUTAnalyticsEventAttr> Attributes);
	void STATIC_RecordProgressWithAttributes(const struct FString& ProgressType, const struct FString& ProgressName, TArray<struct FUTAnalyticsEventAttr> Attributes);
	void STATIC_RecordProgress(const struct FString& ProgressType, const struct FString& ProgressName);
	void STATIC_RecordItemPurchase(const struct FString& ItemId, const struct FString& Currency, int PerItemCost, int ItemQuantity);
	void STATIC_RecordEventWithAttributes(const struct FString& EventName, TArray<struct FUTAnalyticsEventAttr> Attributes);
	void STATIC_RecordEventWithAttribute(const struct FString& EventName, const struct FString& AttributeName, const struct FString& AttributeValue);
	void STATIC_RecordEvent(const struct FString& EventName);
	void STATIC_RecordErrorWithAttributes(const struct FString& Error, TArray<struct FUTAnalyticsEventAttr> Attributes);
	void STATIC_RecordError(const struct FString& Error);
	void STATIC_RecordCurrencyPurchase(const struct FString& GameCurrencyType, int GameCurrencyAmount, const struct FString& RealCurrencyType, float RealMoneyCost, const struct FString& PaymentProvider);
	void STATIC_RecordCurrencyGivenWithAttributes(const struct FString& GameCurrencyType, int GameCurrencyAmount, TArray<struct FUTAnalyticsEventAttr> Attributes);
	void STATIC_RecordCurrencyGiven(const struct FString& GameCurrencyType, int GameCurrencyAmount);
	struct FUTAnalyticsEventAttr STATIC_MakeEventAttribute(const struct FString& AttributeName, const struct FString& AttributeValue);
	struct FString STATIC_GetUserId();
	struct FString STATIC_GetSessionId();
	void STATIC_FlushEvents();
	void STATIC_EndSession();
};


// Class UnrealTournament.UTBasePlayerController
// 0x0138 (0x07F0 - 0x06B8)
class AUTBasePlayerController : public APlayerController
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x06B8(0x0008) MISSED OFFSET
	class AUTPlayerState*                              UTPlayerState;                                            // 0x06C0(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xD0];                                      // 0x06C8(0x00D0) MISSED OFFSET
	class AUTServerBeaconClient*                       PingBeacon;                                               // 0x0798(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x30];                                      // 0x07A0(0x0030) MISSED OFFSET
	TEnumAsByte<EInputMode>                            InputMode;                                                // 0x07D0(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x1];                                       // 0x07D1(0x0001) MISSED OFFSET
	bool                                               bSpectatorMouseChangesView;                               // 0x07D2(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0xD];                                       // 0x07D3(0x000D) MISSED OFFSET
	class UUTHeartbeatManager*                         HeartbeatManager;                                         // 0x07E0(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x8];                                       // 0x07E8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTBasePlayerController");
		return ptr;
	}


	void UTLogOut();
	void UTDumpPartyState();
	void UTDumpOnlineSessionState();
	void TeamTalk();
	void TeamSay(const struct FString& Message);
	void Talk();
	void StopVOIPTalking();
	void StartVOIPTalking();
	void ShowMenu(const struct FString& Parameters);
	void SetLoadingMovieToPlay(const struct FString& MoviePath, bool bSuppressLoadingText);
	void ServerSetAvatar(const struct FName& newAvatar);
	void ServerSay(const struct FString& Message, bool bTeamMessage);
	void ServerReceiveStatsID(const struct FString& NewStatsID);
	void ServerReceiveStars(int TotalStars);
	void ServerReceiveCosmetics(const struct FString& CosmeticString);
	void ServerRconUnban(const struct FString& UIDStr);
	void ServerRconNormal();
	void ServerRconMessage(const struct FString& DestinationId, const struct FString& Message);
	void ServerRconKick(const struct FString& NameOrUIDStr, bool bBan, const struct FString& Reason);
	void ServerRconExec(const struct FString& Command);
	void ServerRconDBExec(const struct FString& Command);
	void ServerRconAuth(const struct FString& Password);
	void ServerLobbySay(const struct FString& Message);
	void ServerFriendSay(const struct FString& Message, TArray<struct FUniqueNetIdRepl> FriendIds);
	void ServerDebugTest(const struct FString& TestCommand);
	void ServerChangeClanName(const struct FString& S);
	void Say(const struct FString& Message);
	void SaveProfileSettings();
	void RepeatTutorial();
	void RconUnban(const struct FString& UIDStr);
	void RconNormal();
	void RconMessage(const struct FString& DestinationId, const struct FString& Message);
	void RconKick(const struct FString& NameOrUIDStr, bool bBan, const struct FString& Reason);
	void RconExec(const struct FString& Command);
	void RconDBExec(const struct FString& Command);
	void RconAuth(const struct FString& Password);
	void PrevTutorial();
	void NextTutorial();
	void MarkTutorialAsCompleted(int TutorialMask);
	void LobbySay(const struct FString& Message);
	void LaunchTutorial(const struct FName& TutorialName);
	bool IsPlayerGameMuted(class AUTPlayerState* PlayerToCheck);
	void ImportKeyBinds();
	void HideMenu();
	void GuaranteedKick(const struct FText& KickReason, bool bKickToHubIfPossible);
	class UUTLocalPlayer* GetUTLocalPlayer();
	struct FText GetTutorialSectionText(TEnumAsByte<ETutorialSections> Section);
	class UUTProfileSettings* GetProfileSettings();
	struct FText GetPrevTutorialName();
	struct FText GetNextTutorialName();
	void FriendSay(const struct FString& Message);
	void ExportKeyBinds();
	void ExportGameRulesets(const struct FString& Filename);
	void DebugTest(const struct FString& TestCommand);
	void ClientStopMovie();
	void ClientSetPresence(const struct FString& NewPresenceString, bool bAllowInvites, bool bAllowJoinInProgress, bool bAllowJoinViaPresence, bool bAllowJoinViaPresenceFriendsOnly);
	void ClientSay(class AUTPlayerState* Speaker, const struct FString& Message, const struct FName& Destination);
	void ClientReturnToLobby(bool bKicked, bool bIdle);
	void ClientReturnedToMenus();
	void ClientRequireContentItemListComplete();
	void ClientRequireContentItemListBegin(const struct FString& CloudId);
	void ClientRequireContentItem(const struct FString& PakFile, const struct FString& MD5);
	void ClientRankedGameAbandoned();
	void ClientPlayMovie(const struct FString& MovieName);
	void ClientMatchmakingGameComplete();
	void ClientGenericInitialization();
	void ClientCloseAllUI(bool bExceptDialogs);
	void ClanName(const struct FString& S);
	bool AreMenusOpen();
	void ApplyProfileSettings();
};


// Class UnrealTournament.UTPlayerController
// 0x0470 (0x0C60 - 0x07F0)
class AUTPlayerController : public AUTBasePlayerController
{
public:
	class UClass*                                      HUDClass;                                                 // 0x07F0(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class AUTHUD*                                      MyUTHUD;                                                  // 0x07F8(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FStringClassReference                       AnnouncerPath;                                            // 0x0800(0x0010) (BlueprintVisible, ZeroConstructor, Config)
	class UUTAnnouncer*                                Announcer;                                                // 0x0810(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  ChatMsgSound;                                             // 0x0818(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  BoostActivateSound;                                       // 0x0820(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  StartRallySound;                                          // 0x0828(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCustomSoundAmplification                   FootStepAmp;                                              // 0x0830(0x0040) (BlueprintVisible)
	struct FCustomSoundAmplification                   PainSoundAmp;                                             // 0x0870(0x0040) (BlueprintVisible)
	struct FCustomSoundAmplification                   WeaponFireAmp;                                            // 0x08B0(0x0040) (BlueprintVisible)
	struct FCustomSoundAmplification                   WeaponFoleyAmp;                                           // 0x08F0(0x0040) (BlueprintVisible)
	class USoundClass*                                 PriorityFXSoundClass;                                     // 0x0930(0x0008) (ZeroConstructor, IsPlainOldData)
	bool                                               bHearsTaunts;                                             // 0x0938(0x0001) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0939(0x0003) MISSED OFFSET
	float                                              LastSameTeamTime;                                         // 0x093C(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bNeedsRallyNotify;                                        // 0x0940(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bNeedsBoostNotify;                                        // 0x0941(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0942(0x0002) MISSED OFFSET
	float                                              EndRallyTime;                                             // 0x0944(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FRotator                                    SpawnRotation;                                            // 0x0948(0x000C) (ZeroConstructor, IsPlainOldData)
	float                                              ScoreboardDelayOnDeath;                                   // 0x0954(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0958(0x0008) MISSED OFFSET
	class USoundBase*                                  BadSelectSound;                                           // 0x0960(0x0008) (ZeroConstructor, IsPlainOldData)
	bool                                               bAllowPlayingBehindView;                                  // 0x0968(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bShowNetInfo;                                             // 0x0969(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x6];                                       // 0x096A(0x0006) MISSED OFFSET
	class UUTHUDWidget_NetInfo*                        NetInfoWidget;                                            // 0x0970(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              LastGoalYaw;                                              // 0x0978(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              ViewProjectileTime;                                       // 0x097C(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bAutoCam;                                                 // 0x0980(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bTacComView;                                              // 0x0981(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x2];                                       // 0x0982(0x0002) MISSED OFFSET
	float                                              LeftSpawnVolumeTime;                                      // 0x0984(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              WeaponBobGlobalScaling;                                   // 0x0988(0x0004) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	float                                              EyeOffsetGlobalScaling;                                   // 0x098C(0x0004) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	bool                                               bCrouchTriggersSlide;                                     // 0x0990(0x0001) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	bool                                               bSingleTapWallDodge;                                      // 0x0991(0x0001) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	bool                                               bSingleTapAfterJump;                                      // 0x0992(0x0001) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	unsigned char                                      UnknownData05[0x1];                                       // 0x0993(0x0001) MISSED OFFSET
	int                                                StylizedPPIndex;                                          // 0x0994(0x0004) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	bool                                               bSpectateBehindView;                                      // 0x0998(0x0001) (BlueprintVisible, ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	bool                                               bPlayBehindView;                                          // 0x0999(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bRequestingSlideOut;                                      // 0x099A(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bShowCameraBinds;                                         // 0x099B(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bShowPowerupTimers;                                       // 0x099C(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x099D(0x0003) MISSED OFFSET
	float                                              ConfigDefaultFOV;                                         // 0x09A0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	struct FLinearColor                                FFAPlayerColor;                                           // 0x09A4(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	unsigned char                                      UnknownData07[0x8];                                       // 0x09B4(0x0008) MISSED OFFSET
	struct FVector2D                                   SavedMouseCursorLocation;                                 // 0x09BC(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x4];                                       // 0x09C4(0x0004) MISSED OFFSET
	class AUTPlayerState*                              LastSpectatedPlayerState;                                 // 0x09C8(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                LastSpectatedPlayerId;                                    // 0x09D0(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x4];                                       // 0x09D4(0x0004) MISSED OFFSET
	class USoundBase*                                  SelectSound;                                              // 0x09D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PredictionFudgeFactor;                                    // 0x09E0(0x0004) (Edit, Net, ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	float                                              MaxPredictionPing;                                        // 0x09E4(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              DesiredPredictionPing;                                    // 0x09E8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	bool                                               bIsDebuggingProjectiles;                                  // 0x09EC(0x0001) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	unsigned char                                      UnknownData10[0x3];                                       // 0x09ED(0x0003) MISSED OFFSET
	TArray<class AUTProjectile*>                       FakeProjectiles;                                          // 0x09F0(0x0010) (ZeroConstructor)
	float                                              LastPingCalcTime;                                         // 0x0A00(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData11[0x4];                                       // 0x0A04(0x0004) MISSED OFFSET
	class APawn*                                       LastShotTargetGuess;                                      // 0x0A08(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bCastingGuide;                                            // 0x0A10(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData12[0x3];                                       // 0x0A11(0x0003) MISSED OFFSET
	int                                                CastingGuideViewIndex;                                    // 0x0A14(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	TArray<struct FString>                             CastingGuideStartupCommands;                              // 0x0A18(0x0010) (ZeroConstructor, Config)
	bool                                               bVoiceChatSentLogin;                                      // 0x0A28(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData13[0x7];                                       // 0x0A29(0x0007) MISSED OFFSET
	struct FString                                     VoiceChatPlayerName;                                      // 0x0A30(0x0010) (Net, ZeroConstructor)
	struct FString                                     VoiceChatLoginToken;                                      // 0x0A40(0x0010) (Net, ZeroConstructor)
	struct FString                                     VoiceChatJoinToken;                                       // 0x0A50(0x0010) (Net, ZeroConstructor)
	struct FString                                     VoiceChatChannel;                                         // 0x0A60(0x0010) (Net, ZeroConstructor)
	struct FString                                     VoiceChatJoinTokenCurrent;                                // 0x0A70(0x0010) (ZeroConstructor)
	struct FString                                     VoiceChatChannelCurrent;                                  // 0x0A80(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData14[0x10];                                      // 0x0A90(0x0010) MISSED OFFSET
	class AActor*                                      FinalViewTarget;                                          // 0x0AA0(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData15[0x50];                                      // 0x0AA8(0x0050) MISSED OFFSET
	float                                              BaseTurnRate;                                             // 0x0AF8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              BaseLookUpRate;                                           // 0x0AFC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              MovementForwardAxis;                                      // 0x0B00(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              MovementStrafeAxis;                                       // 0x0B04(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              KillerSpectateDelay;                                      // 0x0B08(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              MaxDodgeClickTime;                                        // 0x0B0C(0x0004) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	float                                              MaxDodgeTapTime;                                          // 0x0B10(0x0004) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	float                                              LastWeaponPrevNextTime;                                   // 0x0B14(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LastTapLeftTime;                                          // 0x0B18(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LastTapRightTime;                                         // 0x0B1C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LastTapForwardTime;                                       // 0x0B20(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LastTapBackTime;                                          // 0x0B24(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bRequestedDodge;                                          // 0x0B28(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsHoldingFloorSlide;                                     // 0x0B29(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData16[0x22];                                      // 0x0B2A(0x0022) MISSED OFFSET
	float                                              TimeToHoldPowerUpButtonToActivate;                        // 0x0B4C(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData17[0x4];                                       // 0x0B50(0x0004) MISSED OFFSET
	float                                              BuyMenuToggleDelay;                                       // 0x0B54(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData18[0x60];                                      // 0x0B58(0x0060) MISSED OFFSET
	class AUTPlayerState*                              CurrentlyViewedScorePS;                                   // 0x0BB8(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                TeamStatsUpdateTeam;                                      // 0x0BC0(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                TeamStatsUpdateIndex;                                     // 0x0BC4(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LastTeamStatsUpdateStartTime;                             // 0x0BC8(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                StatsUpdateIndex;                                         // 0x0BCC(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LastScoreStatsUpdateStartTime;                            // 0x0BD0(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      CurrentlyViewedStatsTab;                                  // 0x0BD4(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bBadgeChanged;                                            // 0x0BD5(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData19[0xA];                                       // 0x0BD6(0x000A) MISSED OFFSET
	TArray<struct FName>                               PlayedTutAnnouncements;                                   // 0x0BE0(0x0010) (ZeroConstructor)
	class AUTCharacter*                                PreGhostChar;                                             // 0x0BF0(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FXPBreakdown                                XPBreakdown;                                              // 0x0BF8(0x0014) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData20[0x4];                                       // 0x0C0C(0x0004) MISSED OFFSET
	TArray<class UUTProfileItem*>                      LevelRewards;                                             // 0x0C10(0x0010) (ZeroConstructor)
	bool                                               bUseAltSpawnPoint;                                        // 0x0C20(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData21[0x17];                                      // 0x0C21(0x0017) MISSED OFFSET
	class AActor*                                      DeathCamFocus;                                            // 0x0C38(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              DeathCamTime;                                             // 0x0C40(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData22[0x14];                                      // 0x0C44(0x0014) MISSED OFFSET
	int                                                LastComMessageSwitch;                                     // 0x0C58(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LastComMessageTime;                                       // 0x0C5C(0x0004) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTPlayerController");
		return ptr;
	}


	void VoiceDebug(const struct FString& Command);
	void VoiceChatReconnected();
	void VoiceChatChannelJoinFailed();
	void ViewProjectile();
	void ViewPowerup(const struct FString& PowerupName);
	void ViewPlayerNum(int Index, unsigned char TeamNum);
	void ViewNextPlayer();
	void ViewFlag(unsigned char Index);
	void ViewClosestVisiblePlayer();
	void ViewCamera(int Index);
	void UTDemoPause();
	void UTClientSetRotation(const struct FRotator& NewRotation);
	void UTClientPlaySound(class USoundBase* Sound);
	void UTBugIt(const struct FString& ScreenShotDescription);
	void ToggleTacCom();
	void ToggleSlideOut();
	void ToggleSingleTap();
	void ToggleShowTimers();
	void ToggleShowDamage();
	void ToggleShowBinds();
	void ToggleScoreboard(bool bShow);
	void TogglePlayerInfo();
	void ToggleMinimap();
	void ToggleBehindView();
	void ThrowWeapon();
	void TestVote();
	void TestCallstack();
	void SwitchWeaponGroup(int Group);
	void SwitchWeapon(int Group);
	void SwitchToBestWeapon();
	void Suicide();
	void StopDropCarriedObject();
	void StartCastingGuide();
	void SlowerEmote();
	void SkullPickedUp();
	void ShowWeaponWheel();
	void ShowDropMenu();
	void ShowComsMenu();
	void SetWeaponHand(EWeaponHand NewHand);
	void SetWeaponBobScaling(float NewScaling);
	void SetViewedScorePS(class AUTPlayerState* ViewedPS, unsigned char NewStatsPage);
	void SetStylizedPP(int NewPP);
	void SetMouseSensitivityUT(float NewSensitivity);
	void SetMouseAccelPower(float NewAccelPower);
	void SetMouseAccelOffset(float NewAccelOffset);
	void SetMouseAccelMax(float NewAccelMax);
	void SetMouseAccel(float NewAccel);
	void SetGamepadSensitivityRight(float NewSensitivity);
	void SetGamepadSensitivityLeft(float NewSensitivity);
	void SetEyeOffsetScaling(float NewScaling);
	void SetEmoteSpeed(float NewEmoteSpeed);
	void ServerVoiceDebug(const struct FString& Command);
	void ServerVoiceChatRejoinChannel();
	void ServerVoiceChatReconnected();
	void ServerViewProjectile();
	void ServerViewPlayerState(class APlayerState* PS);
	void ServerViewPlaceholderAtLocation(const struct FVector& Location);
	void ServerViewPawn(class APawn* PawnToView);
	void ServerViewFlagHolder(unsigned char TeamIndex);
	void ServerViewFlag(unsigned char Index);
	void ServerUpdatePing(float ExactPing);
	void ServerToggleWarmup();
	void ServerThrowWeapon();
	void ServerSwitchTeam();
	void ServerSuicide();
	void ServerStartCastingGuide();
	void ServerSetViewedScorePS(class AUTPlayerState* ViewedPS, unsigned char NewStatsPage);
	void ServerSendComsMessage(class AUTPlayerState* Target, int Switch);
	void ServerSelectSpawnPoint(class APlayerStart* DesiredStart);
	void ServerRestartPlayerAltFire();
	void ServerRequestRally();
	void ServerRegisterBanVote(class AUTPlayerState* BadGuy);
	void ServerReceiveCountryFlag(const struct FName& NewCountryFlag);
	void ServerRconNextMap(const struct FString& NextMap);
	void ServerRconMap(const struct FString& NewMap);
	void ServerPlayGroupTaunt();
	void ServerNP();
	void ServerNotifyProjectileHit(class AUTProjectile* HitProj, const struct FVector_NetQuantize& HitLocation, class AActor* DamageCauser, float TimeStamp, int Damage);
	void ServerNegotiatePredictionPing(float NewPredictionPing);
	void ServerMutate(const struct FString& MutateString);
	void ServerEmote(int EmoteIndex);
	void ServerCasterReady();
	void ServerBouncePing(float TimeStamp);
	void ServerActivatePowerUpPress();
	void SendComsMessage(class AUTPlayerState* Target, int Switch);
	void SelectTranslocator();
	void RestartVOIP();
	void ResolveKeybindToFKey(const struct FString& Command, bool bIncludeGamepad, bool bIncludeAxis, TArray<struct FKey>* Keys);
	void ResolveKeybind(const struct FString& Command, bool bIncludeGamepad, bool bIncludeAxis, TArray<struct FString>* Keys);
	void RequestRally();
	void RefreshWeaponGroups();
	void RconNextMap(const struct FString& NextMap);
	void RconMap(const struct FString& NewMap);
	void PumpkinPickedUp(float GainedAmount, float GoalAmount);
	void Predict(float NewDesiredPredictionPing);
	void PlayTaunt2();
	void PlayTaunt();
	void PlayMenuSelectSound();
	void PlayGroupTaunt();
	void OnRepVoiceChatLoginToken();
	void OnRepVoiceChatJoinToken();
	void OnRep_HUDClass();
	void OnRep_CastingViewIndex();
	void OnRep_CastingGuide();
	void NP();
	void NetStats();
	void Mutate(const struct FString& MutateString);
	void K2_ReceiveLocalizedMessage(class UClass* Message, int Switch, class APlayerState* RelatedPlayerState_2, class APlayerState* RelatedPlayerState_3, class UObject* OptionalObject);
	bool IsLineUpActive();
	void HudSettings();
	void HideWeaponWheel();
	void HideComsMenu();
	void GhostStop();
	void GhostStart();
	void GhostPlay();
	class AUTCharacter* GetUTCharacter();
	struct FRotator GetSpectatingRotation(const struct FVector& ViewLoc, float DeltaTime);
	void FlushVOIP();
	void FindGoodView(const struct FVector& TargetLoc, bool bIsUpdate);
	void FasterEmote();
	void EnableAutoCam();
	void Emote(int EmoteIndex);
	void DumpMapVote();
	void DropCarriedObject();
	void DemoTimeDilation(float DeltaAmount);
	void DemoSetTimeDilation(float Amount);
	void DemoSeek(float DeltaSeconds);
	void DemoRestart();
	void DemoGoToLive();
	void DemoGoTo(float Seconds);
	void ClientWarnEnemyBehind(class AUTPlayerState* TeamPS, class AUTCharacter* Targeter, class UClass* TeammateVoice);
	void ClientViewSpectatorPawn(const struct FViewTargetTransitionParams& TransitionParams);
	void ClientVerifyFiringInputs();
	void ClientUpdateWarmup(bool bNewWarmingUp);
	void ClientUpdateTeamStats(unsigned char TeamNum, unsigned char TeamStatsIndex, float NewValue);
	void ClientUpdateSkillRating(const struct FString& MatchRatingType);
	void ClientUpdateScoreStats(class AUTPlayerState* ViewedPS, unsigned char StatsPage, unsigned char StatsIndex, float NewValue);
	void ClientUpdateDamageDone(int DamageDone, int RoundDamageDone);
	void ClientToggleScoreboard(bool bShow);
	void ClientSwitchToBestWeapon();
	void ClientStopKillcam();
	void ClientStartRally(class AUTRallyPoint* RallyTarget, const struct FVector& NewRallyLocation);
	void ClientShowMapVote();
	void ClientReturnPing(float TimeStamp);
	void ClientReceivePersonalMessage(class UClass* Message, int Switch, class APlayerState* RelatedPlayerState_2, class APlayerState* RelatedPlayerState_3, class UObject* OptionalObject);
	void ClientQueueCoolMoment(const struct FUniqueNetIdRepl& NetId, float TimeToRewind);
	void ClientPumpkinPickedUp(float GainedAmount, float GoalAmount);
	void ClientProgressRally(float Delay);
	void ClientPrepareForLineUp();
	void ClientPrepareForIntermission();
	void ClientPlayKillcam(class AController* KillingController, class APawn* PawnToFocus, const struct FVector_NetQuantize& FocusLoc, int FocusYaw);
	void ClientPlayInstantReplay(class APawn* PawnToFocus, float TimeToRewind, float StartDelay);
	void ClientPlayBadSelectionSound();
	void ClientNotifyTakeHit(bool bFriendlyFire, unsigned char Damage, unsigned char ShotDirYaw, class UClass* DamageTypeClass);
	void ClientNotifyCausedHit(class AActor* HitActor, unsigned char Damage, bool bArmorDamage, bool bOverhealth);
	void ClientLineUpIntroPlayerChange(class AUTPlayerState* PlayerChanged);
	void ClientHideMapVote();
	void ClientHearSound(class USoundBase* TheSound, class AActor* SoundPlayer, const struct FVector_NetQuantize& SoundLocation, bool bStopWhenOwnerDestroyed, bool bAmplifyVolume, TEnumAsByte<ESoundAmplificationType> AmpType);
	void ClientGotWeaponStayPickup(class AUTPickupWeapon* Pickup, class APawn* TouchedBy);
	void ClientDrawLine(const struct FVector& Start, const struct FVector& End, const struct FColor& Color, float Duration);
	void ClientDebugRewind(const struct FVector_NetQuantize& TargetLocation, const struct FVector_NetQuantize& RewindLocation, const struct FVector_NetQuantize& PrePosition, const struct FVector_NetQuantize& PostPosition, float TargetCapsuleHeight, float PredictionTime, float Percent, bool bTeleported);
	void ClientCompleteRally();
	void ClientBackendNotify(const struct FString& TypeStr, const struct FString& Data);
	void ClientAnnounceRoundScore(class AUTTeamInfo* WinningTeam, class APlayerState* ScoringPlayer, unsigned char RoundBonus, unsigned char Reason);
	void ClearTokens();
	void ChangeTeam(unsigned char NewTeamIndex);
	void BehindView(bool bWantBehindView);
	void ActivateSpecial();
};


// Class UnrealTournament.UTAnnouncer
// 0x0188 (0x01B0 - 0x0028)
class UUTAnnouncer : public UObject
{
public:
	TEnumAsByte<EAnnouncerType>                        Type;                                                     // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	struct FString                                     RewardAudioPath;                                          // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FString                                     RewardAudioNamePrefix;                                    // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FString                                     StatusAudioPath;                                          // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FString                                     StatusAudioNamePrefix;                                    // 0x0060(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FAnnouncerSound>                     RewardAudioList;                                          // 0x0070(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FAnnouncerSound>                     StatusAudioList;                                          // 0x0080(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      UnknownData01[0xA8];                                      // 0x0090(0x00A8) MISSED OFFSET
	struct FAnnouncementInfo                           CurrentAnnouncement;                                      // 0x0138(0x0030) (Transient)
	TArray<struct FAnnouncementInfo>                   QueuedAnnouncements;                                      // 0x0168(0x0010) (ZeroConstructor, Transient)
	struct FAnnouncementInfo                           ReactionAnnouncement;                                     // 0x0178(0x0030) (Transient)
	class UAudioComponent*                             AnnouncementComp;                                         // 0x01A8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTAnnouncer");
		return ptr;
	}


	void StartNextAnnouncement(bool bUseSpacing);
	void PrecacheAnnouncement(const struct FName& SoundName);
	void PlayNextAnnouncement();
	void PlayAnnouncement(class UClass* MessageClass, int Switch, class APlayerState* PlayerState1, class APlayerState* PlayerState2, class UObject* OptionalObject);
	void AnnouncementFinished();
};


// Class UnrealTournament.UTAudioSettings
// 0x0000 (0x0028 - 0x0028)
class UUTAudioSettings : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTAudioSettings");
		return ptr;
	}

};


// Class UnrealTournament.UTAvoidMarker
// 0x0018 (0x03A0 - 0x0388)
class AUTAvoidMarker : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0388(0x0008) MISSED OFFSET
	class UCapsuleComponent*                           Capsule;                                                  // 0x0390(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      TeamNum;                                                  // 0x0398(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFriendlyAvoid;                                           // 0x0399(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x039A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTAvoidMarker");
		return ptr;
	}


	void OnOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
};


// Class UnrealTournament.UTGib
// 0x0038 (0x03C0 - 0x0388)
class AUTGib : public AActor
{
public:
	class UMeshComponent*                              Mesh;                                                     // 0x0388(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	float                                              InvisibleLifeSpan;                                        // 0x0390(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0394(0x0004) MISSED OFFSET
	TArray<class UParticleSystem*>                     BloodEffects;                                             // 0x0398(0x0010) (BlueprintVisible, ZeroConstructor)
	TArray<struct FBloodDecalInfo>                     BloodDecals;                                              // 0x03A8(0x0010) (BlueprintVisible, ZeroConstructor)
	float                                              LastBloodTime;                                            // 0x03B8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x03BC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTGib");
		return ptr;
	}


	void OnPhysicsCollision(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
};


// Class UnrealTournament.UTDamageType
// 0x0128 (0x0168 - 0x0040)
class UUTDamageType : public UDamageType
{
public:
	float                                              WalkMovementReductionPct;                                 // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              WalkMovementReductionDuration;                            // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ForceZMomentumPct;                                        // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SelfMomentumBoost;                                        // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      bSelfMomentumBoostOnlyZ : 1;                              // 0x0050(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bForceZMomentum : 1;                                      // 0x0050(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bPreventWalkingZMomentum : 1;                             // 0x0050(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bCausesBlood : 1;                                         // 0x0050(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bCausesPainSound : 1;                                     // 0x0050(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bBlockedByArmor : 1;                                      // 0x0050(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0051(0x0007) MISSED OFFSET
	class UCurveLinearColor*                           BodyDamageColor;                                          // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveLinearColor*                           ArmorDamageColor;                                         // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveLinearColor*                           SuperHealthDamageColor;                                   // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bBodyDamageColorRimOnly;                                  // 0x0070(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0071(0x0003) MISSED OFFSET
	int                                                GibHealthThreshold;                                       // 0x0074(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                GibDamageThreshold;                                       // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x007C(0x0004) MISSED OFFSET
	struct FText                                       ConsoleDeathMessage;                                      // 0x0080(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       MaleSuicideMessage;                                       // 0x0098(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       FemaleSuicideMessage;                                     // 0x00B0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       SelfVictimMessage;                                        // 0x00C8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       AssociatedWeaponName;                                     // 0x00E0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FString                                     StatsName;                                                // 0x00F8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	class UClass*                                      RewardAnnouncementClass;                                  // 0x0108(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       SpreeSoundName;                                           // 0x0110(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FString                                     SpreeString;                                              // 0x0118(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	int                                                WeaponSpreeCount;                                         // 0x0128(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x012C(0x0004) MISSED OFFSET
	struct FText                                       SpecialRewardText;                                        // 0x0130(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FCanvasIcon                                 HUDIcon;                                                  // 0x0148(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	bool                                               bDmgHUDUsesShooterLoc;                                    // 0x0160(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0161(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTDamageType");
		return ptr;
	}


	bool ShouldGib(class AUTCharacter* Victim);
	void ScoreKill(class AUTPlayerState* KillerState, class AUTPlayerState* VictimState, class APawn* KilledPawn);
	void PlayHitEffects(class AUTCharacter* HitPawn, bool bPlayedArmorEffect);
	void PlayGibEffects(class AUTGib* Gib);
	void PlayDeathEffects(class AUTCharacter* DyingPawn);
	bool OverrideDeathSound(class AUTCharacter* Victim);
	class UAnimMontage* GetDeathAnim(class AUTCharacter* DyingPawn);
};


// Class UnrealTournament.UTCosmetic
// 0x0070 (0x03F8 - 0x0388)
class AUTCosmetic : public AActor
{
public:
	bool                                               bRequiresItem;                                            // 0x0388(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0389(0x0007) MISSED OFFSET
	struct FName                                       RequiredAchievement;                                      // 0x0390(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FString                                     CosmeticName;                                             // 0x0398(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FString                                     CosmeticAuthor;                                           // 0x03A8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	class AUTCharacter*                                CosmeticWearer;                                           // 0x03B8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<class UMaterialInstanceDynamic*>            CosmeticMIs;                                              // 0x03C0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FText>                               VariantNames;                                             // 0x03D0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FColorSwap>                          VariantColorSwaps;                                        // 0x03E0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	bool                                               bHideWithOverlay;                                         // 0x03F0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bNeedsScaling;                                            // 0x03F1(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x03F2(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTCosmetic");
		return ptr;
	}


	void SetBodiesToSimulatePhysics();
	class UClass* OverrideGib(const struct FName& BoneName);
	void OnWearerHeadshot();
	void OnWearerEmoteStarted();
	void OnWearerEmoteEnded();
	void OnWearerDeath(class UClass* DamageType);
	void OnVariantSelected(int Variant);
	void OnSpreeLevelChanged(int NewSpreeLevel);
	void OnFlashCountIncremented();
};


// Class UnrealTournament.UTHat
// 0x0028 (0x0420 - 0x03F8)
class AUTHat : public AUTCosmetic
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x03F8(0x0010) MISSED OFFSET
	bool                                               bDontDropOnDeath;                                         // 0x0408(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bHeadshotRotating;                                        // 0x0409(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x040A(0x0006) MISSED OFFSET
	class UClass*                                      LeaderHatClass;                                           // 0x0410(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bOverrideOnly;                                            // 0x0418(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0419(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTHat");
		return ptr;
	}


	void HeadshotRotationComplete();
};


// Class UnrealTournament.UTHatLeader
// 0x0000 (0x0420 - 0x0420)
class AUTHatLeader : public AUTHat
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTHatLeader");
		return ptr;
	}

};


// Class UnrealTournament.UTEyewear
// 0x0000 (0x03F8 - 0x03F8)
class AUTEyewear : public AUTCosmetic
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTEyewear");
		return ptr;
	}

};


// Class UnrealTournament.UTTaunt
// 0x0038 (0x03C0 - 0x0388)
class AUTTaunt : public AActor
{
public:
	struct FString                                     DisplayName;                                              // 0x0388(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FString                                     TauntAuthor;                                              // 0x0398(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	class UAnimMontage*                                TauntMontage;                                             // 0x03A8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                FirstPersonTauntMontage;                                  // 0x03B0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bAllowMovementWithFirstPersonTaunt;                       // 0x03B8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bRequiresItem;                                            // 0x03B9(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x03BA(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTTaunt");
		return ptr;
	}

};


// Class UnrealTournament.UTIntro
// 0x0030 (0x03B8 - 0x0388)
class AUTIntro : public AActor
{
public:
	struct FString                                     DisplayName;                                              // 0x0388(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	class UAnimMontage*                                IntroMontage;                                             // 0x0398(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       SameTeamStartingSection;                                  // 0x03A0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       EnemyTeamStartingSection;                                 // 0x03A8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       WeaponReadyStartingSection;                               // 0x03B0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTIntro");
		return ptr;
	}

};


// Class UnrealTournament.UTGroupTaunt
// 0x0038 (0x03C0 - 0x0388)
class AUTGroupTaunt : public AActor
{
public:
	struct FString                                     DisplayName;                                              // 0x0388(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FString                                     TauntAuthor;                                              // 0x0398(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	class UAnimMontage*                                TauntMontage;                                             // 0x03A8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  BGMusic;                                                  // 0x03B0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bCascading;                                               // 0x03B8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bRequiresItem;                                            // 0x03B9(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x03BA(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTGroupTaunt");
		return ptr;
	}

};


// Class UnrealTournament.UTLocalMessage
// 0x0030 (0x0058 - 0x0028)
class UUTLocalMessage : public ULocalMessage
{
public:
	struct FName                                       MessageArea;                                              // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       MessageSlot;                                              // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      bIsStatusAnnouncement : 1;                                // 0x0038(0x0001) (Edit, BlueprintVisible, DisableEditOnInstance)
	unsigned char                                      bIsUnique : 1;                                            // 0x0038(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bIsPartiallyUnique : 1;                                   // 0x0038(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bIsConsoleMessage : 1;                                    // 0x0038(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bOptionalSpoken : 1;                                      // 0x0038(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bWantsBotReaction : 1;                                    // 0x0038(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bDrawAsDeathMessage : 1;                                  // 0x0038(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bDrawAtIntermission : 1;                                  // 0x0038(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bDrawOnlyIfAlive : 1;                                     // 0x0039(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bPlayDuringIntermission : 1;                              // 0x0039(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bPlayDuringInstantReplay : 1;                             // 0x0039(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x2];                                       // 0x003A(0x0002) MISSED OFFSET
	float                                              MaxAnnouncementDelay;                                     // 0x003C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      bCombineEmphasisText : 1;                                 // 0x0040(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	float                                              LifeTime;                                                 // 0x0044(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AnnouncementDelay;                                        // 0x0048(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ScaleInSize;                                              // 0x004C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ScaleInTime;                                              // 0x0050(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                FontSizeIndex;                                            // 0x0054(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTLocalMessage");
		return ptr;
	}


	bool ShouldCountInstances(int MessageIndex, class UObject* OptionalObject);
	struct FText ResolveMessage(int Switch, bool bTargetsPlayerState1, class APlayerState* RelatedPlayerState_2, class APlayerState* RelatedPlayerState_3, class UObject* OptionalObject);
	void PrecacheAnnouncements(class UUTAnnouncer* Announcer);
	void OnClientReceive(class APlayerController* LocalPC, int Switch, class APlayerState* RelatedPlayerState_2, class APlayerState* RelatedPlayerState_3, class UObject* OptionalObject);
	void OnAnnouncementPlayed(int Switch, class UObject* OptionalObject);
	bool InterruptAnnouncement(int Switch, class UObject* OptionalObject, class UClass* OtherMessageClass, int OtherSwitch, class UObject* OtherOptionalObject);
	struct FText GetText(int Switch, bool bTargetsPlayerState1, class APlayerState* RelatedPlayerState_2, class APlayerState* RelatedPlayerState_3, class UObject* OptionalObject);
	float GetScaleInTime(int MessageIndex);
	float GetScaleInSize(int MessageIndex);
	struct FLinearColor GetMessageColor(int MessageIndex);
	float GetLifeTime(int Switch);
	struct FString GetAnnouncementUMGClassname(int Switch, class UObject* OptionalObject);
	float GetAnnouncementSpacing(int Switch, class UObject* OptionalObject);
	class USoundBase* GetAnnouncementSound(int Switch, class UObject* OptionalObject);
	struct FName GetAnnouncementName(int Switch, class UObject* OptionalObject, class APlayerState* RelatedPlayerState_2, class APlayerState* RelatedPlayerState_3);
	bool CancelByAnnouncement(int Switch, class UObject* OptionalObject, class UClass* OtherMessageClass, int OtherSwitch, class UObject* OtherOptionalObject);
	struct FText Blueprint_GetText(int Switch, bool bTargetsPlayerState1, class APlayerState* RelatedPlayerState_2, class APlayerState* RelatedPlayerState_3, class UObject* OptionalObject);
	float Blueprint_GetLifeTime(int Switch);
};


// Class UnrealTournament.UTCharacterVoice
// 0x03E0 (0x0438 - 0x0058)
class UUTCharacterVoice : public UUTLocalMessage
{
public:
	TArray<struct FCharacterSpeech>                    TauntMessages;                                            // 0x0058(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FCharacterSpeech>                    SameTeamMessages;                                         // 0x0068(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FCharacterSpeech>                    FriendlyReactions;                                        // 0x0078(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FCharacterSpeech>                    EnemyReactions;                                           // 0x0088(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FCharacterSpeech>                    NeedBackupMessages;                                       // 0x0098(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FCharacterSpeech>                    EnemyFCHereMessages;                                      // 0x00A8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FCharacterSpeech>                    AreaSecureMessages;                                       // 0x00B8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FCharacterSpeech>                    IGotFlagMessages;                                         // 0x00C8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FCharacterSpeech>                    DefendFlagMessages;                                       // 0x00D8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FCharacterSpeech>                    DefendFCMessages;                                         // 0x00E8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FCharacterSpeech>                    GetFlagBackMessages;                                      // 0x00F8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FCharacterSpeech>                    ImOnDefenseMessages;                                      // 0x0108(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FCharacterSpeech>                    ImGoingInMessages;                                        // 0x0118(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FCharacterSpeech>                    ImOnOffenseMessages;                                      // 0x0128(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FCharacterSpeech>                    BaseUnderAttackMessages;                                  // 0x0138(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FCharacterSpeech>                    IncomingMessages;                                         // 0x0148(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FCharacterSpeech>                    SpreadOutMessages;                                        // 0x0158(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FCharacterSpeech>                    AcknowledgeMessages;                                      // 0x0168(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FCharacterSpeech>                    NegativeMessages;                                         // 0x0178(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FCharacterSpeech>                    GotYourBackMessages;                                      // 0x0188(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FCharacterSpeech>                    UnderHeavyAttackMessages;                                 // 0x0198(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FCharacterSpeech>                    AttackTheirBaseMessages;                                  // 0x01A8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FCharacterSpeech>                    EnemyRallyMessages;                                       // 0x01B8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FCharacterSpeech>                    RallyNowMessages;                                         // 0x01C8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FCharacterSpeech>                    FindFCMessages;                                           // 0x01D8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FCharacterSpeech>                    LastLifeMessages;                                         // 0x01E8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FCharacterSpeech>                    EnemyLowLivesMessages;                                    // 0x01F8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FCharacterSpeech>                    EnemyThreePlayersMessages;                                // 0x0208(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FCharacterSpeech>                    DroppedRedeemerMessages;                                  // 0x0218(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FCharacterSpeech>                    NeedRallyMessages;                                        // 0x0228(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FCharacterSpeech>                    NeedHealthMessages;                                       // 0x0238(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FCharacterSpeech>                    BehindYouMessages;                                        // 0x0248(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FCharacterSpeech>                    GetTheFlagMessages;                                       // 0x0258(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FCharacterSpeech>                    RedeemerKillMessages;                                     // 0x0268(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FCharacterSpeech>                    RedeemerSpottedMessages;                                  // 0x0278(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FCharacterSpeech>                    DoorRallyMessages;                                        // 0x0288(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FCharacterSpeech>                    SniperSpottedMessages;                                    // 0x0298(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FCharacterSpeech>                    RallyHotMessages;                                         // 0x02A8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FGameVolumeLines>                    LocationLines;                                            // 0x02B8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FCharacterSpeech                            RedeemerPickupLine;                                       // 0x02C8(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FCharacterSpeech                            UDamagePickupLine;                                        // 0x02E8(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FCharacterSpeech                            ShieldbeltPickupLine;                                     // 0x0308(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FCharacterSpeech                            RedeemerAvailableLine;                                    // 0x0328(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FCharacterSpeech                            UDamageAvailableLine;                                     // 0x0348(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FCharacterSpeech                            UDamageDroppedLine;                                       // 0x0368(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FCharacterSpeech                            ShieldbeltAvailableLine;                                  // 0x0388(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	int                                                SameTeamBaseIndex;                                        // 0x03A8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                FriendlyReactionBaseIndex;                                // 0x03AC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                EnemyReactionBaseIndex;                                   // 0x03B0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                StatusBaseIndex;                                          // 0x03B4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FText                                       TauntText;                                                // 0x03B8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       StatusTextFormat;                                         // 0x03D0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x50];                                      // 0x03E8(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTCharacterVoice");
		return ptr;
	}

};


// Class UnrealTournament.UTCharacterContent
// 0x0150 (0x04D8 - 0x0388)
class AUTCharacterContent : public AActor
{
public:
	struct FText                                       DisplayName;                                              // 0x0388(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	bool                                               bIsFemale;                                                // 0x03A0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bHideInUI;                                                // 0x03A1(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bRequiresItem;                                            // 0x03A2(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x03A3(0x0005) MISSED OFFSET
	struct FName                                       RequiredAchievement;                                      // 0x03A8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FString                                     Entitlement;                                              // 0x03B0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	class USkeletalMesh*                               SkeletonMesh;                                             // 0x03C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USkeletalMesh*                               SkeletonMesh1p;                                           // 0x03C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     RelativeScale1p;                                          // 0x03D0(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    RelativeRotation1p;                                       // 0x03DC(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<class UMaterialInterface*>                  OverideMaterials1p;                                       // 0x03E8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	class UPhysicsAsset*                               PhysicsAssetOverride1p;                                   // 0x03F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FGibSlotInfo>                        Gibs;                                                     // 0x0400(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	class UClass*                                      GibExplosionEffect;                                       // 0x0410(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  LandingSound;                                             // 0x0418(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  JumpSound;                                                // 0x0420(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  DodgeSound;                                               // 0x0428(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  PainSound;                                                // 0x0430(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  WallHitSound;                                             // 0x0438(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  DeathSound;                                               // 0x0440(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  HeadShotDeathSound;                                       // 0x0448(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  FloorSlideSound;                                          // 0x0450(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  DrowningSound;                                            // 0x0458(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  GaspSound;                                                // 0x0460(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  SwimPushSound;                                            // 0x0468(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  WaterEntrySound;                                          // 0x0470(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  FastWaterEntrySound;                                      // 0x0478(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  WaterExitSound;                                           // 0x0480(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCanvasIcon                                 DefaultCharacterPortrait;                                 // 0x0488(0x0018) (Edit, BlueprintVisible)
	class USkeletalMeshComponent*                      Mesh;                                                     // 0x04A0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	TEnumAsByte<EDMSkinType>                           DMSkinType;                                               // 0x04A8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x04A9(0x0007) MISSED OFFSET
	TArray<class UMaterialInterface*>                  TeamMaterials;                                            // 0x04B0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<class UMaterialInterface*>                  TeamMaterials1p;                                          // 0x04C0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	class UClass*                                      CharacterVoice;                                           // 0x04D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTCharacterContent");
		return ptr;
	}

};


// Class UnrealTournament.UTProfileItem
// 0x0088 (0x0138 - 0x00B0)
class UUTProfileItem : public UUtMcpDefinition
{
public:
	bool                                               bTradable;                                                // 0x00B0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bUnique;                                                  // 0x00B1(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x00B2(0x0006) MISSED OFFSET
	struct FText                                       DisplayName;                                              // 0x00B8(0x0018) (Edit)
	struct FCanvasIcon                                 Image;                                                    // 0x00D0(0x0018) (Edit)
	TArray<struct FProfileItemEntry>                   Recipe;                                                   // 0x00E8(0x0010) (Edit, ZeroConstructor)
	TArray<struct FStringClassReference>               GrantedCosmetics;                                         // 0x00F8(0x0010) (ZeroConstructor, Deprecated)
	TArray<struct FCosmeticEntry>                      GrantedCosmeticItems;                                     // 0x0108(0x0010) (Edit, ZeroConstructor)
	TArray<struct FStringClassReference>               GrantedCharacters;                                        // 0x0118(0x0010) (Edit, ZeroConstructor)
	TArray<struct FStringAssetReference>               GrantedBots;                                              // 0x0128(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTProfileItem");
		return ptr;
	}

};


// Class UnrealTournament.UTWeaponSkin
// 0x0060 (0x0088 - 0x0028)
class UUTWeaponSkin : public UDataAsset
{
public:
	struct FText                                       DisplayName;                                              // 0x0028(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FString                                     ItemAuthor;                                               // 0x0040(0x0010) (Edit, ZeroConstructor)
	bool                                               bRequiresItem;                                            // 0x0050(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0051(0x0007) MISSED OFFSET
	struct FName                                       RequiredAchievement;                                      // 0x0058(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInstance*                           FPSMaterial;                                              // 0x0060(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInstance*                           Material;                                                 // 0x0068(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FStringClassReference                       WeaponType;                                               // 0x0070(0x0010) (Edit, ZeroConstructor)
	struct FName                                       WeaponSkinCustomizationTag;                               // 0x0080(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTWeaponSkin");
		return ptr;
	}

};


// Class UnrealTournament.UTResetInterface
// 0x0000 (0x0028 - 0x0028)
class UUTResetInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTResetInterface");
		return ptr;
	}


	void Reset();
};


// Class UnrealTournament.UTGameVolume
// 0x0090 (0x0460 - 0x03D0)
class AUTGameVolume : public APhysicsVolume
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x03D0(0x0010) MISSED OFFSET
	struct FText                                       VolumeName;                                               // 0x03E0(0x0018) (Edit, BlueprintVisible)
	bool                                               bShowOnMinimap;                                           // 0x03F8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x03F9(0x0003) MISSED OFFSET
	struct FVector2D                                   MinimapOffset;                                            // 0x03FC(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0404(0x0004) MISSED OFFSET
	TArray<class AUTSupplyChest*>                      TeamLockers;                                              // 0x0408(0x0010) (BlueprintVisible, ZeroConstructor)
	TArray<class AUTRallyPoint*>                       RallyPoints;                                              // 0x0418(0x0010) (BlueprintVisible, ZeroConstructor)
	bool                                               bIsTeamSafeVolume;                                        // 0x0428(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsNoRallyZone;                                           // 0x0429(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bIsDefenderBase;                                          // 0x042A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bPlayIncomingWarning;                                     // 0x042B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsTeleportZone;                                          // 0x042C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsWarningZone;                                           // 0x042D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x042E(0x0002) MISSED OFFSET
	class USoundBase*                                  AlarmSound;                                               // 0x0430(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class AUTTeleporter*                               AssociatedTeleporter;                                     // 0x0438(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      TeamIndex;                                                // 0x0440(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0441(0x0007) MISSED OFFSET
	struct FName                                       VoiceLinesSet;                                            // 0x0448(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bReportDefenseStatus;                                     // 0x0450(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bHasBeenEntered;                                          // 0x0451(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bHasFCEntry;                                              // 0x0452(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x1];                                       // 0x0453(0x0001) MISSED OFFSET
	float                                              MinEnemyInBaseInterval;                                   // 0x0454(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                RouteID;                                                  // 0x0458(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bTestBaseEntry;                                           // 0x045C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x045D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTGameVolume");
		return ptr;
	}


	unsigned char ScriptGetTeamNum();
};


// Class UnrealTournament.UTPlayerState
// 0x05B8 (0x09D0 - 0x0418)
class AUTPlayerState : public APlayerState
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0418(0x0008) MISSED OFFSET
	class UStatManager*                                StatManager;                                              // 0x0420(0x0008) (ZeroConstructor, IsPlainOldData)
	class UClass*                                      SelectedCharacter;                                        // 0x0428(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	class AUTCharacter*                                CachedCharacter;                                          // 0x0430(0x0008) (ZeroConstructor, IsPlainOldData)
	bool                                               bHasHighScore;                                            // 0x0438(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      SpectatingID;                                             // 0x0439(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      SpectatingIDTeam;                                         // 0x043A(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x5];                                       // 0x043B(0x0005) MISSED OFFSET
	class AUTTeamInfo*                                 Team;                                                     // 0x0440(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bIsWarmingUp : 1;                                         // 0x0448(0x0001) (BlueprintVisible, BlueprintReadOnly, Net)
	unsigned char                                      bCaster : 1;                                              // 0x0448(0x0001) (Net)
	unsigned char                                      bIsMatchHost : 1;                                         // 0x0448(0x0001) (Net)
	unsigned char                                      bPendingTeamSwitch : 1;                                   // 0x0448(0x0001) (BlueprintVisible, Net)
	unsigned char                                      bAnnounceWeaponSpree : 1;                                 // 0x0448(0x0001)
	unsigned char                                      bAnnounceWeaponReward : 1;                                // 0x0448(0x0001)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0449(0x0007) MISSED OFFSET
	class UClass*                                      CharacterVoice;                                           // 0x0450(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bShouldAutoTaunt;                                         // 0x0458(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0459(0x0003) MISSED OFFSET
	float                                              LastTauntTime;                                            // 0x045C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LastNeedHealthTime;                                       // 0x0460(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LastBehindYouTime;                                        // 0x0464(0x0004) (ZeroConstructor, IsPlainOldData)
	class UUTBotCharacter*                             PlayerCard;                                               // 0x0468(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x10];                                      // 0x0470(0x0010) MISSED OFFSET
	float                                              LastKillTime;                                             // 0x0480(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                MultiKillLevel;                                           // 0x0484(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                Spree;                                                    // 0x0488(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	int                                                Kills;                                                    // 0x048C(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	int                                                KillAssists;                                              // 0x0490(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	int                                                DamageDone;                                               // 0x0494(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                RoundDamageDone;                                          // 0x0498(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                RoundKills;                                               // 0x049C(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	int                                                RoundKillAssists;                                         // 0x04A0(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	int                                                ThisLifeDamageDone;                                       // 0x04A4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                RoundDeaths;                                              // 0x04A8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                ThisLifeKills;                                            // 0x04AC(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	int                                                ThisLifeKillAssists;                                      // 0x04B0(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	int                                                RemainingLives;                                           // 0x04B4(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bOutOfLives : 1;                                          // 0x04B8(0x0001) (BlueprintVisible, Net)
	unsigned char                                      UnknownData05[0x3];                                       // 0x04B9(0x0003) MISSED OFFSET
	float                                              RespawnWaitTime;                                          // 0x04BC(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	int                                                Deaths;                                                   // 0x04C0(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	int                                                FlagCaptures;                                             // 0x04C4(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	int                                                FlagReturns;                                              // 0x04C8(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	int                                                Assists;                                                  // 0x04CC(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	class AUTPlayerState*                              LastKillerPlayerState;                                    // 0x04D0(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bCanRally;                                                // 0x04D8(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bRallyActivated;                                          // 0x04D9(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bNeedRallyReminder;                                       // 0x04DA(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x1];                                       // 0x04DB(0x0001) MISSED OFFSET
	struct FVector                                     RallyLocation;                                            // 0x04DC(0x000C) (ZeroConstructor, IsPlainOldData)
	class AUTRallyPoint*                               SavedRallyTarget;                                         // 0x04E8(0x0008) (ZeroConstructor, IsPlainOldData)
	class AUTRallyPoint*                               RallyPoint;                                               // 0x04F0(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x10];                                      // 0x04F8(0x0010) MISSED OFFSET
	bool                                               bIsRconAdmin;                                             // 0x0508(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bIsDemoRecording;                                         // 0x0509(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bAllowedEarlyLeave;                                       // 0x050A(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x1];                                       // 0x050B(0x0001) MISSED OFFSET
	int                                                PartySize;                                                // 0x050C(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FString                                     PartyLeader;                                              // 0x0510(0x0010) (ZeroConstructor)
	struct FString                                     ClanName;                                                 // 0x0520(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor)
	struct FString                                     StatsID;                                                  // 0x0530(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor)
	struct FName                                       MatchHighlights[0x5];                                     // 0x0540(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	float                                              MatchHighlightData[0x5];                                  // 0x0568(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x4];                                       // 0x057C(0x0004) MISSED OFFSET
	class UClass*                                      FavoriteWeapon;                                           // 0x0580(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class UClass*                                      LineUpWeapon;                                             // 0x0588(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                LineUpLocation;                                           // 0x0590(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	int                                                ElapsedTime;                                              // 0x0594(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bIsInLineUp;                                              // 0x0598(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               bHasPlayedLineUpIntro;                                    // 0x0599(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0x2];                                       // 0x059A(0x0002) MISSED OFFSET
	int                                                PrevXP;                                                   // 0x059C(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	struct FXPBreakdown                                XP;                                                       // 0x05A0(0x0014) (ZeroConstructor, IsPlainOldData)
	int                                                TotalChallengeStars;                                      // 0x05B4(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              RespawnTime;                                              // 0x05B8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ForceRespawnTime;                                         // 0x05BC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bChosePrimaryRespawnChoice;                               // 0x05C0(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData11[0x7];                                       // 0x05C1(0x0007) MISSED OFFSET
	class APlayerStart*                                RespawnChoiceA;                                           // 0x05C8(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class APlayerStart*                                RespawnChoiceB;                                           // 0x05D0(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      SelectionOrder;                                           // 0x05D8(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData12[0x7];                                       // 0x05D9(0x0007) MISSED OFFSET
	class AUTCarriedObject*                            CarriedObject;                                            // 0x05E0(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              LastShotFCTime;                                           // 0x05E8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData13[0x4];                                       // 0x05EC(0x0004) MISSED OFFSET
	class AUTPlayerState*                              LastShotFC;                                               // 0x05F0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LastKilledFCTime;                                         // 0x05F8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FCDamageAccum;                                            // 0x05FC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LastFlagReturnTime;                                       // 0x0600(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bNeedsAssistAnnouncement;                                 // 0x0604(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bSkipELO;                                                 // 0x0605(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bSentLogoutAnalytics;                                     // 0x0606(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData14[0x1];                                       // 0x0607(0x0001) MISSED OFFSET
	TArray<struct FWeaponSpree>                        WeaponSprees;                                             // 0x0608(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	class UClass*                                      WeaponSpreeDamage;                                        // 0x0618(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	TArray<class UUTWeaponSkin*>                       WeaponSkins;                                              // 0x0620(0x0010) (Net, ZeroConstructor)
	class UClass*                                      HatClass;                                                 // 0x0630(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class UClass*                                      LeaderHatClass;                                           // 0x0638(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class UClass*                                      EyewearClass;                                             // 0x0640(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	int                                                HatVariant;                                               // 0x0648(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	int                                                EyewearVariant;                                           // 0x064C(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	class UClass*                                      TauntClass;                                               // 0x0650(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class UClass*                                      Taunt2Class;                                              // 0x0658(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class UClass*                                      OldTauntClass;                                            // 0x0660(0x0008) (ZeroConstructor, IsPlainOldData)
	class UClass*                                      OldTaunt2Class;                                           // 0x0668(0x0008) (ZeroConstructor, IsPlainOldData)
	class UClass*                                      IntroClass;                                               // 0x0670(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class UClass*                                      OldIntroClass;                                            // 0x0678(0x0008) (ZeroConstructor, IsPlainOldData)
	class UClass*                                      GroupTauntClass;                                          // 0x0680(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	struct FName                                       ChatDestination;                                          // 0x0688(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	struct FName                                       CountryFlag;                                              // 0x0690(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	struct FName                                       Avatar;                                                   // 0x0698(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bDrawNameOnDeathIndicator;                                // 0x06A0(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData15[0x7];                                       // 0x06A1(0x0007) MISSED OFFSET
	struct FCanvasIcon                                 HUDIcon;                                                  // 0x06A8(0x0018) (BlueprintVisible, BlueprintReadOnly, Net)
	unsigned char                                      RemainingBoosts;                                          // 0x06C0(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData16[0x3];                                       // 0x06C1(0x0003) MISSED OFFSET
	float                                              BoostRechargePct;                                         // 0x06C4(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	TArray<class AUTInventory*>                        PreservedKeepOnDeathInventoryList;                        // 0x06C8(0x0010) (ZeroConstructor)
	class UClass*                                      BoostClass;                                               // 0x06D8(0x0008) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ScoreCorner;                                              // 0x06E0(0x000C) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData17[0x4];                                       // 0x06EC(0x0004) MISSED OFFSET
	class UObject*                                     McpProfile;                                               // 0x06F0(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FString                                     EpicAccountName;                                          // 0x06F8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     ClampedName;                                              // 0x0708(0x0010) (BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData18[0x8];                                       // 0x0718(0x0008) MISSED OFFSET
	class UObject*                                     NameClamper;                                              // 0x0720(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData19[0x148];                                     // 0x0728(0x0148) MISSED OFFSET
	float                                              LastScoreStatsUpdateTime;                                 // 0x0870(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                DuelRank;                                                 // 0x0874(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	int                                                CTFRank;                                                  // 0x0878(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	int                                                TDMRank;                                                  // 0x087C(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	int                                                DMRank;                                                   // 0x0880(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	int                                                ShowdownRank;                                             // 0x0884(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	int                                                FlagRunRank;                                              // 0x0888(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	int                                                RankedDuelRank;                                           // 0x088C(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	int                                                RankedCTFRank;                                            // 0x0890(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	int                                                RankedShowdownRank;                                       // 0x0894(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	int                                                RankedFlagRunRank;                                        // 0x0898(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      DuelMatchesPlayed;                                        // 0x089C(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CTFMatchesPlayed;                                         // 0x089D(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      TDMMatchesPlayed;                                         // 0x089E(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      DMMatchesPlayed;                                          // 0x089F(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ShowdownMatchesPlayed;                                    // 0x08A0(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      FlagRunMatchesPlayed;                                     // 0x08A1(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      RankedDuelMatchesPlayed;                                  // 0x08A2(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      RankedCTFMatchesPlayed;                                   // 0x08A3(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      RankedShowdownMatchesPlayed;                              // 0x08A4(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      RankedFlagRunMatchesPlayed;                               // 0x08A5(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData20[0x2];                                       // 0x08A6(0x0002) MISSED OFFSET
	int                                                TrainingLevel;                                            // 0x08A8(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData21[0x10];                                      // 0x08AC(0x0010) MISSED OFFSET
	bool                                               bIsFriend;                                                // 0x08BC(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData22[0x3];                                       // 0x08BD(0x0003) MISSED OFFSET
	float                                              CoolFactorCombinationWindow;                              // 0x08C0(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              CoolFactorBleedSpeed;                                     // 0x08C4(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MinimumConsiderationForCoolFactorHistory;                 // 0x08C8(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              CurrentCoolFactor;                                        // 0x08CC(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	TArray<struct FCoolFactorHistoricalEvent>          CoolFactorHistory;                                        // 0x08D0(0x0010) (ZeroConstructor)
	unsigned char                                      bSpecialPlayer : 1;                                       // 0x08E0(0x0001) (Net)
	unsigned char                                      bSpecialTeamPlayer : 1;                                   // 0x08E0(0x0001) (Net)
	unsigned char                                      UnknownData23[0x7];                                       // 0x08E1(0x0007) MISSED OFFSET
	class UClass*                                      OverrideHatClass;                                         // 0x08E8(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData24[0x10];                                      // 0x08F0(0x0010) MISSED OFFSET
	unsigned char                                      KickCount;                                                // 0x0900(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData25[0x3];                                       // 0x0901(0x0003) MISSED OFFSET
	unsigned char                                      bHasVoted : 1;                                            // 0x0904(0x0001) (Net)
	unsigned char                                      UnknownData26[0x3];                                       // 0x0905(0x0003) MISSED OFFSET
	class UClass*                                      ActiveGroupTaunt;                                         // 0x0908(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	struct FEmoteRepInfo                               EmoteReplicationInfo;                                     // 0x0910(0x0008) (Net)
	float                                              EmoteSpeed;                                               // 0x0918(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              MatchHighlightScore;                                      // 0x091C(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bIsTalking;                                               // 0x0920(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsMuted;                                                 // 0x0921(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData27[0x6];                                       // 0x0922(0x0006) MISSED OFFSET
	class AUTGameVolume*                               LastKnownLocation;                                        // 0x0928(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData28[0x50];                                      // 0x0930(0x0050) MISSED OFFSET
	struct FVector                                     LastPostRenderedLocation;                                 // 0x0980(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bPawnWasPostRendered;                                     // 0x098C(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData29[0x3];                                       // 0x098D(0x0003) MISSED OFFSET
	float                                              PawnPostRenderedTime;                                     // 0x0990(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bReported;                                                // 0x0994(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData30[0x3];                                       // 0x0995(0x0003) MISSED OFFSET
	float                                              LastSpawnTime;                                            // 0x0998(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LastActiveTime;                                           // 0x099C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData31[0x30];                                      // 0x09A0(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTPlayerState");
		return ptr;
	}


	void UpdateWeaponSkinPrefFromProfile(class AUTWeapon* Weapon);
	void SetRemainingBoosts(unsigned char NewRemainingBoosts);
	void SetCharacterVoice(const struct FString& CharacterVoicePath);
	void SetCharacter(const struct FString& CharacterPath);
	void SetCarriedObject(class AUTCarriedObject* NewCarriedObject);
	void ServerSlowerEmote();
	void ServerSetEmoteSpeed(float NewEmoteSpeed);
	void ServerSetCharacter(const struct FString& CharacterPath);
	void ServerSetBoostItem(int PowerupIndex);
	void ServerRequestChangeTeam(unsigned char NewTeamIndex);
	void ServerReceiveWeaponSkin(const struct FString& NewWeaponSkin);
	void ServerReceiveTauntClass(const struct FString& NewTauntClass);
	void ServerReceiveTaunt2Class(const struct FString& NewTauntClass);
	void ServerReceiveLeaderHatClass(const struct FString& NewLeaderHatClass);
	void ServerReceiveIntroClass(const struct FString& NewIntroClass);
	void ServerReceiveHatVariant(int NewVariant);
	void ServerReceiveHatClass(const struct FString& NewHatClass);
	void ServerReceiveGroupTauntClass(const struct FString& NewGroupTauntClass);
	void ServerReceiveEyewearVariant(int NewVariant);
	void ServerReceiveEyewearClass(const struct FString& NewEyewearClass);
	void ServerNextChatDestination();
	void ServerFasterEmote();
	void RegisterVote(class AUTReplicatedMapInfo* VoteInfo);
	void PlayTauntByIndex(int TauntIndex);
	void PlayTauntByClass(class UClass* TauntToPlay);
	void PlayGroupTaunt();
	void OnWeaponSpreeDamage();
	void OnRespawnWaitReceived();
	void OnRepTaunt();
	void OnRepSpecialTeamPlayer();
	void OnRepSpecialPlayer();
	void OnRepOverrideHat();
	void OnRepHatVariant();
	void OnRepHatLeader();
	void OnRepHat();
	void OnRepEyewearVariant();
	void OnRepEyewear();
	void OnRepEmoteSpeed();
	void OnRep_HasHighScore();
	void OnRep_ActiveGroupTaunt();
	void OnPlayerCardUpdated();
	void OnPlayerCardLoadError();
	void OnPlayerCardLoadCompleted();
	void OnOutOfLives();
	void OnDeathsReceived();
	void OnCarriedObjectChanged();
	void NotifyTeamChanged();
	void NotIdle();
	bool IsOnlySpectator();
	bool IsABeginner(class AUTBaseGameMode* DefaultGameMode);
	void IncrementKills(class UClass* DamageType, bool bEnemyKill, class AUTPlayerState* VictimPS);
	void IncrementKillAssists(class UClass* DamageType, bool bEnemyKill, class AUTPlayerState* VictimPS);
	void IncrementDeaths(class UClass* DamageType, class AUTPlayerState* KillerPlayerState);
	void HandleTeamChanged(class AController* Controller);
	class AUTCharacter* GetUTCharacter();
	unsigned char GetTeamNum();
	class AUTTeamInfo* GetTeamInfo();
	float GetStatsValue(const struct FName& StatsName);
	float GetRoundStatsValue(const struct FName& StatsName);
	int GetRankCheck(class AUTBaseGameMode* DefaultGame);
	int GetPrevXP();
	void GetBadgeFromELO(class AUTBaseGameMode* DefaultGame, bool bRankedSession, int* BadgeLevel, int* SubLevel);
	void ClientReceiveRconMessage(const struct FString& Message);
	void ClearCarriedObject(class AUTCarriedObject* OldCarriedObject);
	void ClampXP(int MaxValue);
	bool CanAwardOnlineXP();
	void AdjustScore(int ScoreAdjustment);
	void AddCoolFactorMinorEvent();
	void AddCoolFactorEvent(float CoolFactorAddition);
};


// Class UnrealTournament.UTBaseGameMode
// 0x0158 (0x05B0 - 0x0458)
class AUTBaseGameMode : public AGameMode
{
public:
	struct FString                                     ServerPassword;                                           // 0x0458(0x0010) (ZeroConstructor, Config, GlobalConfig)
	struct FString                                     SpectatePassword;                                         // 0x0468(0x0010) (ZeroConstructor, Config, GlobalConfig)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0478(0x0008) MISSED OFFSET
	TAssetPtr<class UClass>                            PlayerPawnObject;                                         // 0x0480(0x0020)
	unsigned char                                      UnknownData01[0x10];                                      // 0x04A0(0x0010) MISSED OFFSET
	struct FText                                       DisplayName;                                              // 0x04B0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FString                                     ServerInstanceID;                                         // 0x04C8(0x0010) (ZeroConstructor, Config, GlobalConfig)
	unsigned char                                      UnknownData02[0x20];                                      // 0x04D8(0x0020) MISSED OFFSET
	int                                                MinAllowedRank;                                           // 0x04F8(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	int                                                MaxAllowedRank;                                           // 0x04FC(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bTrainingGround;                                          // 0x0500(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0501(0x0007) MISSED OFFSET
	struct FString                                     TestString;                                               // 0x0508(0x0010) (ZeroConstructor, Config, GlobalConfig)
	struct FString                                     PawnClassOverride;                                        // 0x0518(0x0010) (ZeroConstructor, Config, GlobalConfig)
	TArray<struct FPackageRedirectReference>           RedirectReferences;                                       // 0x0528(0x0010) (ZeroConstructor, Config)
	int                                                CurrentPlaylistId;                                        // 0x0538(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x053C(0x0004) MISSED OFFSET
	class UObject*                                     McpProfileManager;                                        // 0x0540(0x0008) (ZeroConstructor, IsPlainOldData)
	bool                                               bPrivateMatch;                                            // 0x0548(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x7];                                       // 0x0549(0x0007) MISSED OFFSET
	TArray<struct FEpicMapData>                        EpicMapList;                                              // 0x0550(0x0010) (ZeroConstructor, Config, GlobalConfig)
	struct FString                                     MapPrefix;                                                // 0x0560(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      UnknownData06[0x10];                                      // 0x0570(0x0010) MISSED OFFSET
	bool                                               bIgnoreIdlePlayers;                                       // 0x0580(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x17];                                      // 0x0581(0x0017) MISSED OFFSET
	bool                                               bIsLANGame;                                               // 0x0598(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x7];                                       // 0x0599(0x0007) MISSED OFFSET
	struct FString                                     HubGUIDString;                                            // 0x05A0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTBaseGameMode");
		return ptr;
	}


	struct FString GetHostId();
	bool STATIC_EvalBoolOptions(const struct FString& InOpt, bool Default);
	bool AllowTextMessage(bool bIsTeamMessage, class AUTBasePlayerController* Sender, struct FString* Msg);
};


// Class UnrealTournament.UTEmptyServerGameMode
// 0x0000 (0x05B0 - 0x05B0)
class AUTEmptyServerGameMode : public AUTBaseGameMode
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTEmptyServerGameMode");
		return ptr;
	}

};


// Class UnrealTournament.UTServerBeaconClient
// 0x0190 (0x05B0 - 0x0420)
class AUTServerBeaconClient : public AOnlineBeaconClient
{
public:
	unsigned char                                      UnknownData00[0x190];                                     // 0x0420(0x0190) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTServerBeaconClient");
		return ptr;
	}


	void ServerRequestQuickplay(const struct FString& MatchType, int ELORank, bool bBeginner);
	void ServerRequestNextInstancePlayer(int InstanceIndex, int LastInstancePlayersIndex);
	void ServerRequestNextInstance(int LastInstanceIndex);
	void ServerRequestInstanceJoin(const struct FString& InstanceId, bool bSpectator, int Rank);
	void ServerRequestInfo();
	void ServerPing();
	void ClientWaitForQuickplay(uint32_t bNewInstance);
	void ClientRequestInstanceResult(TEnumAsByte<EInstanceJoinResult> JoinResult, const struct FString& Params);
	void ClientReceiveInstancePlayer(int InstanceIndex, int InInstancePlayersCount, const struct FMatchPlayerListStruct& inPlayerInfo);
	void ClientReceiveInstance(int InInstanceCount, int TotalInstances, const struct FServerInstanceData& InstanceInfo);
	void ClientReceiveInfo(const struct FServerBeaconInfo& ServerInfo, int NumInstances);
	void ClientReceivedAllInstancePlayers(int InstanceIndex, int FinalCount);
	void ClientReceivedAllInstance(int FinalCount);
	void ClientQuickplayNotAvailable();
	void ClientPong(int inServerTickRate);
	void ClientJoinQuickplay(const struct FString& InstanceGuid);
};


// Class UnrealTournament.UTReplicatedMapInfo
// 0x00E0 (0x0468 - 0x0388)
class AUTReplicatedMapInfo : public AInfo
{
public:
	struct FString                                     MapPackageName;                                           // 0x0388(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor)
	struct FString                                     MapAssetName;                                             // 0x0398(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor)
	struct FString                                     Title;                                                    // 0x03A8(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor)
	struct FString                                     Author;                                                   // 0x03B8(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor)
	struct FString                                     Description;                                              // 0x03C8(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor)
	int                                                OptimalPlayerCount;                                       // 0x03D8(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	int                                                OptimalTeamPlayerCount;                                   // 0x03DC(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	struct FString                                     MapScreenshotReference;                                   // 0x03E0(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor)
	struct FPackageRedirectReference                   Redirect;                                                 // 0x03F0(0x0040) (BlueprintVisible, BlueprintReadOnly, Net)
	bool                                               bIsMeshedMap;                                             // 0x0430(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bIsEpicMap;                                               // 0x0431(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0432(0x0002) MISSED OFFSET
	int                                                VoteCount;                                                // 0x0434(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0438(0x0010) MISSED OFFSET
	class UTexture2D*                                  MapScreenshot;                                            // 0x0448(0x0008) (ZeroConstructor, IsPlainOldData)
	bool                                               bHasRights;                                               // 0x0450(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x17];                                      // 0x0451(0x0017) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTReplicatedMapInfo");
		return ptr;
	}


	void OnRep_VoteCount();
	void OnRep_MapScreenshotReference();
	void OnRep_MapPackageName();
};


// Class UnrealTournament.UTServerBeaconLobbyClient
// 0x0050 (0x0470 - 0x0420)
class AUTServerBeaconLobbyClient : public AOnlineBeaconClient
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0420(0x0028) MISSED OFFSET
	TArray<class AUTReplicatedMapInfo*>                AllowedMaps;                                              // 0x0448(0x0010) (ZeroConstructor)
	TArray<struct FUniqueNetIdRepl>                    BannedIds;                                                // 0x0458(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0468(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTServerBeaconLobbyClient");
		return ptr;
	}


	void Lobby_UpdatePlayer(uint32_t InstanceId, const struct FRemotePlayerInfo& PlayerInfo, bool bLastUpdate);
	void Lobby_UpdateMatch(uint32_t InstanceId, const struct FMatchUpdate& MatchUpdate);
	void Lobby_StartGame(uint32_t InstanceId, const struct FMatchUpdate& MatchUpdate);
	void Lobby_RequestNextBanFromServer(uint32_t InstanceId, int LastIndex);
	void Lobby_RequestFirstBanFromServer(uint32_t InstanceId);
	void Lobby_ReceiveUserMessage(const struct FString& Message, const struct FString& SenderName);
	void Lobby_NotifyInstanceIsReady(uint32_t InstanceId, const struct FGuid& InstanceGuid, const struct FString& MapName);
	void Lobby_IsDedicatedInstance(const struct FGuid& InstanceGuid, const struct FString& InHubKey, const struct FString& ServerName, const struct FString& ServerGameMode, const struct FString& ServerDescription, int MaxPlayers, bool bTeamGame);
	void Lobby_InstanceEmpty(uint32_t InstanceId);
	void Lobby_EndGame(uint32_t InstanceId, const struct FMatchUpdate& MatchUpdate);
	void Instance_ReceiveUserMessage(const struct FString& TargetUniqueId, const struct FString& Message);
	void Instance_ReceiveBan(const struct FUniqueNetIdRepl& BanId, int Index, int Total, bool bFinished);
	void Instance_ReceieveRconMessage(const struct FString& TargetUniqueId, const struct FString& AdminMessage);
	void Instance_Kick(const struct FString& TargetUniqueId);
	void Instance_ForceShutdown();
	void Instance_AuthorizeAdmin(const struct FString& AdminId, bool bIsAdmin);
	void AuthorizeDedicatedInstance(const struct FGuid& HubGuid, int InstanceId);
};


// Class UnrealTournament.UTBotPlayer
// 0x0000 (0x0850 - 0x0850)
class AUTBotPlayer : public AUTBot
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTBotPlayer");
		return ptr;
	}

};


// Class UnrealTournament.UTPlayerStart
// 0x0018 (0x03D0 - 0x03B8)
class AUTPlayerStart : public APlayerStart
{
public:
	bool                                               bIgnoreInShowdown;                                        // 0x03B8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIgnoreInNonTeamGame;                                     // 0x03B9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIgnoreInASymCTF;                                         // 0x03BA(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bDefensiveStart;                                          // 0x03BB(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x03BC(0x0004) MISSED OFFSET
	class AUTPickup*                                   AssociatedPickup;                                         // 0x03C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       PlayerStartGroup;                                         // 0x03C8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTPlayerStart");
		return ptr;
	}

};


// Class UnrealTournament.UTGameMode
// 0x0358 (0x0908 - 0x05B0)
class AUTGameMode : public AUTBaseGameMode
{
public:
	class AUTGameState*                                UTGameState;                                              // 0x05B0(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              GameDifficulty;                                           // 0x05B8(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MatchSummaryDelay;                                        // 0x05BC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MatchSummaryTime;                                         // 0x05C0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      bAllowOvertime : 1;                                       // 0x05C4(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bCasterControl : 1;                                       // 0x05C4(0x0001)
	unsigned char                                      bCasterReady : 1;                                         // 0x05C4(0x0001)
	unsigned char                                      bIsQuickMatch : 1;                                        // 0x05C4(0x0001)
	unsigned char                                      bIsVSAI : 1;                                              // 0x05C4(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x3];                                       // 0x05C5(0x0003) MISSED OFFSET
	bool                                               bForceRespawn;                                            // 0x05C8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bHasRespawnChoices;                                       // 0x05C9(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x05CA(0x0006) MISSED OFFSET
	TArray<class APlayerStart*>                        PlayerStarts;                                             // 0x05D0(0x0010) (ZeroConstructor)
	bool                                               bCheckAgainstPotentialStarts;                             // 0x05E0(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bAllowPickupAnnouncements;                                // 0x05E1(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bAllowAllArmorPickups;                                    // 0x05E2(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bHideInUI;                                                // 0x05E3(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bPastELOLimit;                                            // 0x05E4(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bRequireReady;                                            // 0x05E5(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bRequireFull;                                             // 0x05E6(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bForceNoBots;                                             // 0x05E7(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bAutoAdjustBotSkill;                                      // 0x05E8(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x05E9(0x0003) MISSED OFFSET
	float                                              RedTeamSkill;                                             // 0x05EC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BlueTeamSkill;                                            // 0x05F0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                BlueTeamKills;                                            // 0x05F4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                RedTeamKills;                                             // 0x05F8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                BlueTeamDeaths;                                           // 0x05FC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                RedTeamDeaths;                                            // 0x0600(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StartDelay;                                               // 0x0604(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LastMatchNotReady;                                        // 0x0608(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                GoalScore;                                                // 0x060C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                TimeLimit;                                                // 0x0610(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              XPMultiplier;                                             // 0x0614(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                XPCapPerMin;                                              // 0x0618(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bGameEnded : 1;                                           // 0x061C(0x0001)
	unsigned char                                      bTeamGame : 1;                                            // 0x061C(0x0001)
	unsigned char                                      bForceWarmup : 1;                                         // 0x061C(0x0001)
	unsigned char                                      UnknownData03[0x3];                                       // 0x061D(0x0003) MISSED OFFSET
	bool                                               bFirstBloodOccurred;                                      // 0x0620(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0621(0x0003) MISSED OFFSET
	int                                                MaxWaitForPlayers;                                        // 0x0624(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                QuickWaitForPlayers;                                      // 0x0628(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ShortWaitForPlayers;                                      // 0x062C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                DefaultMaxPlayers;                                        // 0x0630(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              StartPlayTime;                                            // 0x0634(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MatchIntroTime;                                           // 0x0638(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                BotFillCount;                                             // 0x063C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                WarmupFillCount;                                          // 0x0640(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RespawnWaitTime;                                          // 0x0644(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ForceRespawnTime;                                         // 0x0648(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Countdown;                                                // 0x064C(0x0004) (ZeroConstructor, IsPlainOldData)
	class AActor*                                      LastStartSpot;                                            // 0x0650(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              EndTime;                                                  // 0x0658(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bWeaponStayActive;                                        // 0x065C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x065D(0x0003) MISSED OFFSET
	class AActor*                                      EndGameFocus;                                             // 0x0660(0x0008) (ZeroConstructor, IsPlainOldData)
	class UClass*                                      DeathMessageClass;                                        // 0x0668(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      GameMessageClass;                                         // 0x0670(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      VictoryMessageClass;                                      // 0x0678(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bClearPlayerInventory;                                    // 0x0680(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x7];                                       // 0x0681(0x0007) MISSED OFFSET
	TArray<class UClass*>                              DefaultInventory;                                         // 0x0688(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               bDamageHurtsHealth;                                       // 0x0698(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bAmmoIsLimited;                                           // 0x0699(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bOfflineChallenge;                                        // 0x069A(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bBasicTrainingGame;                                       // 0x069B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bPlayInventoryTutorialAnnouncements;                      // 0x069C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bNoTrainingMenu;                                          // 0x069D(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsInstagib;                                              // 0x069E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x1];                                       // 0x069F(0x0001) MISSED OFFSET
	struct FName                                       ChallengeTag;                                             // 0x06A0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ChallengeDifficulty;                                      // 0x06A8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LastGlobalTauntTime;                                      // 0x06AC(0x0004) (ZeroConstructor, IsPlainOldData)
	TArray<class UClass*>                              BuiltInMutators;                                          // 0x06B0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FString>                             ConfigMutators;                                           // 0x06C0(0x0010) (ZeroConstructor, Config)
	struct FString                                     UILastStartingMap;                                        // 0x06D0(0x0010) (ZeroConstructor, Config)
	struct FString                                     RconNextMapName;                                          // 0x06E0(0x0010) (ZeroConstructor)
	int                                                AutoRestartTime;                                          // 0x06F0(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData08[0x4];                                       // 0x06F4(0x0004) MISSED OFFSET
	TArray<struct FString>                             ProtoRed;                                                 // 0x06F8(0x0010) (ZeroConstructor, Config, GlobalConfig)
	TArray<struct FString>                             ProtoBlue;                                                // 0x0708(0x0010) (ZeroConstructor, Config, GlobalConfig)
	bool                                               bUseProtoTeams;                                           // 0x0718(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x3];                                       // 0x0719(0x0003) MISSED OFFSET
	int                                                RedProtoIndex;                                            // 0x071C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                BlueProtoIndex;                                           // 0x0720(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0x4];                                       // 0x0724(0x0004) MISSED OFFSET
	class UClass*                                      CastingGuideHUDClass;                                     // 0x0728(0x0008) (Edit, BlueprintVisible, ZeroConstructor, NoClear, IsPlainOldData)
	class AUTMutator*                                  BaseMutator;                                              // 0x0730(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      BotClass;                                                 // 0x0738(0x0008) (Edit, BlueprintVisible, ZeroConstructor, NoClear, IsPlainOldData)
	TArray<class UUTBotCharacter*>                     EligibleBots;                                             // 0x0740(0x0010) (ZeroConstructor)
	class UClass*                                      SquadType;                                                // 0x0750(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MaxSquadSize;                                             // 0x0758(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData11[0x14];                                      // 0x075C(0x0014) MISSED OFFSET
	bool                                               bRecordDemo;                                              // 0x0770(0x0001) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	unsigned char                                      UnknownData12[0x7];                                       // 0x0771(0x0007) MISSED OFFSET
	struct FString                                     DemoFilename;                                             // 0x0778(0x0010) (ZeroConstructor, Config, GlobalConfig)
	bool                                               bDevServer;                                               // 0x0788(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData13[0x3];                                       // 0x0789(0x0003) MISSED OFFSET
	float                                              EndOfMatchMessageDelay;                                   // 0x078C(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData14[0x20];                                      // 0x0790(0x0020) MISSED OFFSET
	class UClass*                                      ImpactHammerClass;                                        // 0x07B0(0x0008) (ZeroConstructor, IsPlainOldData)
	bool                                               bGameHasImpactHammer;                                     // 0x07B8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bSetPlayerDefaultsNewSpawn;                               // 0x07B9(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bPlayersStartWithArmor;                                   // 0x07BA(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData15[0x25];                                      // 0x07BB(0x0025) MISSED OFFSET
	class UClass*                                      StartingArmorClass;                                       // 0x07E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bRemovePawnsAtStart;                                      // 0x07E8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData16[0x3];                                       // 0x07E9(0x0003) MISSED OFFSET
	int                                                WarmupKills;                                              // 0x07EC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bTrackKillAssists;                                        // 0x07F0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData17[0x57];                                      // 0x07F1(0x0057) MISSED OFFSET
	bool                                               bRecordReplays;                                           // 0x0848(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bRankedSession;                                           // 0x0849(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bUseMatchmakingSession;                                   // 0x084A(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData18[0x1];                                       // 0x084B(0x0001) MISSED OFFSET
	float                                              LobbyInitialTimeoutTime;                                  // 0x084C(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bDisableCloudStats;                                       // 0x0850(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData19[0x7];                                       // 0x0851(0x0007) MISSED OFFSET
	struct FString                                     ForcedInstanceGameOptions;                                // 0x0858(0x0010) (ZeroConstructor, Config)
	unsigned char                                      UnknownData20[0x1];                                       // 0x0868(0x0001) MISSED OFFSET
	bool                                               bSkipReportingMatchResults;                               // 0x0869(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData21[0x6];                                       // 0x086A(0x0006) MISSED OFFSET
	struct FString                                     HubAddress;                                               // 0x0870(0x0010) (ZeroConstructor, Config)
	struct FString                                     HubKey;                                                   // 0x0880(0x0010) (ZeroConstructor, Config)
	class AUTServerBeaconLobbyClient*                  LobbyBeacon;                                              // 0x0890(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData22[0x10];                                      // 0x0898(0x0010) MISSED OFFSET
	int                                                ExpectedPlayerCount;                                      // 0x08A8(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bNoDefaultLeaderHat;                                      // 0x08AC(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData23[0x3];                                       // 0x08AD(0x0003) MISSED OFFSET
	int                                                MapVoteTime;                                              // 0x08B0(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              MaxTimeMargin;                                            // 0x08B4(0x0004) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	float                                              MinTimeMargin;                                            // 0x08B8(0x0004) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	float                                              TimeMarginSlack;                                          // 0x08BC(0x0004) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	bool                                               bSpeedHackDetection;                                      // 0x08C0(0x0001) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	unsigned char                                      UnknownData24[0xF];                                       // 0x08C1(0x000F) MISSED OFFSET
	bool                                               bDisableMapVote;                                          // 0x08D0(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData25[0x7];                                       // 0x08D1(0x0007) MISSED OFFSET
	int                                                TutorialMask;                                             // 0x08D8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData26[0x4];                                       // 0x08DC(0x0004) MISSED OFFSET
	TArray<struct FStringClassReference>               AssetsToPreloadOnClients;                                 // 0x08E0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      bDebugHitScanReplication : 1;                             // 0x08F0(0x0001)
	unsigned char                                      UnknownData27[0x3];                                       // 0x08F1(0x0003) MISSED OFFSET
	float                                              ReturningPlayerGraceCutoff;                               // 0x08F4(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FString                                     ActiveRuleTag;                                            // 0x08F8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTGameMode");
		return ptr;
	}


	void TravelToNextMap();
	void SetWorldGravity(float NewGravity);
	void SetPlayerDefaults(class APawn* PlayerPawn);
	void SetBotCount(unsigned char NewCount);
	void ScoreTeamKill(class AController* Killer, class AController* Other, class APawn* KilledPawn, class UClass* DamageType);
	void ScorePickup(class AUTPickup* Pickup, class AUTPlayerState* PickedUpBy, class AUTPlayerState* LastPickedUpBy);
	void ScoreObject(class AUTCarriedObject* GameObject, class AUTCharacter* HolderPawn, class AUTPlayerState* Holder, const struct FName& Reason);
	void ScoreKill(class AController* Killer, class AController* Other, class APawn* KilledPawn, class UClass* DamageType);
	void ScoreDamage(int DamageAmount, class AUTPlayerState* Victim, class AUTPlayerState* Attacker);
	bool PreventDeath(class APawn* KilledPawn, class AController* Killer, class UClass* DamageType, const struct FHitResult& HitInfo);
	void PostInitGame(const struct FString& Options);
	bool PlayerCanAltRestart(class APlayerController* Player);
	bool OverridePickupQuery(class APawn* Other, class UClass* ItemClass, class AActor* Pickup, bool* bAllowPickup);
	void NotifyPlayerDefaultsSet(class APawn* PlayerPawn);
	bool ModifyDamage(class APawn* Injured, class AController* InstigatedBy, const struct FHitResult& HitInfo, class AActor* DamageCauser, class UClass* DamageType, int* Damage, struct FVector* Momentum);
	void KillBots();
	void KickIdlePlayers();
	class AUTPlayerState* IsThereAWinner(bool* bTied);
	bool IsPlayerIdle(class AUTPlayerState* PS);
	void GetGood();
	class AUTBotPlayer* ForceAddNamedBot(const struct FString& BotName, unsigned char TeamNum);
	class AUTBotPlayer* ForceAddBot(unsigned char TeamNum);
	void EndGame(class AUTPlayerState* Winner, const struct FName& Reason);
	void DiscardInventory(class APawn* Other, class AController* Killer);
	void Demigod();
	bool CheckScore(class AUTPlayerState* Scorer);
	bool CheckRelevance(class AActor* Other);
	bool ChangeTeam(class AController* Player, unsigned char NewTeam, bool bBroadcast);
	void BroadcastSpectator(class AActor* Sender, class UClass* Message, int Switch, class APlayerState* RelatedPlayerState_2, class APlayerState* RelatedPlayerState_3, class UObject* OptionalObject);
	void BlueprintSendLocalized(class AActor* Sender, class AUTPlayerController* Receiver, class UClass* Message, int Switch, class APlayerState* RelatedPlayerState_2, class APlayerState* RelatedPlayerState_3, class UObject* OptionalObject);
	void BlueprintBroadcastLocalized(class AActor* Sender, class UClass* Message, int Switch, class APlayerState* RelatedPlayerState_2, class APlayerState* RelatedPlayerState_3, class UObject* OptionalObject);
	void AddMutatorClass(class UClass* MutClass);
	void AddMutator(const struct FString& MutatorPath);
	void AddBots(unsigned char Num);
};


// Class UnrealTournament.UTDMGameMode
// 0x0018 (0x0920 - 0x0908)
class AUTDMGameMode : public AUTGameMode
{
public:
	unsigned char                                      bPlayedTenKillsRemain : 1;                                // 0x0908(0x0001)
	unsigned char                                      bPlayedFiveKillsRemain : 1;                               // 0x0908(0x0001)
	unsigned char                                      bPlayedOneKillRemains : 1;                                // 0x0908(0x0001)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0909(0x0007) MISSED OFFSET
	struct FString                                     DMVoiceChatChannel;                                       // 0x0910(0x0010) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTDMGameMode");
		return ptr;
	}

};


// Class UnrealTournament.UTTeamGameMode
// 0x0060 (0x0968 - 0x0908)
class AUTTeamGameMode : public AUTGameMode
{
public:
	TArray<class AUTTeamInfo*>                         Teams;                                                    // 0x0908(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FLinearColor>                        TeamColors;                                               // 0x0918(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FText>                               TeamNames;                                                // 0x0928(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      NumTeams;                                                 // 0x0938(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0939(0x0003) MISSED OFFSET
	int                                                BotTeamSize;                                              // 0x093C(0x0004) (ZeroConstructor, IsPlainOldData)
	class UClass*                                      TeamClass;                                                // 0x0940(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bAllowURLTeamCountOverride;                               // 0x0948(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bBalanceTeams;                                            // 0x0949(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bAnnounceTeam;                                            // 0x094A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bUseTeamStarts;                                           // 0x094B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bForcedBalance;                                           // 0x094C(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x094D(0x0003) MISSED OFFSET
	float                                              TeamDamagePct;                                            // 0x0950(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TeamMomentumPct;                                          // 0x0954(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              WallRunMomentumPct;                                       // 0x0958(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                MercyScore;                                               // 0x095C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bHighScorerPerTeamBasis;                                  // 0x0960(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bHasBroadcastDominating;                                  // 0x0961(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x0962(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTTeamGameMode");
		return ptr;
	}

};


// Class UnrealTournament.UTCarriedObjectMessage
// 0x0000 (0x0058 - 0x0058)
class UUTCarriedObjectMessage : public UUTLocalMessage
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTCarriedObjectMessage");
		return ptr;
	}

};


// Class UnrealTournament.UTProjectileMovementComponent
// 0x0040 (0x01E0 - 0x01A0)
class UUTProjectileMovementComponent : public UProjectileMovementComponent
{
public:
	float                                              AccelRate;                                                // 0x01A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bKeepPhysicsVolumeWhenStopped;                            // 0x01A4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x01A5(0x0003) MISSED OFFSET
	struct FVector                                     Acceleration;                                             // 0x01A8(0x000C) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	struct FVector                                     ReplicatedAcceleration;                                   // 0x01B4(0x000C) (Net, ZeroConstructor, IsPlainOldData)
	float                                              HitZStopSimulatingThreshold;                              // 0x01C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x01C4(0x0004) MISSED OFFSET
	TArray<class UPrimitiveComponent*>                 AddlUpdatedComponents;                                    // 0x01C8(0x0010) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor)
	bool                                               bPreventZHoming;                                          // 0x01D8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x01D9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTProjectileMovementComponent");
		return ptr;
	}


	void ServerUpdateState(const struct FVector& InAcceleration);
};


// Class UnrealTournament.UTCarriedObject
// 0x0238 (0x05C0 - 0x0388)
class AUTCarriedObject : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0388(0x0008) MISSED OFFSET
	struct FName                                       ObjectState;                                              // 0x0390(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	class AUTPlayerState*                              Holder;                                                   // 0x0398(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	class AUTPlayerState*                              LastHolder;                                               // 0x03A0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PickedUpTime;                                             // 0x03A8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x03AC(0x0004) MISSED OFFSET
	TArray<struct FAssistTracker>                      AssistTracking;                                           // 0x03B0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<class AController*>                         HolderRescuers;                                           // 0x03C0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	class AUTCharacter*                                HoldingPawn;                                              // 0x03D0(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             FirstPersonRedFlagEffect;                                 // 0x03D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             FirstPersonBlueFlagEffect;                                // 0x03E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class AUTGameObjective*                            HomeBase;                                                 // 0x03E8(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	class AUTTeamInfo*                                 Team;                                                     // 0x03F0(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              LastPingedTime;                                           // 0x03F8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x03FC(0x0004) MISSED OFFSET
	class AUTPlayerState*                              LastPinger;                                               // 0x0400(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PingedDuration;                                           // 0x0408(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TargetPingedDuration;                                     // 0x040C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bShouldPingFlag;                                          // 0x0410(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bCurrentlyPinged;                                         // 0x0411(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bSlowsMovement;                                           // 0x0412(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bWaitingForFirstPickup;                                   // 0x0413(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0414(0x0004) MISSED OFFSET
	class UClass*                                      GhostFlagClass;                                           // 0x0418(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bWasInEnemyBase;                                          // 0x0420(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0421(0x0003) MISSED OFFSET
	float                                              EnteredEnemyBaseTime;                                     // 0x0424(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<class AUTGhostFlag*>                        MyGhostFlags;                                             // 0x0428(0x0010) (ZeroConstructor)
	bool                                               bSingleGhostFlag;                                         // 0x0438(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0439(0x0003) MISSED OFFSET
	struct FVector                                     HomeBaseOffset;                                           // 0x043C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    HomeBaseRotOffset;                                        // 0x0448(0x000C) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x0454(0x0004) MISSED OFFSET
	struct FName                                       Holder3PSocketName;                                       // 0x0458(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Holder3PTransform;                                        // 0x0460(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    Holder3PRotation;                                         // 0x046C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bAnyoneCanPickup : 1;                                     // 0x0478(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bEnemyCanPickup : 1;                                      // 0x0478(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bFriendlyCanPickup : 1;                                   // 0x0478(0x0001) (Edit, BlueprintVisible, Net)
	unsigned char                                      bTeamPickupSendsHome : 1;                                 // 0x0478(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bEnemyPickupSendsHome : 1;                                // 0x0478(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bSendHomeOnScore : 1;                                     // 0x0478(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData07[0x3];                                       // 0x0479(0x0003) MISSED OFFSET
	float                                              AutoReturnTime;                                           // 0x047C(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      FlagReturnTime;                                           // 0x0480(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x7];                                       // 0x0481(0x0007) MISSED OFFSET
	class UClass*                                      MessageClass;                                             // 0x0488(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnCarriedObjectStateChangedDelegate;                      // 0x0490(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCarriedObjectHolderChangedDelegate;                     // 0x04A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	float                                              LastGameMessageTime;                                      // 0x04B0(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x4];                                       // 0x04B4(0x0004) MISSED OFFSET
	class USoundBase*                                  HolderPickupSound;                                        // 0x04B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  PickupSound;                                              // 0x04C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  DropSound;                                                // 0x04C8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  HeldFlagAmbientSound;                                     // 0x04D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     LastTeleportedLoc;                                        // 0x04D8(0x000C) (ZeroConstructor, IsPlainOldData)
	float                                              LastTeleportedTime;                                       // 0x04E4(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FText                                       LastLocationName;                                         // 0x04E8(0x0018)
	class UCapsuleComponent*                           Collision;                                                // 0x0500(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class UUTProjectileMovementComponent*              MovementComponent;                                        // 0x0508(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	TArray<struct FFlagTrailPos>                       PastPositions;                                            // 0x0510(0x0010) (ZeroConstructor)
	struct FVector                                     RecentPosition[0x2];                                      // 0x0520(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     MidPoints[0x3];                                           // 0x0538(0x000C) (ZeroConstructor, IsPlainOldData)
	int                                                MidPointPos;                                              // 0x055C(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bGradualAutoReturn;                                       // 0x0560(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bWaitForNearbyPlayer;                                     // 0x0561(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0x2];                                       // 0x0562(0x0002) MISSED OFFSET
	float                                              MinGradualReturnDist;                                     // 0x0564(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bDisplayHolderTrail;                                      // 0x0568(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData11[0x7];                                       // 0x0569(0x0007) MISSED OFFSET
	class UParticleSystem*                             HolderTrailEffect;                                        // 0x0570(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UParticleSystemComponent*                    HolderTrail;                                              // 0x0578(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData12[0x8];                                       // 0x0580(0x0008) MISSED OFFSET
	class AUTCharacter*                                LastHoldingPawn;                                          // 0x0588(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bMovementEnabled;                                         // 0x0590(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData13[0x3];                                       // 0x0591(0x0003) MISSED OFFSET
	float                                              TakenTime;                                                // 0x0594(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LastDroppedMessageTime;                                   // 0x0598(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LastNeedFlagMessageTime;                                  // 0x059C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData14[0x14];                                      // 0x05A0(0x0014) MISSED OFFSET
	float                                              WeightSpeedPctModifier;                                   // 0x05B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData15[0x8];                                       // 0x05B8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTCarriedObject");
		return ptr;
	}


	void Use();
	void UpdateOutline();
	void TryPickup(class AUTCharacter* Character);
	void SetHolder(class AUTCharacter* NewHolder);
	void SendHome();
	void Score(const struct FName& Reason, class AUTCharacter* ScoringPawn, class AUTPlayerState* ScoringPS);
	void PlayAlarm();
	void OnStop(const struct FHitResult& Hit);
	void OnRep_Team();
	void OnRep_Moving();
	void OnOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnObjectStateChanged();
	void OnHolderChanged();
	void NoLongerHeld(class AController* InstigatedBy);
	void MoveToHome();
	bool IsHome();
	unsigned char GetTeamNum();
	void Drop(class AController* Killer);
	void DetachFrom(class USkeletalMeshComponent* AttachToMesh);
	void CheckTouching();
	void ChangeState(const struct FName& NewCarriedObjectState);
	void AttachTo(class USkeletalMeshComponent* AttachToMesh);
};


// Class UnrealTournament.UTFlag
// 0x0090 (0x0650 - 0x05C0)
class AUTFlag : public AUTCarriedObject
{
public:
	float                                              FlagWorldScale;                                           // 0x05C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FlagHeldScale;                                            // 0x05C4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ClothBlendHome;                                           // 0x05C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ClothBlendHeld;                                           // 0x05CC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USkeletalMeshComponent*                      Mesh;                                                     // 0x05D0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UMaterialInstanceDynamic*                    MeshMID;                                                  // 0x05D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	class UParticleSystem*                             CaptureEffect;                                            // 0x05E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             ReturnSrcEffect;                                          // 0x05E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             ReturnDestEffect;                                         // 0x05F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 ReturnParamCurve;                                         // 0x05F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     MeshOffset;                                               // 0x0600(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     HeldOffset;                                               // 0x060C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              NearTeammateDist;                                         // 0x0618(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x061C(0x0004) MISSED OFFSET
	class USkeletalMeshComponent*                      ReturningMesh;                                            // 0x0620(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UMaterialInstanceDynamic*                    ReturningMeshMID;                                         // 0x0628(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0630(0x0008) MISSED OFFSET
	class USkeletalMeshComponent*                      CustomDepthMesh;                                          // 0x0638(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0640(0x0008) MISSED OFFSET
	float                                              FlagDropTime;                                             // 0x0648(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x064C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTFlag");
		return ptr;
	}


	void PlayCaptureEffect();
};


// Class UnrealTournament.UTCTFFlag
// 0x0010 (0x0660 - 0x0650)
class AUTCTFFlag : public AUTFlag
{
public:
	struct FVector_NetQuantize                         CaptureEffectLoc;                                         // 0x0650(0x000C) (Net)
	unsigned char                                      UnknownData00[0x4];                                       // 0x065C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTCTFFlag");
		return ptr;
	}

};


// Class UnrealTournament.UTCharacterMovement
// 0x01C0 (0x08D0 - 0x0710)
class UUTCharacterMovement : public UCharacterMovementComponent
{
public:
	float                                              MAXPOSITIONERRORSQUARED;                                  // 0x0710(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LastClientAdjustmentTime;                                 // 0x0714(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LastGoodMoveAckTime;                                      // 0x0718(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bLargeCorrection;                                         // 0x071C(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bDrawJumps;                                               // 0x071D(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x071E(0x0002) MISSED OFFSET
	float                                              LargeCorrectionThreshold;                                 // 0x0720(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MinTimeBetweenClientAdjustments;                          // 0x0724(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0728(0x0004) MISSED OFFSET
	float                                              AvgSpeed;                                                 // 0x072C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MaxFallingAcceleration;                                   // 0x0730(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxSwimmingAcceleration;                                  // 0x0734(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FastInitialAcceleration;                                  // 0x0738(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxFastAccelSpeed;                                        // 0x073C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxRelativeSwimmingAccelNumerator;                        // 0x0740(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxRelativeSwimmingAccelDenominator;                      // 0x0744(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BrakingDecelerationSliding;                               // 0x0748(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DefaultBrakingDecelerationWalking;                        // 0x074C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxWaterSpeed;                                            // 0x0750(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bForceTeamCollision;                                      // 0x0754(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0755(0x0003) MISSED OFFSET
	float                                              SwimmingWallPushImpulse;                                  // 0x0758(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFallingInWater;                                          // 0x075C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bSlidingAlongWall;                                        // 0x075D(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x075E(0x0002) MISSED OFFSET
	float                                              EasyImpactImpulse;                                        // 0x0760(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              EasyImpactDamage;                                         // 0x0764(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FullImpactImpulse;                                        // 0x0768(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FullImpactDamage;                                         // 0x076C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ImpactMaxHorizontalVelocity;                              // 0x0770(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ImpactMaxVerticalFactor;                                  // 0x0774(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxUndampedImpulse;                                       // 0x0778(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bShotSpawned;                                             // 0x077C(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bCanDodge;                                                // 0x077D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x2];                                       // 0x077E(0x0002) MISSED OFFSET
	float                                              DodgeImpulseHorizontal;                                   // 0x0780(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DodgeImpulseVertical;                                     // 0x0784(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              WallDodgeTraceDist;                                       // 0x0788(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              WallDodgeImpulseHorizontal;                               // 0x078C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              WallDodgeImpulseVertical;                                 // 0x0790(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              WallDodgeSecondImpulseVertical;                           // 0x0794(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              WallDodgeGraceVelocityZ;                                  // 0x0798(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              WallDodgeMinNormal;                                       // 0x079C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     LastWallDodgeNormal;                                      // 0x07A0(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxConsecutiveWallDodgeDP;                                // 0x07AC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxWallDodges;                                            // 0x07B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                CurrentWallDodgeCount;                                    // 0x07B4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              WallDodgeResetInterval;                                   // 0x07B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinAdditiveDodgeFallSpeed;                                // 0x07BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxAdditiveDodgeJumpSpeed;                                // 0x07C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DodgeLandingSpeedFactor;                                  // 0x07C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DodgeJumpLandingSpeedFactor;                              // 0x07C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DodgeResetInterval;                                       // 0x07CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DodgeLandingTimeAdjust;                                   // 0x07D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DodgeJumpResetInterval;                                   // 0x07D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DodgeMaxHorizontalVelocity;                               // 0x07D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DodgeResetTime;                                           // 0x07DC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DodgeLandingAcceleration;                                 // 0x07E0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsDodging;                                               // 0x07E4(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsFloorSliding;                                          // 0x07E5(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bWasFloorSliding;                                         // 0x07E6(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsTaunting;                                              // 0x07E7(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bWantsFloorSlide;                                         // 0x07E8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bWantsWallSlide;                                          // 0x07E9(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x6];                                       // 0x07EA(0x0006) MISSED OFFSET
	float                                              FloorSlideEndingSpeedFactor;                              // 0x07F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FloorSlideAcceleration;                                   // 0x07F4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxFloorSlideSpeed;                                       // 0x07F8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxInitialFloorSlideSpeed;                                // 0x07FC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FloorSlideDuration;                                       // 0x0800(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FloorSlideEndTime;                                        // 0x0804(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FloorSlideTapTime;                                        // 0x0808(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FloorSlideBonusTapInterval;                               // 0x080C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FloorSlideJumpZ;                                          // 0x0810(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bSlideFromGround;                                         // 0x0814(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0xB];                                       // 0x0815(0x000B) MISSED OFFSET
	float                                              FloorSlideSlopeBraking;                                   // 0x0820(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bAllowSlopeDodgeBoost;                                    // 0x0824(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x3];                                       // 0x0825(0x0003) MISSED OFFSET
	float                                              SlopeDodgeScaling;                                        // 0x0828(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x8];                                       // 0x082C(0x0008) MISSED OFFSET
	int                                                MaxMultiJumpCount;                                        // 0x0834(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                CurrentMultiJumpCount;                                    // 0x0838(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bExplicitJump;                                            // 0x083C(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bAllowDodgeMultijumps;                                    // 0x083D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bAllowJumpMultijumps;                                     // 0x083E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x1];                                       // 0x083F(0x0001) MISSED OFFSET
	float                                              MaxMultiJumpZSpeed;                                       // 0x0840(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bAlwaysAllowFallingMultiJump;                             // 0x0844(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0x3];                                       // 0x0845(0x0003) MISSED OFFSET
	float                                              MultiJumpImpulse;                                         // 0x0848(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DodgeJumpImpulse;                                         // 0x084C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MultiJumpAirControl;                                      // 0x0850(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DodgeAirControl;                                          // 0x0854(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bRestrictedJump;                                          // 0x0858(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData11[0xF];                                       // 0x0859(0x000F) MISSED OFFSET
	bool                                               bIsDodgeLanding;                                          // 0x0868(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData12[0x3];                                       // 0x0869(0x0003) MISSED OFFSET
	float                                              LandingStepUp;                                            // 0x086C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LandingAssistBoost;                                       // 0x0870(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bJumpAssisted;                                            // 0x0874(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData13[0x3];                                       // 0x0875(0x0003) MISSED OFFSET
	float                                              JumpTime;                                                 // 0x0878(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxWallRunFallZ;                                          // 0x087C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxWallRunRiseZ;                                          // 0x0880(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              WallRunGravityScaling;                                    // 0x0884(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinWallSlideSpeed;                                        // 0x0888(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxSlideWallDist;                                         // 0x088C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsAgainstWall;                                           // 0x0890(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData14[0x3];                                       // 0x0891(0x0003) MISSED OFFSET
	float                                              LastCheckedAgainstWall;                                   // 0x0894(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     WallSlideNormal;                                          // 0x0898(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData15[0x4];                                       // 0x08A4(0x0004) MISSED OFFSET
	class UPhysicalMaterial*                           WallRunMaterial;                                          // 0x08A8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     SimulatedVelocity;                                        // 0x08B0(0x000C) (ZeroConstructor, IsPlainOldData)
	float                                              CurrentServerMoveTime;                                    // 0x08BC(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData16[0x10];                                      // 0x08C0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTCharacterMovement");
		return ptr;
	}


	bool WantsWallSlide();
	bool WantsFloorSlide();
	void UpdateWallSlide(bool bNewWantsWallSlide);
	void UpdateFloorSlide(bool bNewWantsFloorSlide);
	bool PerformDodge(struct FVector* DodgeDir, struct FVector* DodgeCross);
	void GetSimpleFloorInfo(struct FVector* ImpactPoint, struct FVector* Normal);
	float FallingDamageReduction(float FallingDamage, const struct FHitResult& Hit);
	void ClientNoBaseAdjustPosition(float TimeStamp, const struct FVector& NewLoc, const struct FVector& NewVelocity, unsigned char ServerMovementMode);
	void ClearRestrictedJump();
	void ApplyImpactVelocity(const struct FVector& JumpDir, bool bIsFullImpactImpulse);
	void AddDampedImpulse(const struct FVector& Impulse, bool bSelfInflicted);
};


// Class UnrealTournament.UTCharacter
// 0x0790 (0x0F30 - 0x07A0)
class AUTCharacter : public ACharacter
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x07A0(0x0008) MISSED OFFSET
	struct FRepUTMovement                              UTReplicatedMovement;                                     // 0x07A8(0x0028) (Net)
	bool                                               bApplyWallSlide;                                          // 0x07D0(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x07D1(0x0007) MISSED OFFSET
	class USphereComponent*                            FirstPersonMeshBoundSphere;                               // 0x07D8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class USkeletalMeshComponent*                      FirstPersonMesh;                                          // 0x07E0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	TArray<class UMaterialInstanceDynamic*>            FirstPersonMeshMIDs;                                      // 0x07E8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	class UCameraComponent*                            CharacterCameraComponent;                                 // 0x07F8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UUTCharacterMovement*                        UTCharacterMovement;                                      // 0x0800(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class AUTHat*                                      Hat;                                                      // 0x0808(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class AUTHatLeader*                                LeaderHat;                                                // 0x0810(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DefaultLeaderHatClass;                                    // 0x0818(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class AUTEyewear*                                  Eyewear;                                                  // 0x0820(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                HatVariant;                                               // 0x0828(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                EyewearVariant;                                           // 0x082C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                CosmeticFlashCount;                                       // 0x0830(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              LastCosmeticFlashTime;                                    // 0x0834(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CosmeticSpreeCount;                                       // 0x0838(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x083C(0x0004) MISSED OFFSET
	class UClass*                                      CurrentGroupTauntClass;                                   // 0x0840(0x0008) (ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                CurrentGroupTaunt;                                        // 0x0848(0x0008) (ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                CurrentTaunt;                                             // 0x0850(0x0008) (ZeroConstructor, IsPlainOldData)
	class UAudioComponent*                             CurrentTauntAudioComponent;                               // 0x0858(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UAnimMontage*                                CurrentFirstPersonTaunt;                                  // 0x0860(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                TauntCount;                                               // 0x0868(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x086C(0x0004) MISSED OFFSET
	TArray<class AUTPlayerState*>                      HealthRemovalAssists;                                     // 0x0870(0x0010) (ZeroConstructor)
	TArray<class AUTPlayerState*>                      ArmorRemovalAssists;                                      // 0x0880(0x0010) (ZeroConstructor)
	TArray<struct FSavedPosition>                      SavedPositions;                                           // 0x0890(0x0010) (ZeroConstructor)
	float                                              MaxSavedPositionAge;                                      // 0x08A0(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MaxShotSynchDelay;                                        // 0x08A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class AUTGameVolume*                               LastGameVolume;                                           // 0x08A8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bCanRally;                                                // 0x08B0(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bWasInWarningZone;                                        // 0x08B1(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x2];                                       // 0x08B2(0x0002) MISSED OFFSET
	int                                                ArmorAmount;                                              // 0x08B4(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	int                                                OldArmorAmount;                                           // 0x08B8(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                MaxStackedArmor;                                          // 0x08BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class AUTArmor*                                    ArmorType;                                                // 0x08C0(0x0008) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	TArray<struct FStoredAmmo>                         SavedAmmo;                                                // 0x08C8(0x0010) (ZeroConstructor)
	bool                                               bWasFallingWhenDamaged;                                   // 0x08D8(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bIsTranslocating;                                         // 0x08D9(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x6];                                       // 0x08DA(0x0006) MISSED OFFSET
	class AUTProjectile*                               LastFiredProjectile;                                      // 0x08E0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class AUTWeapon*                                   PendingAutoSwitchWeapon;                                  // 0x08E8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsSwitchingWeapon;                                       // 0x08F0(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      FlashCount;                                               // 0x08F1(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      FireMode;                                                 // 0x08F2(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      FlashExtra;                                               // 0x08F3(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	struct FFlashLocRep                                FlashLocation;                                            // 0x08F4(0x0010) (BlueprintVisible, BlueprintReadOnly, Net)
	float                                              LastWeaponFireTime;                                       // 0x0904(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class AActor*                                      PulseTarget;                                              // 0x0908(0x0008) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x0910(0x0004) MISSED OFFSET
	int                                                Health;                                                   // 0x0914(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	int                                                OldHealth;                                                // 0x0918(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                HealthMax;                                                // 0x091C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SuperHealthMax;                                           // 0x0920(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bDamageHurtsHealth;                                       // 0x0924(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData07[0x3];                                       // 0x0925(0x0003) MISSED OFFSET
	struct FName                                       HeadBone;                                                 // 0x0928(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              HeadHeight;                                               // 0x0930(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              HeadRadius;                                               // 0x0934(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              HeadScale;                                                // 0x0938(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DamageScaling;                                            // 0x093C(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	struct FTakeHitInfo                                LastTakeHitInfo;                                          // 0x0940(0x0038) (BlueprintVisible, Net)
	float                                              LastTakeHitTime;                                          // 0x0978(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LastTakeHitReplicatedTime;                                // 0x097C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LastTargetingTime;                                        // 0x0980(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LastTargetedTime;                                         // 0x0984(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LastTargetSeenTime;                                       // 0x0988(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x4];                                       // 0x098C(0x0004) MISSED OFFSET
	class AUTPlayerState*                              LastTargeter;                                             // 0x0990(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class AUTCharacter*                                LastTarget;                                               // 0x0998(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bHaveTargetVisual;                                        // 0x09A0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsInCombat;                                              // 0x09A1(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x2];                                       // 0x09A2(0x0002) MISSED OFFSET
	int                                                VisibilityMask;                                           // 0x09A4(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               bInvisible;                                               // 0x09A8(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bSpawnProtectionEligible;                                 // 0x09A9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0x2];                                       // 0x09AA(0x0002) MISSED OFFSET
	float                                              SpawnProtectionStartTime;                                 // 0x09AC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData11[0x1];                                       // 0x09B0(0x0001) MISSED OFFSET
	bool                                               bDisallowWeaponFiring;                                    // 0x09B1(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bDisallowWeaponSwitching;                                 // 0x09B2(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bRepFloorSliding;                                         // 0x09B3(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData12[0x4];                                       // 0x09B4(0x0004) MISSED OFFSET
	class APawn*                                       DrivenVehicle;                                            // 0x09B8(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               bFeigningDeath;                                           // 0x09C0(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bInRagdollRecovery;                                       // 0x09C1(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData13[0x6];                                       // 0x09C2(0x0006) MISSED OFFSET
	class UAnimMontage*                                RagdollRecoveryMontage;                                   // 0x09C8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TopRagdollSpeed;                                          // 0x09D0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FeignNudgeMag;                                            // 0x09D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                UnfeignCount;                                             // 0x09D8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LastRagdollDamageTime;                                    // 0x09DC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  HeadShotBlockedSound;                                     // 0x09E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                HeadArmorFlashCount;                                      // 0x09E8(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              LastHeadArmorFlashTime;                                   // 0x09EC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             HeadArmorHitEffect;                                       // 0x09F0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             FirstPersonHealthEffect;                                  // 0x09F8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             ThirdPersonHealthEffect;                                  // 0x0A00(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             FirstPersonArmorEffect;                                   // 0x0A08(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             ThirdPersonArmorEffect;                                   // 0x0A10(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<class UParticleSystem*>                     BloodEffects;                                             // 0x0A18(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FBloodDecalInfo>                     BloodDecals;                                              // 0x0A28(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	float                                              LastDeathDecalTime;                                       // 0x0A38(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RagdollCollisionBleedThreshold;                           // 0x0A3C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TimeOfDeath;                                              // 0x0A40(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FlakShredTime;                                            // 0x0A44(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FName                                       FlakShredStatName;                                        // 0x0A48(0x0008) (ZeroConstructor, IsPlainOldData)
	class AUTPlayerController*                         FlakShredInstigator;                                      // 0x0A50(0x0008) (ZeroConstructor, IsPlainOldData)
	class AUTPlayerState*                              OldPlayerState;                                           // 0x0A58(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CloseFlakRewardMessageClass;                              // 0x0A60(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RagdollBlendOutTime;                                      // 0x0A68(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RagdollPhysicsBlendOutTime;                               // 0x0A6C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RagdollBlendOutTimeLeft;                                  // 0x0A70(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              FeignDeathRecoverStartTime;                               // 0x0A74(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bStartingRagdoll;                                         // 0x0A78(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData14[0xF];                                       // 0x0A79(0x000F) MISSED OFFSET
	float                                              RagdollGravityScale;                                      // 0x0A88(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bAllowGibs;                                               // 0x0A8C(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData15[0x3];                                       // 0x0A8D(0x0003) MISSED OFFSET
	class UParticleSystem*                             DodgeEffect;                                              // 0x0A90(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             SlideEffect;                                              // 0x0A98(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LandEffectSpeed;                                          // 0x0AA0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData16[0x4];                                       // 0x0AA4(0x0004) MISSED OFFSET
	class UParticleSystem*                             LandEffect;                                               // 0x0AA8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UClass*>                              TeleportEffect;                                           // 0x0AB0(0x0010) (Edit, ZeroConstructor)
	TArray<class UClass*>                              RallyEffect;                                              // 0x0AC0(0x0010) (Edit, ZeroConstructor)
	TArray<class UClass*>                              RallyDestinationEffect;                                   // 0x0AD0(0x0010) (Edit, ZeroConstructor)
	class UClass*                                      RallyAnimation;                                           // 0x0AE0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bTriggerRallyEffect;                                      // 0x0AE8(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bRallyInProgress;                                         // 0x0AE9(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData17[0x2];                                       // 0x0AEA(0x0002) MISSED OFFSET
	float                                              RallyCompleteTime;                                        // 0x0AEC(0x0004) (ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             GroundFootstepEffect;                                     // 0x0AF0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             WaterFootstepEffect;                                      // 0x0AF8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             WaterEntryEffect;                                         // 0x0B00(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinOverlapToTelefrag;                                     // 0x0B08(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxSafeFallSpeed;                                         // 0x0B0C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FallingDamageFactor;                                      // 0x0B10(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CrushingDamageFactor;                                     // 0x0B14(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CrushingDamageType;                                       // 0x0B18(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FPhysicalSoundResponse>              FootstepSounds;                                           // 0x0B20(0x0010) (Edit, ZeroConstructor)
	TMap<TEnumAsByte<EPhysicalSurface>, class USoundBase*> FootstepSoundsMap;                                        // 0x0B30(0x0050) (ZeroConstructor)
	TMap<TEnumAsByte<EPhysicalSurface>, class USoundBase*> OwnFootstepSoundsMap;                                     // 0x0B80(0x0050) (ZeroConstructor)
	class USoundBase*                                  FootstepSound;                                            // 0x0BD0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  WaterFootstepSound;                                       // 0x0BD8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData18[0x4];                                       // 0x0BE0(0x0004) MISSED OFFSET
	float                                              MinWaterSoundInterval;                                    // 0x0BE4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LastWaterSoundTime;                                       // 0x0BE8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxUnderWaterTime;                                        // 0x0BEC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DrowningDamagePerSecond;                                  // 0x0BF0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bHeadIsUnderwater;                                        // 0x0BF4(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData19[0x3];                                       // 0x0BF5(0x0003) MISSED OFFSET
	float                                              LastBreathTime;                                           // 0x0BF8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LastDrownTime;                                            // 0x0BFC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              EnteredSafeVolumeTime;                                    // 0x0C00(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bHasLeftSafeVolume;                                       // 0x0C04(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData20[0x3];                                       // 0x0C05(0x0003) MISSED OFFSET
	class USoundBase*                                  WallSlideAmbientSound;                                    // 0x0C08(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  FallingAmbientSound;                                      // 0x0C10(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FallingAmbientStartSpeed;                                 // 0x0C18(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LastPainSoundTime;                                        // 0x0C1C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinPainSoundInterval;                                     // 0x0C20(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LastWallHitNotifyTime;                                    // 0x0C24(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  SpawnSound;                                               // 0x0C28(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveLinearColor*                           BodyColorFlashCurve;                                      // 0x0C30(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BodyColorFlashElapsedTime;                                // 0x0C38(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData21[0x4];                                       // 0x0C3C(0x0004) MISSED OFFSET
	class UClass*                                      CharacterData;                                            // 0x0C40(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      FFAColor;                                                 // 0x0C48(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bAllowCharacterDataOverride;                              // 0x0C49(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData22[0x2];                                       // 0x0C4A(0x0002) MISSED OFFSET
	struct FMovementEventInfo                          MovementEvent;                                            // 0x0C4C(0x0010) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FVector                                     MovementEventDir;                                         // 0x0C5C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SlideTargetHeight;                                        // 0x0C68(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     CurrentWeaponBob;                                         // 0x0C6C(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     WeaponBobMagnitude;                                       // 0x0C78(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     WeaponJumpBob;                                            // 0x0C84(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     WeaponDodgeBob;                                           // 0x0C90(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     WeaponSlideBob;                                           // 0x0C9C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     WeaponLandBob;                                            // 0x0CA8(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     DesiredJumpBob;                                           // 0x0CB4(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     CurrentJumpBob;                                           // 0x0CC0(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BobTime;                                                  // 0x0CCC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              WeaponBreathingBobRate;                                   // 0x0CD0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              WeaponRunningBobRate;                                     // 0x0CD4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              WeaponJumpBobInterpRate;                                  // 0x0CD8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              WeaponHorizontalBobInterpRate;                            // 0x0CDC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              WeaponLandBobDecayRate;                                   // 0x0CE0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              WeaponDirChangeDeflection;                                // 0x0CE4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     EyeOffset;                                                // 0x0CE8(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     CrouchEyeOffset;                                          // 0x0CF4(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DefaultCrouchedEyeHeight;                                 // 0x0D00(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FloorSlideEyeHeight;                                      // 0x0D04(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     TargetEyeOffset;                                          // 0x0D08(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     EyeOffsetInterpRate;                                      // 0x0D14(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     EyeOffsetDirectRate;                                      // 0x0D20(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CrouchEyeOffsetInterpRate;                                // 0x0D2C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     EyeOffsetDecayRate;                                       // 0x0D30(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              EyeOffsetJumpBob;                                         // 0x0D3C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              EyeOffsetLandBob;                                         // 0x0D40(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              EyeOffsetLandBobThreshold;                                // 0x0D44(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              WeaponLandBobThreshold;                                   // 0x0D48(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FullWeaponLandBobVelZ;                                    // 0x0D4C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FullEyeOffsetLandBobVelZ;                                 // 0x0D50(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DefaultBaseEyeHeight;                                     // 0x0D54(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxDeathLifeSpan;                                         // 0x0D58(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData23[0x4];                                       // 0x0D5C(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnDied;                                                   // 0x0D60(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               bCanPickupItems;                                          // 0x0D70(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData24[0x3];                                       // 0x0D71(0x0003) MISSED OFFSET
	float                                              PlayerIndicatorMaxDistance;                               // 0x0D74(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TeamPlayerIndicatorMaxDistance;                           // 0x0D78(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SpectatorIndicatorMaxDistance;                            // 0x0D7C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BeaconTextScale;                                          // 0x0D80(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bShouldWearLeaderHat;                                     // 0x0D84(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData25[0x3];                                       // 0x0D85(0x0003) MISSED OFFSET
	TArray<class UUTWeaponSkin*>                       WeaponSkins;                                              // 0x0D88(0x0010) (Net, ZeroConstructor)
	float                                              WalkMovementReductionPct;                                 // 0x0D98(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              WalkMovementReductionTime;                                // 0x0D9C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              FireRateMultiplier;                                       // 0x0DA0(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData26[0x4];                                       // 0x0DA4(0x0004) MISSED OFFSET
	TArray<unsigned char>                              PendingFire;                                              // 0x0DA8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	class AUTInventory*                                InventoryList;                                            // 0x0DB8(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	class AUTWeapon*                                   PendingWeapon;                                            // 0x0DC0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class AUTWeapon*                                   Weapon;                                                   // 0x0DC8(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	class AUTWeaponAttachment*                         WeaponAttachment;                                         // 0x0DD0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      WeaponAttachmentClass;                                    // 0x0DD8(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	class UClass*                                      WeaponClass;                                              // 0x0DE0(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	class AUTWeaponAttachment*                         HolsteredWeaponAttachment;                                // 0x0DE8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      HolsteredWeaponAttachmentClass;                           // 0x0DF0(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	TArray<class UClass*>                              DefaultCharacterInventory;                                // 0x0DF8(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	class USoundBase*                                  AmbientSound;                                             // 0x0E08(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              AmbientSoundPitch;                                        // 0x0E10(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData27[0x4];                                       // 0x0E14(0x0004) MISSED OFFSET
	class UAudioComponent*                             AmbientSoundComp;                                         // 0x0E18(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USoundBase*                                  LocalAmbientSound;                                        // 0x0E20(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LocalAmbientVolume;                                       // 0x0E28(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData28[0x4];                                       // 0x0E2C(0x0004) MISSED OFFSET
	class UAudioComponent*                             LocalAmbientSoundComp;                                    // 0x0E30(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USoundBase*                                  StatusAmbientSound;                                       // 0x0E38(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAudioComponent*                             StatusAmbientSoundComp;                                   // 0x0E40(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USoundBase*                                  LowHealthAmbientSound;                                    // 0x0E48(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                LowHealthAmbientThreshold;                                // 0x0E50(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bServerOutline;                                           // 0x0E54(0x0001) (Edit, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData)
	unsigned char                                      ServerOutlineTeamMask;                                    // 0x0E55(0x0001) (Edit, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData)
	bool                                               bOutlineWhenUnoccluded;                                   // 0x0E56(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData)
	bool                                               bLocalOutline;                                            // 0x0E57(0x0001) (Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData)
	bool                                               bForceNoOutline;                                          // 0x0E58(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData29[0x7];                                       // 0x0E59(0x0007) MISSED OFFSET
	class UMaterialInstance*                           GhostMaterial;                                            // 0x0E60(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USkeletalMeshComponent*                      CustomDepthMesh;                                          // 0x0E68(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData30[0x6];                                       // 0x0E70(0x0006) MISSED OFFSET
	uint16_t                                           CharOverlayFlags;                                         // 0x0E76(0x0002) (Net, ZeroConstructor, IsPlainOldData)
	uint16_t                                           WeaponOverlayFlags;                                       // 0x0E78(0x0002) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData31[0x6];                                       // 0x0E7A(0x0006) MISSED OFFSET
	class USkeletalMeshComponent*                      OverlayMesh;                                              // 0x0E80(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UMaterialInterface*                          ReplicatedBodyMaterial;                                   // 0x0E88(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          ReplicatedBodyMaterial1P;                                 // 0x0E90(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class UMaterialInstanceDynamic*                    OverrideBodyMaterialMID;                                  // 0x0E98(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UMaterialInstanceDynamic*                    OverrideBodyMaterial1PMID;                                // 0x0EA0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<class UMaterialInstanceDynamic*>            BodyMIs;                                                  // 0x0EA8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FRouteCacheItem                             LastReachedMoveTarget;                                    // 0x0EB8(0x0028)
	class UPhysicsConstraintComponent*                 RagdollConstraint;                                        // 0x0EE0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	float                                              FallingStartTime;                                         // 0x0EE8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData32[0x4];                                       // 0x0EEC(0x0004) MISSED OFFSET
	class AUTPlayerController*                         CurrentViewerPC;                                          // 0x0EF0(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              OldZ;                                                     // 0x0EF8(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData33[0x4];                                       // 0x0EFC(0x0004) MISSED OFFSET
	class UUTGhostComponent*                           GhostComponent;                                           // 0x0F00(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              MaxSpeedPctModifier;                                      // 0x0F08(0x0004) (BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData34[0x24];                                      // 0x0F0C(0x0024) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTCharacter");
		return ptr;
	}


	void UTServerMoveSaved(float TimeStamp, const struct FVector_NetQuantize& InAccel, unsigned char PendingFlags, float ViewYaw, float ViewPitch);
	void UTServerMoveQuick(float TimeStamp, const struct FVector_NetQuantize& InAccel, unsigned char PendingFlags);
	void UTServerMoveOld(float OldTimeStamp, const struct FVector_NetQuantize& OldAccel, float OldYaw, unsigned char OldMoveFlags);
	void UTServerMove(float TimeStamp, const struct FVector_NetQuantize& InAccel, const struct FVector_NetQuantize& ClientLoc, unsigned char CompressedMoveFlags, float ViewYaw, float ViewPitch, class UPrimitiveComponent* ClientMovementBase, const struct FName& ClientBaseBoneName, unsigned char ClientMovementMode);
	void UseCarriedObject();
	void UpdateWeaponSkinPrefFromProfile(class AUTWeapon* Weapon);
	void UpdateWeaponOverlays();
	void UpdateWeaponFiring();
	void UpdateWeaponAttachment();
	void UpdateSkin();
	void UpdateOutline();
	void UpdateHolsteredWeaponAttachment();
	void UpdateCharOverlays();
	void UpdateCharOverlayFlags();
	void UpdateArmorOverlay();
	void TurnOff();
	void TossInventory(class AUTInventory* InvToToss, const struct FVector& ExtraVelocity);
	void TakeFallingDamage(const struct FHitResult& Hit, float FallingSpeed);
	void SwitchWeapon(class AUTWeapon* NewWeapon);
	void StopFiring();
	void StopFire(unsigned char FireModeNum);
	void StatusAmbientSoundUpdated();
	void StartFire(unsigned char FireModeNum);
	void SpawnGib(const struct FGibSlotInfo& GibSlot, class UClass* DmgType);
	void SpawnBloodDecal(const struct FVector& TraceStart, const struct FVector& TraceDir);
	void SetWeaponOverlayEffect(const struct FOverlayEffect& NewOverlay, bool bEnabled);
	void SetWeaponOverlay(class UMaterialInterface* NewOverlay, bool bEnabled);
	void SetWeaponAttachmentClass(class UClass* NewWeaponAttachmentClass);
	void SetWalkMovementReduction(float InPct, float InDuration);
	void SetStatusAmbientSound(class USoundBase* NewAmbientSound, float SoundVolume, float PitchMultipier, bool bClear);
	void SetSkin(class UMaterialInterface* NewSkin, class UMaterialInterface* NewSkin1P);
	void SetRagdollGravityScale(float NewScale);
	void SetOutlineServer(bool bNowOutlined, bool bWhenUnoccluded, unsigned char TeamMask);
	void SetOutlineLocal(bool bNowOutlined, bool bWhenUnoccluded);
	void SetLocalAmbientSound(class USoundBase* NewAmbientSound, float SoundVolume, bool bClear);
	void SetInvisible(bool bNowInvisible);
	void SetInitialHealth();
	void SetHolsteredWeaponAttachmentClass(class UClass* NewWeaponAttachmentClass);
	void SetHeadScale(float NewHeadScale);
	void SetHatVariant(int NewHatVariant);
	void SetHatClass(class UClass* HatClass);
	void SetFlashLocation(const struct FVector& InFlashLoc, unsigned char InFireMode);
	void SetFlashExtra(unsigned char NewFlashExtra, unsigned char InFireMode);
	void SetFireRateMultiplier(float InMult);
	void SetEyewearVariant(int NewEyewearVariant);
	void SetEyewearClass(class UClass* EyewearClass);
	void SetCharacterOverlayEffect(const struct FOverlayEffect& NewOverlay, bool bEnabled);
	void SetCharacterOverlay(class UMaterialInterface* NewOverlay, bool bEnabled);
	void SetBodyColorFlash(class UCurveLinearColor* ColorCurve, bool bRimOnly);
	void SetAmbientSound(class USoundBase* NewAmbientSound, bool bClear);
	void ServerVerifyWeapon(class AUTWeapon* NewWeapon);
	void ServerUseCarriedObject();
	void ServerSwitchWeapon(class AUTWeapon* NewWeapon);
	void ServerFeignDeath();
	void ServerDropPowerup(class AUTTimedPowerup* Powerup);
	void ServerDropHealth();
	void ServerDropCarriedObject();
	void ServerDropBoots();
	void ServerDropArmor();
	void RestoreAmmoPct(float Pct, bool bPctOfMax);
	void ResetMaxSpeedPctModifier();
	void RemoveVisibilityMask(int Channel);
	void RemoveInventory(class AUTInventory* InvToRemove);
	void RemoveArmor(int Amount);
	bool PlayWaterSound(class USoundBase* WaterSound);
	void PlayWaterEntryEffect(const struct FVector& InWaterLoc, const struct FVector& OutofWaterLoc);
	void PlayTauntByClass(class UClass* TauntToPlay, float EmoteSpeed);
	void PlayTakeHitEffects();
	void PlayLandedEffect();
	void PlayJump(const struct FVector& JumpLocation, const struct FVector& JumpDir);
	void PlayGroupTaunt(class UClass* TauntToPlay);
	void PlayFootstep(unsigned char FootNum, bool bFirstPerson);
	void PlayFeignDeath();
	void PlayDamageEffects();
	void OVV(const struct FName& InName, const struct FVector& Value);
	bool OverrideFellOutOfWorld(class UClass* DamageType);
	void OV(const struct FName& InName, float Value);
	void OnWallDodge(const struct FVector& DodgeLocation, const struct FVector& DodgeDir);
	void OnTriggerRallyEffect();
	void OnSlide(const struct FVector& SlideLocation, const struct FVector& SlideDir);
	void OnRepWeaponSkin();
	void OnRepHeadArmorFlashCount();
	void OnRepFloorSliding();
	void OnRepDrivenVehicle();
	void OnRepCosmeticSpreeCount();
	void OnRepCosmeticFlashCount();
	void OnRep_UTReplicatedMovement();
	void OnRep_ShouldWearLeaderHat();
	void OnRep_Invisible();
	void OnRagdollCollision(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void OnOverlapBegin(class AActor* OverlappedActor, class AActor* OtherActor);
	void OnLandingAssist();
	void OnHealthUpdated();
	void OnGroupTauntEnded(class UAnimMontage* Montage, bool bInterrupted);
	void OnFirstPersonWeaponEquipped(class AUTWeapon* EquippedWeapon);
	void OnEmoteEnded(class UAnimMontage* Montage, bool bInterrupted);
	void OnDodge(const struct FVector& DodgeLocation, const struct FVector& DodgeDir);
	void OnArmorUpdated();
	void MovementEventUpdated(TEnumAsByte<EMovementEvent> MovementEventType, const struct FVector& Dir);
	void MovementEventReplicated();
	bool ModifyDamageTaken(const struct FHitResult& HitInfo, class AController* EventInstigator, class AActor* DamageCauser, class UClass* DamageType, int* AppliedDamage, int* Damage, struct FVector* Momentum, class AUTInventory** HitArmor);
	bool ModifyDamageCaused(const struct FHitResult& HitInfo, class AActor* Victim, class AController* EventInstigator, class AActor* DamageCauser, class UClass* DamageType, int* AppliedDamage, int* Damage, struct FVector* Momentum);
	void LocalAmbientSoundUpdated();
	void LeaderHatStatusChanged();
	void K2_FiringInfoUpdated();
	class AUTInventory* K2_FindInventoryType(class UClass* Type, bool bExactClass);
	bool K2_Died(class AController* EventInstigator, class UClass* DamageType);
	class AUTInventory* K2_CreateInventory(class UClass* NewInvClass, bool bAutoActivate);
	void JumpVis();
	bool IsWearingAnyCosmetic();
	bool IsTriggerDown(unsigned char InFireMode);
	bool IsThirdPersonTaunting();
	bool IsSpawnProtected();
	bool IsRagdoll();
	bool IsOutlined(unsigned char TestTeam);
	bool IsLocallyViewed();
	bool IsHeadShot(const struct FVector& HitLocation, const struct FVector& ShotDirection, float WeaponHeadScaling, class AUTCharacter* ShotInstigator, float PredictionTime);
	bool IsFeigningDeath();
	bool IsDead();
	void InventoryEvent(const struct FName& EventName);
	void IncrementFlashCount(unsigned char InFireMode);
	bool HasMaxAmmo(class UClass* Type);
	void HasHighScoreChanged();
	bool HandleFallingDamage(float FallingSpeed, const struct FHitResult& Hit);
	void GiveArmor(class AUTArmor* InArmorType);
	void GibExplosion();
	float GetWeaponBobScaling();
	unsigned char GetTeamNum();
	struct FLinearColor GetTeamColor();
	struct FVector GetRewindLocation(float PredictionTime, class AUTPlayerController* DebugViewer);
	float GetRemoteViewPitch();
	class APlayerCameraManager* GetPlayerCameraManager();
	float GetFireRateMultiplier();
	class AActor* GetCurrentAimContext();
	class UMaterialInstanceDynamic* GetCharOverlayMI();
	class AUTCharacterContent* GetCharacterData();
	class AUTCarriedObject* GetCarriedObject();
	int GetArmorAmount();
	int GetAmmoAmount(class UClass* Type);
	void ForceFeignDeath(float MinRecoveryDelay);
	void FiringInfoReplicated();
	void FiringExtraUpdated();
	void FireRateChanged();
	void FeignDeath();
	void EnableWeaponSwitching();
	void DropFlag();
	void DropCarriedObject();
	bool DodgeOverride(const struct FVector& DodgeDir, const struct FVector& DodgeCross);
	void DiscardAllInventory();
	void DisallowWeaponFiring(bool bDisallowed);
	void DeathCleanupTimer();
	void DeathAnimEnd(class UAnimMontage* Montage, bool bInterrupted);
	void ClientWeaponLost(class AUTWeapon* LostWeapon);
	void ClientVerifyWeapon();
	void ClientSwitchWeapon(class AUTWeapon* NewWeapon);
	void ClearFiringInfo();
	void ChangeAmbientSoundPitch(class USoundBase* InAmbientSound, float NewPitch);
	void CascadeGroupTaunt();
	bool CanSlide();
	bool CanDodgeInternal();
	bool CanDodge();
	void BoostSpeedForTime(float SpeedBoostPct, float TimeToBoost);
	bool BlockFeignDeath();
	bool BlockedHeadShot(const struct FVector& HitLocation, const struct FVector& ShotDirection, float WeaponHeadScaling, bool bConsumeArmor, class AUTCharacter* ShotInstigator);
	void AmbientSoundUpdated();
	void AmbientSoundPitchUpdated();
	TEnumAsByte<EAllowedSpecialMoveAnims> AllowedSpecialMoveAnims();
	void AllAmmo();
	void AddVisibilityMask(int Channel);
	bool AddInventory(class AUTInventory* InvToAdd, bool bAutoActivate);
	void AddAmmo(const struct FStoredAmmo& AmmoToAdd);
};


// Class UnrealTournament.UTGameObjective
// 0x0068 (0x03F0 - 0x0388)
class AUTGameObjective : public AActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0388(0x0010) MISSED OFFSET
	float                                              InitialSpawnDelay;                                        // 0x0398(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x039C(0x0004) MISSED OFFSET
	class UClass*                                      CarriedObjectClass;                                       // 0x03A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BestViewYaw;                                              // 0x03A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      TeamNum;                                                  // 0x03AC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x03AD(0x0003) MISSED OFFSET
	TArray<class AUTDefensePoint*>                     DefensePoints;                                            // 0x03B0(0x0010) (BlueprintVisible, ZeroConstructor)
	bool                                               bAutogenerateDefensePoints;                               // 0x03C0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x03C1(0x0003) MISSED OFFSET
	float                                              LastSecondSaveDistance;                                   // 0x03C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ForwardDot;                                               // 0x03C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              HighLowDot;                                               // 0x03CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              IncomingHeightOffset;                                     // 0x03D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x03D4(0x0004) MISSED OFFSET
	class AUTCarriedObject*                            CarriedObject;                                            // 0x03D8(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	class AUTPlayerState*                              CarriedObjectHolder;                                      // 0x03E0(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	struct FName                                       CarriedObjectState;                                       // 0x03E8(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTGameObjective");
		return ptr;
	}


	void OnObjectStateChanged();
};


// Class UnrealTournament.UTCTFFlagBase
// 0x0050 (0x0440 - 0x03F0)
class AUTCTFFlagBase : public AUTGameObjective
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x03F0(0x0008) MISSED OFFSET
	class AUTFlag*                                     MyFlag;                                                   // 0x03F8(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	class UCapsuleComponent*                           Capsule;                                                  // 0x0400(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        Mesh;                                                     // 0x0408(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USoundBase*                                  FlagScoreRewardSound;                                     // 0x0410(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  FlagTakenSound;                                           // 0x0418(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  EnemyFlagTakenSound;                                      // 0x0420(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  FlagReturnedSound;                                        // 0x0428(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<class UClass*>                              TeamFlagTypes;                                            // 0x0430(0x0010) (Edit, BlueprintVisible, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTCTFFlagBase");
		return ptr;
	}


	void Reset();
	void OnOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnObjectWasPickedUp();
	void OnFlagChanged();
};


// Class UnrealTournament.UTGameState
// 0x07F8 (0x0BE0 - 0x03E8)
class AUTGameState : public AGameState
{
public:
	struct FString                                     ServerName;                                               // 0x03E8(0x0010) (Edit, BlueprintVisible, Net, ZeroConstructor, Config, GlobalConfig)
	struct FString                                     ServerMOTD;                                               // 0x03F8(0x0010) (Edit, BlueprintVisible, Net, ZeroConstructor, Config, GlobalConfig)
	struct FString                                     ServerDescription;                                        // 0x0408(0x0010) (Edit, BlueprintVisible, Net, ZeroConstructor, Config, GlobalConfig)
	float                                              MusicVolume;                                              // 0x0418(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x041C(0x0004) MISSED OFFSET
	TArray<class UObject*>                             PreloadedAssets;                                          // 0x0420(0x0010) (ZeroConstructor)
	TArray<class UObject*>                             AsyncLoadedAssets;                                        // 0x0430(0x0010) (ZeroConstructor)
	TArray<class AUTTeamInfo*>                         Teams;                                                    // 0x0440(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      bWeaponStay : 1;                                          // 0x0450(0x0001) (Edit, BlueprintVisible, Net)
	unsigned char                                      bTeamGame : 1;                                            // 0x0450(0x0001) (Edit, BlueprintVisible, Net)
	unsigned char                                      bRankedSession : 1;                                       // 0x0450(0x0001) (Edit, BlueprintVisible, Net)
	unsigned char                                      bIsQuickMatch : 1;                                        // 0x0450(0x0001) (Edit, BlueprintVisible, Net)
	unsigned char                                      bAllowTeamSwitches : 1;                                   // 0x0450(0x0001) (Edit, BlueprintVisible, Net)
	unsigned char                                      bStopGameClock : 1;                                       // 0x0450(0x0001) (BlueprintVisible, Net)
	unsigned char                                      bTeamProjHits : 1;                                        // 0x0450(0x0001) (BlueprintVisible, BlueprintReadOnly, Net)
	unsigned char                                      bTeamCollision : 1;                                       // 0x0450(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bPlayStatusAnnouncements : 1;                             // 0x0451(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bPersistentKillIconMessages : 1;                          // 0x0451(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bDebugHitScanReplication : 1;                             // 0x0451(0x0001) (BlueprintVisible, Net)
	unsigned char                                      bHaveMatchHost : 1;                                       // 0x0451(0x0001) (BlueprintVisible, BlueprintReadOnly, Net)
	unsigned char                                      bRequireFull : 1;                                         // 0x0451(0x0001) (BlueprintVisible, BlueprintReadOnly, Net)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0452(0x0002) MISSED OFFSET
	unsigned char                                      AIDifficulty;                                             // 0x0454(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0455(0x0003) MISSED OFFSET
	int                                                GoalScore;                                                // 0x0458(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                TimeLimit;                                                // 0x045C(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	float                                              SpawnProtectionTime;                                      // 0x0460(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0464(0x0004) MISSED OFFSET
	class UClass*                                      MultiKillMessageClass;                                    // 0x0468(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      SpreeMessageClass;                                        // 0x0470(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FText                                       GoalScoreText;                                            // 0x0478(0x0018) (Edit, BlueprintVisible)
	struct FText                                       GameOverStatus;                                           // 0x0490(0x0018) (Edit, BlueprintVisible)
	struct FText                                       MapVoteStatus;                                            // 0x04A8(0x0018) (Edit, BlueprintVisible)
	struct FText                                       PreGameStatus;                                            // 0x04C0(0x0018) (Edit, BlueprintVisible)
	struct FText                                       NeedPlayersStatus;                                        // 0x04D8(0x0018) (Edit, BlueprintVisible)
	struct FText                                       OvertimeStatus;                                           // 0x04F0(0x0018) (Edit, BlueprintVisible)
	struct FText                                       HostStatus;                                               // 0x0508(0x0018) (Edit, BlueprintVisible)
	float                                              MultiKillDelay;                                           // 0x0520(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                PlayersNeeded;                                            // 0x0524(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              LastEnemyEnteringBaseTime;                                // 0x0528(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LastEnemyFCEnteringBaseTime;                              // 0x052C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LastEnteringEnemyBaseTime;                                // 0x0530(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LastFriendlyLocationReportTime;                           // 0x0534(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LastEnemyLocationReportTime;                              // 0x0538(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LastRedSniperWarningTime;                                 // 0x053C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LastBlueSniperWarningTime;                                // 0x0540(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      FCFriendlyLocCount;                                       // 0x0544(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      FCEnemyLocCount;                                          // 0x0545(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x2];                                       // 0x0546(0x0002) MISSED OFFSET
	float                                              LastIncomingWarningTime;                                  // 0x0548(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x054C(0x0004) MISSED OFFSET
	struct FName                                       LastFriendlyLocationName;                                 // 0x0550(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FName                                       LastEnemyLocationName;                                    // 0x0558(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                RemainingTime;                                            // 0x0560(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ReplicatedRemainingTime;                                  // 0x0564(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              LastTimerMessageTime;                                     // 0x0568(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                LastTimerMessageIndex;                                    // 0x056C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MatchEndTime;                                             // 0x0570(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bNeedToClearIntermission;                                 // 0x0574(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x0575(0x0003) MISSED OFFSET
	float                                              ForceRespawnTime;                                         // 0x0578(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      TeamSwapSidesOffset;                                      // 0x057C(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      PrevTeamSwapSidesOffset;                                  // 0x057D(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x2];                                       // 0x057E(0x0002) MISSED OFFSET
	struct FScriptMulticastDelegate                    TeamSideSwapDelegate;                                     // 0x0580(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class AUTPlayerState*                              WinnerPlayerState;                                        // 0x0590(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	class AUTTeamInfo*                                 WinningTeam;                                              // 0x0598(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	class AUTPlayerState*                              ScoringPlayerState;                                       // 0x05A0(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      NumTeams;                                                 // 0x05A8(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x7];                                       // 0x05A9(0x0007) MISSED OFFSET
	struct FName                                       SecondaryAttackerStat;                                    // 0x05B0(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              RespawnWaitTime;                                          // 0x05B8(0x0004) (Edit, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x4];                                       // 0x05BC(0x0004) MISSED OFFSET
	struct FOverlayEffect                              OverlayEffects[0x10];                                     // 0x05C0(0x0018) (Net)
	struct FOverlayEffect                              OverlayEffects1P[0x10];                                   // 0x0740(0x0018) (Net)
	bool                                               bIsInstanceServer;                                        // 0x08C0(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0x3];                                       // 0x08C1(0x0003) MISSED OFFSET
	struct FGuid                                       HubGuid;                                                  // 0x08C4(0x0010) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData11[0x14];                                      // 0x08D4(0x0014) MISSED OFFSET
	float                                              KickThreshold;                                            // 0x08E8(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData12[0xF4];                                      // 0x08EC(0x00F4) MISSED OFFSET
	TArray<struct FName>                               GameScoreStats;                                           // 0x09E0(0x0010) (ZeroConstructor)
	TArray<struct FName>                               TeamStats;                                                // 0x09F0(0x0010) (ZeroConstructor)
	TArray<struct FName>                               WeaponStats;                                              // 0x0A00(0x0010) (ZeroConstructor)
	TArray<struct FName>                               RewardStats;                                              // 0x0A10(0x0010) (ZeroConstructor)
	TArray<struct FName>                               MovementStats;                                            // 0x0A20(0x0010) (ZeroConstructor)
	TArray<class AUTReplicatedMapInfo*>                MapVoteList;                                              // 0x0A30(0x0010) (Net, ZeroConstructor)
	int                                                MapVoteListCount;                                         // 0x0A40(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	int                                                VoteTimer;                                                // 0x0A44(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	struct FString                                     ServerSessionId;                                          // 0x0A48(0x0010) (Net, ZeroConstructor)
	unsigned char                                      UnknownData13[0x50];                                      // 0x0A58(0x0050) MISSED OFFSET
	float                                              LastScoreStatsUpdateTime;                                 // 0x0AA8(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                TauntSelectionIndex;                                      // 0x0AAC(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              BoostRechargeTime;                                        // 0x0AB0(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	int                                                BoostRechargeMaxCharges;                                  // 0x0AB4(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bRestrictPartyJoin;                                       // 0x0AB8(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bOnlyTeamCanVoteKick;                                     // 0x0AB9(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	bool                                               bDisableVoteKick;                                         // 0x0ABA(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	unsigned char                                      UnknownData14[0x85];                                      // 0x0ABB(0x0085) MISSED OFFSET
	float                                              UnplayableHitchThresholdInMs;                             // 0x0B40(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	int                                                MaxUnplayableHitchesToTolerate;                           // 0x0B44(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData15[0x28];                                      // 0x0B48(0x0028) MISSED OFFSET
	TArray<class AUTLineUpZone*>                       SpawnedLineUps;                                           // 0x0B70(0x0010) (ZeroConstructor)
	struct FGuid                                       ServerInstanceGUID;                                       // 0x0B80(0x0010) (Net, ZeroConstructor, IsPlainOldData)
	class AUTPlayerState*                              LeadLineUpPlayer;                                         // 0x0B90(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class AUTLineUpHelper*                             ActiveLineUpHelper;                                       // 0x0B98(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	struct FString                                     ReplayID;                                                 // 0x0BA0(0x0010) (Net, ZeroConstructor)
	struct FGuid                                       MatchID;                                                  // 0x0BB0(0x0010) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData16[0x8];                                       // 0x0BC0(0x0008) MISSED OFFSET
	struct FString                                     HostIdString;                                             // 0x0BC8(0x0010) (Net, ZeroConstructor)
	unsigned char                                      UnknownData17[0x8];                                       // 0x0BD8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTGameState");
		return ptr;
	}


	void UpdateHighlights();
	void SetWinner(class AUTPlayerState* NewWinner);
	void SetTimeLimit(int NewTimeLimit);
	void SetRespawnWaitTime(float NewWaitTime);
	void SetGoalScore(int NewGoalScore);
	bool PreventWeaponFire();
	void OnWinnerReceived();
	void OnUpdateFriendlyLocation();
	void OnUpdateEnemyLocation();
	void OnTeamSideSwap();
	bool OnSameTeam(class AActor* Actor1, class AActor* Actor2);
	void OnRepRemainingTime();
	void OnRep_ServerSessionId();
	void OnRep_ServerName();
	void OnRep_ServerMOTD();
	void OnRep_RemainingTime();
	void OnRep_OverlayEffects();
	void OnReceiveHubGuid();
	bool IsSelectedBoostValid(class AUTPlayerState* PlayerState);
	bool IsMatchIntermission();
	bool IsMatchInProgress();
	bool IsMatchInOvertime();
	bool IsMatchInCountdown();
	bool IsAllowedSpawnPoint(class AUTPlayerState* Chooser, class APlayerStart* DesiredStart);
	bool HasMatchStarted();
	class UClass* GetSelectableBoostByIndex(class AUTPlayerState* PlayerState, int Index);
	float GetRespawnWaitTimeFor(class AUTPlayerState* PS);
	TArray<struct FText> GetPlayerHighlights(class AUTPlayerState* PlayerState);
	bool GetImportantPickups(TArray<class AUTPickup*>* PickupList);
	class UClass* GetGameModeClass();
	void ClearHighlights();
	void ChangeTeamSides(unsigned char Offset);
	bool AreAllPlayersReady();
	void AddOverlayMaterial(class UMaterialInterface* NewOverlay, class UMaterialInterface* NewOverlay1P);
	void AddOverlayEffect(const struct FOverlayEffect& NewOverlay, const struct FOverlayEffect& NewOverlay1P);
	void AddMinorHighlights(class AUTPlayerState* PS);
};


// Class UnrealTournament.UTCTFGameState
// 0x0120 (0x0D00 - 0x0BE0)
class AUTCTFGameState : public AUTGameState
{
public:
	int                                                IntermissionTime;                                         // 0x0BE0(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bPlayingAdvantage : 1;                                    // 0x0BE4(0x0001) (Net)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0BE5(0x0003) MISSED OFFSET
	float                                              HalftimeScoreDelay;                                       // 0x0BE8(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0BEC(0x0004) MISSED OFFSET
	TArray<class AUTCTFFlagBase*>                      FlagBases;                                                // 0x0BF0(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor)
	unsigned char                                      AdvantageTeamIndex;                                       // 0x0C00(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0C01(0x0003) MISSED OFFSET
	int                                                CTFRound;                                                 // 0x0C04(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	int                                                NumRounds;                                                // 0x0C08(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0C0C(0x0004) MISSED OFFSET
	struct FText                                       RedAdvantageStatus;                                       // 0x0C10(0x0018) (Edit, BlueprintVisible)
	struct FText                                       BlueAdvantageStatus;                                      // 0x0C28(0x0018) (Edit, BlueprintVisible)
	struct FText                                       RoundInProgressStatus;                                    // 0x0C40(0x0018) (Edit, BlueprintVisible)
	struct FText                                       FullRoundInProgressStatus;                                // 0x0C58(0x0018) (Edit, BlueprintVisible)
	struct FText                                       IntermissionStatus;                                       // 0x0C70(0x0018) (Edit, BlueprintVisible)
	struct FText                                       HalftimeStatus;                                           // 0x0C88(0x0018) (Edit, BlueprintVisible)
	struct FText                                       ExtendedOvertimeStatus;                                   // 0x0CA0(0x0018) (Edit, BlueprintVisible)
	struct FText                                       FirstHalfStatus;                                          // 0x0CB8(0x0018) (Edit, BlueprintVisible)
	struct FText                                       SecondHalfStatus;                                         // 0x0CD0(0x0018) (Edit, BlueprintVisible)
	TArray<struct FCTFScoringPlay>                     ScoringPlays;                                             // 0x0CE8(0x0010) (Net, ZeroConstructor)
	unsigned char                                      UnknownData04[0x8];                                       // 0x0CF8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTCTFGameState");
		return ptr;
	}


	class AUTPlayerState* GetFlagHolder(unsigned char TeamNum);
	void AddScoringPlay(const struct FCTFScoringPlay& NewScoringPlay);
};


// Class UnrealTournament.UTBaseScoring
// 0x0000 (0x0388 - 0x0388)
class AUTBaseScoring : public AInfo
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTBaseScoring");
		return ptr;
	}

};


// Class UnrealTournament.UTCTFBaseGame
// 0x0060 (0x09C8 - 0x0968)
class AUTCTFBaseGame : public AUTTeamGameMode
{
public:
	class AUTCTFGameState*                             CTFGameState;                                             // 0x0968(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CTFScoringClass;                                          // 0x0970(0x0008) (Edit, BlueprintVisible, ZeroConstructor, NoClear, IsPlainOldData)
	class AUTBaseScoring*                              CTFScoring;                                               // 0x0978(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                IntermissionDuration;                                     // 0x0980(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0984(0x0004) MISSED OFFSET
	class AUTTeamInfo*                                 LastTeamToScore;                                          // 0x0988(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                FlagCapScore;                                             // 0x0990(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bPlacingPlayersAtIntermission;                            // 0x0994(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x23];                                      // 0x0995(0x0023) MISSED OFFSET
	class UClass*                                      TranslocatorClass;                                        // 0x09B8(0x0008) (ZeroConstructor, IsPlainOldData)
	bool                                               bGameHasTranslocator;                                     // 0x09C0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x09C1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTCTFBaseGame");
		return ptr;
	}


	void SetRedScore(int NewScore);
	void SetBlueScore(int NewScore);
	void CheatScore();
};


// Class UnrealTournament.UTCTFScoring
// 0x0048 (0x03D0 - 0x0388)
class AUTCTFScoring : public AUTBaseScoring
{
public:
	class AUTCTFGameState*                             CTFGameState;                                             // 0x0388(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	uint32_t                                           FlagRunScorePool;                                         // 0x0390(0x0004) (ZeroConstructor, IsPlainOldData)
	uint32_t                                           FlagFirstPickupPoints;                                    // 0x0394(0x0004) (ZeroConstructor, IsPlainOldData)
	uint32_t                                           FlagCapPoints;                                            // 0x0398(0x0004) (ZeroConstructor, IsPlainOldData)
	uint32_t                                           FlagReturnPoints;                                         // 0x039C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              FlagReturnHeldBonus;                                      // 0x03A0(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              FlagKillHeldBonus;                                        // 0x03A4(0x0004) (ZeroConstructor, IsPlainOldData)
	uint32_t                                           MaxFlagHeldBonus;                                         // 0x03A8(0x0004) (ZeroConstructor, IsPlainOldData)
	uint32_t                                           BaseKillScore;                                            // 0x03AC(0x0004) (ZeroConstructor, IsPlainOldData)
	uint32_t                                           FlagCombatKillBonus;                                      // 0x03B0(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              FlagCarrierKillBonus;                                     // 0x03B4(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              FlagReturnAssist;                                         // 0x03B8(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              FlagSupportAssist;                                        // 0x03BC(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              TeamCapBonus;                                             // 0x03C0(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              FlagHolderPointsPerSecond;                                // 0x03C4(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              RecentActionTimeThreshold;                                // 0x03C8(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x03CC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTCTFScoring");
		return ptr;
	}

};


// Class UnrealTournament.UTCTFGameMode
// 0x0008 (0x09D0 - 0x09C8)
class AUTCTFGameMode : public AUTCTFBaseGame
{
public:
	int                                                AdvantageDuration;                                        // 0x09C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x09CC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTCTFGameMode");
		return ptr;
	}

};


// Class UnrealTournament.UTFlagRunGame
// 0x0108 (0x0A70 - 0x0968)
class AUTFlagRunGame : public AUTTeamGameMode
{
public:
	class AUTFlagRunGameState*                         BlitzGameState;                                           // 0x0968(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      BlitzScoringClass;                                        // 0x0970(0x0008) (Edit, BlueprintVisible, ZeroConstructor, NoClear, IsPlainOldData)
	class AUTBaseScoring*                              BlitzScoring;                                             // 0x0978(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                IntermissionDuration;                                     // 0x0980(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0984(0x0004) MISSED OFFSET
	class AUTTeamInfo*                                 LastTeamToScore;                                          // 0x0988(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bPlacingPlayersAtIntermission;                            // 0x0990(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0991(0x0003) MISSED OFFSET
	float                                              LastEntryDefenseWarningTime;                              // 0x0994(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                GoldScore;                                                // 0x0998(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                SilverScore;                                              // 0x099C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                BronzeScore;                                              // 0x09A0(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                DefenseScore;                                             // 0x09A4(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bAllowBoosts;                                             // 0x09A8(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bSlowFlagCarrier;                                         // 0x09A9(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x09AA(0x0006) MISSED OFFSET
	class AUTCarriedObject*                            ActiveFlag;                                               // 0x09B0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x20];                                      // 0x09B8(0x0020) MISSED OFFSET
	class UClass*                                      ActivatedPowerupPlaceholderClass;                         // 0x09D8(0x0008) (ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  RallyFailedSound;                                         // 0x09E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<class USoundBase*>                          RampUpMusic;                                              // 0x09E8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<float>                                      RampUpTime;                                               // 0x09F8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class USoundBase*                                  EndMusic;                                                 // 0x0A08(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              EndMusicTime;                                             // 0x0A10(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0A14(0x0004) MISSED OFFSET
	struct FName                                       LastAttackerSpawnGroup;                                   // 0x0A18(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FName                                       LastDefenderSpawnGroup;                                   // 0x0A20(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                RoundLives;                                               // 0x0A28(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bUseLevelTiming;                                          // 0x0A2C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0A2D(0x0003) MISSED OFFSET
	float                                              UnlimitedRespawnWaitTime;                                 // 0x0A30(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LimitedRespawnWaitTime;                                   // 0x0A34(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NumRounds;                                                // 0x0A38(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LastAceTime;                                              // 0x0A3C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFirstRoundInitialized;                                   // 0x0A40(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bSecondaryWin;                                            // 0x0A41(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x2];                                       // 0x0A42(0x0002) MISSED OFFSET
	int                                                FlagPickupDelay;                                          // 0x0A44(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxTimeScoreBonus;                                        // 0x0A48(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bRollingAttackerSpawns;                                   // 0x0A4C(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x3];                                       // 0x0A4D(0x0003) MISSED OFFSET
	float                                              RollingAttackerRespawnDelay;                              // 0x0A50(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LastAttackerSpawnTime;                                    // 0x0A54(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              RollingSpawnStartTime;                                    // 0x0A58(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bLastManOccurred;                                         // 0x0A5C(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x3];                                       // 0x0A5D(0x0003) MISSED OFFSET
	class AUTPlayerState*                              FlagScorer;                                               // 0x0A60(0x0008) (ZeroConstructor, IsPlainOldData)
	bool                                               bSitOutDuringRound;                                       // 0x0A68(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x7];                                       // 0x0A69(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTFlagRunGame");
		return ptr;
	}


	void PlayRampUpMusic();
	void PlayEndMusic();
};


// Class UnrealTournament.UTMonsterAI
// 0x0010 (0x0860 - 0x0850)
class AUTMonsterAI : public AUTBot
{
public:
	class UClass*                                      PawnClass;                                                // 0x0850(0x0008) (ZeroConstructor, IsPlainOldData)
	bool                                               bOneShotAttacks;                                          // 0x0858(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0859(0x0003) MISSED OFFSET
	float                                              FiringRotationRateMult;                                   // 0x085C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTMonsterAI");
		return ptr;
	}

};


// Class UnrealTournament.UTReplicatedEmitter
// 0x0018 (0x03A0 - 0x0388)
class AUTReplicatedEmitter : public AActor
{
public:
	class UParticleSystemComponent*                    PSC;                                                      // 0x0388(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	float                                              DedicatedServerLifeSpan;                                  // 0x0390(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bAttachToOwnerMesh;                                       // 0x0394(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0395(0x0003) MISSED OFFSET
	struct FName                                       BaseSocketName;                                           // 0x0398(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTReplicatedEmitter");
		return ptr;
	}


	void OnParticlesFinished(class UParticleSystemComponent* FinishedPSC);
	void OnAttachedTo(class USceneComponent* BaseComponent);
};


// Class UnrealTournament.UTDroppedPickup
// 0x0048 (0x03D0 - 0x0388)
class AUTDroppedPickup : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0388(0x0008) MISSED OFFSET
	class AUTInventory*                                Inventory;                                                // 0x0390(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      InventoryType;                                            // 0x0398(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	class UMeshComponent*                              Mesh;                                                     // 0x03A0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, IsPlainOldData)
	bool                                               bFullyInitialized;                                        // 0x03A8(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x03A9(0x0007) MISSED OFFSET
	class UUTWeaponSkin*                               WeaponSkin;                                               // 0x03B0(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class UCapsuleComponent*                           Collision;                                                // 0x03B8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class UUTProjectileMovementComponent*              Movement;                                                 // 0x03C0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x03C8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTDroppedPickup");
		return ptr;
	}


	void SetPickupSheen(float SheenValue);
	void SetInventory(class AUTInventory* NewInventory);
	void ProcessTouch(class APawn* TouchedBy);
	void PlayTakenEffects(class APawn* TakenBy);
	void PhysicsStopped(const struct FHitResult& ImpactResult);
	void OnRepWeaponSkin();
	void OnOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void InventoryTypeUpdated();
	void GiveTo(class APawn* Target);
	class USoundBase* GetPickupSound();
	void EnableInstigatorTouch();
	float DetourWeight(class APawn* Asker, float PathDistance);
	void CheckTouching();
	float BotDesireability(class APawn* Asker, class AController* RequestOwner, float PathDistance);
	bool AllowPickupBy(class APawn* Other, bool bDefaultAllowPickup);
};


// Class UnrealTournament.UTPickupMessage
// 0x0018 (0x0070 - 0x0058)
class UUTPickupMessage : public UUTLocalMessage
{
public:
	struct FText                                       PendingWeaponPickupText;                                  // 0x0058(0x0018) (Edit, BlueprintVisible)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTPickupMessage");
		return ptr;
	}

};


// Class UnrealTournament.UTPickup
// 0x0208 (0x0590 - 0x0388)
class AUTPickup : public AActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0388(0x0010) MISSED OFFSET
	class UCapsuleComponent*                           Collision;                                                // 0x0398(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    TimerEffect;                                              // 0x03A0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    BaseEffect;                                               // 0x03A8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class UParticleSystem*                             BaseTemplateAvailable;                                    // 0x03B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             BaseTemplateTaken;                                        // 0x03B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             PreSpawnEffect;                                           // 0x03C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PreSpawnTime;                                             // 0x03C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x14];                                      // 0x03CC(0x0014) MISSED OFFSET
	struct FTransform                                  PreSpawnEffectTransform;                                  // 0x03E0(0x0030) (Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     PreSpawnColorVectorParam;                                 // 0x0410(0x000C) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RespawnTime;                                              // 0x041C(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bDelayedSpawn : 1;                                        // 0x0420(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bFixedRespawnInterval : 1;                                // 0x0420(0x0001) (BlueprintVisible, BlueprintReadOnly, Net)
	unsigned char                                      bSpawnOncePerRound : 1;                                   // 0x0420(0x0001) (Edit, BlueprintVisible, Net)
	unsigned char                                      bHasSpawnedThisRound : 1;                                 // 0x0420(0x0001) (Edit, BlueprintVisible, Net)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0421(0x0007) MISSED OFFSET
	class UParticleSystem*                             TakenParticles;                                           // 0x0428(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  TakenEffectTransform;                                     // 0x0430(0x0030) (Edit, BlueprintVisible, IsPlainOldData)
	class USoundBase*                                  TakenSound;                                               // 0x0460(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             RespawnParticles;                                         // 0x0468(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  RespawnEffectTransform;                                   // 0x0470(0x0030) (Edit, BlueprintVisible, IsPlainOldData)
	class USoundBase*                                  RespawnSound;                                             // 0x04A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FName>                               TakenHideTags;                                            // 0x04A8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FPickupReplicatedState                      State;                                                    // 0x04B8(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	class UMaterialInstanceDynamic*                    TimerMI;                                                  // 0x04C0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class AUTPlayerState*                              LastPickedUpBy;                                           // 0x04C8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class AUTSpectatorCamera*                          Camera;                                                   // 0x04D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                IconColor;                                                // 0x04D8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCanvasIcon                                 HUDIcon;                                                  // 0x04E8(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FCanvasIcon                                 MinimapIcon;                                              // 0x0500(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	float                                              BeaconDist;                                               // 0x0518(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bBeaconThroughWalls;                                      // 0x051C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x051D(0x0003) MISSED OFFSET
	struct FCanvasIcon                                 BeaconArrow;                                              // 0x0520(0x0018) (Edit, BlueprintVisible)
	bool                                               bHasTacComView;                                           // 0x0538(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0xF];                                       // 0x0539(0x000F) MISSED OFFSET
	struct FText                                       PickupMessageString;                                      // 0x0548(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	float                                              BaseDesireability;                                        // 0x0560(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bOverride_TeamSide;                                       // 0x0564(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      TeamSide;                                                 // 0x0565(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x2];                                       // 0x0566(0x0002) MISSED OFFSET
	TArray<struct FName>                               TutorialAnnouncements;                                    // 0x0568(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData06[0x4];                                       // 0x0578(0x0004) MISSED OFFSET
	float                                              RespawnTimeRemaining;                                     // 0x057C(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               bReplicateReset;                                          // 0x0580(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0xF];                                       // 0x0581(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTPickup");
		return ptr;
	}


	void WakeUpTimer();
	void WakeUp();
	void StartSleeping();
	void SetPickupHidden(bool bNowHidden);
	void ProcessTouch(class APawn* TouchedBy);
	void PlayTakenEffects(bool bReplicate);
	void PlayRespawnEffects();
	void OnRep_RespawnTimeRemaining();
	void OnRep_Reset();
	void OnOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepHitResult);
	bool IsTaken(class APawn* TestPawn);
	bool IsSuperDesireable(class AController* RequestOwner, float CalculatedDesire);
	void GiveTo(class APawn* Target);
	float GetRespawnTimeOffset(class APawn* Asker);
	struct FCanvasIcon GetMinimapIcon();
	bool FlashOnMinimap();
	float DetourWeight(class APawn* Asker, float PathDistance);
	float BotDesireability(class APawn* Asker, class AController* RequestOwner, float PathDistance);
	bool AllowPickupBy(class APawn* Other, bool bDefaultAllowPickup);
};


// Class UnrealTournament.UTPickupHealth
// 0x0020 (0x05B0 - 0x0590)
class AUTPickupHealth : public AUTPickup
{
public:
	struct FName                                       StatsNameCount;                                           // 0x0590(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UMeshComponent*                              Mesh;                                                     // 0x0598(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, IsPlainOldData)
	class UMeshComponent*                              GhostMesh;                                                // 0x05A0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, IsPlainOldData)
	class UMaterialInterface*                          GhostMeshMaterial;                                        // 0x05A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTPickupHealth");
		return ptr;
	}


	int GetHealMax(class AUTCharacter* P);
};


// Class UnrealTournament.UTTeamInfo
// 0x0128 (0x04B0 - 0x0388)
class AUTTeamInfo : public AInfo
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0388(0x0008) MISSED OFFSET
	unsigned char                                      TeamIndex;                                                // 0x0390(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0391(0x0003) MISSED OFFSET
	struct FLinearColor                                TeamColor;                                                // 0x0394(0x0010) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x03A4(0x0004) MISSED OFFSET
	TArray<struct FName>                               DefaultOrders;                                            // 0x03A8(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                DefaultOrderIndex;                                        // 0x03B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x03BC(0x0004) MISSED OFFSET
	TArray<struct FPickupClaim>                        PickupClaims;                                             // 0x03C0(0x0010) (ZeroConstructor)
	float                                              BotIgnoreFlagUntil;                                       // 0x03D0(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x03D4(0x0004) MISSED OFFSET
	struct FText                                       TeamName;                                                 // 0x03D8(0x0018) (Edit, BlueprintVisible, Net)
	int                                                Score;                                                    // 0x03F0(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	int                                                RoundBonus;                                               // 0x03F4(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	class AUTPlayerState*                              TopAttacker;                                              // 0x03F8(0x0008) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	class AUTPlayerState*                              TopDefender;                                              // 0x0400(0x0008) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	class AUTPlayerState*                              TopSupporter;                                             // 0x0408(0x0008) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bFromPreviousLevel;                                       // 0x0410(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x7];                                       // 0x0411(0x0007) MISSED OFFSET
	TArray<class AController*>                         TeamMembers;                                              // 0x0418(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<class AUTSquadAI*>                          Squads;                                                   // 0x0428(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FBotEnemyInfo>                       EnemyList;                                                // 0x0438(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      UnknownData06[0x50];                                      // 0x0448(0x0050) MISSED OFFSET
	float                                              LastScoreStatsUpdateTime;                                 // 0x0498(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x049C(0x0004) MISSED OFFSET
	struct FString                                     VoiceChatChannel;                                         // 0x04A0(0x0010) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTTeamInfo");
		return ptr;
	}


	void UpdateEnemyInfo(class APawn* NewEnemy, TEnumAsByte<EAIEnemyUpdateType> UpdateType);
	void RemoveFromTeam(class AController* C);
	void ReceivedTeamIndex();
	void NotifyObjectiveEvent(class AActor* InObjective, class AController* InstigatedBy, const struct FName& EventName);
	float GetStatsValue(const struct FName& StatsName);
	void AddToTeam(class AController* C);
};


// Class UnrealTournament.UTSquadAI
// 0x0060 (0x03E8 - 0x0388)
class AUTSquadAI : public AInfo
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0388(0x0008) MISSED OFFSET
	class AUTTeamInfo*                                 Team;                                                     // 0x0390(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       Orders;                                                   // 0x0398(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x03A0(0x0008) MISSED OFFSET
	TArray<class AController*>                         Members;                                                  // 0x03A8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	class AController*                                 Leader;                                                   // 0x03B8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class AActor*                                      Objective;                                                // 0x03C0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class AUTGameObjective*                            GameObjective;                                            // 0x03C8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FAlternateRoute>                     SquadRoutes;                                              // 0x03D0(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData02[0x8];                                       // 0x03E0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTSquadAI");
		return ptr;
	}

};


// Class UnrealTournament.UTDroppedHealth
// 0x0018 (0x03E8 - 0x03D0)
class AUTDroppedHealth : public AUTDroppedPickup
{
public:
	class USoundBase*                                  PickupSound;                                              // 0x03D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                HealAmount;                                               // 0x03D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bSuperHeal;                                               // 0x03DC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x03DD(0x0003) MISSED OFFSET
	float                                              BaseDesireability;                                        // 0x03E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x03E4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTDroppedHealth");
		return ptr;
	}


	int GetHealMax(class AUTCharacter* P);
};


// Class UnrealTournament.UTMonster
// 0x00A0 (0x0FD0 - 0x0F30)
class AUTMonster : public AUTCharacter
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0F30(0x0010) MISSED OFFSET
	int                                                Cost;                                                     // 0x0F40(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                NumRespawns;                                              // 0x0F44(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FBotPersonality                             AIPersonality;                                            // 0x0F48(0x0028) (Edit, DisableEditOnInstance)
	class UClass*                                      HealthDropType;                                           // 0x0F70(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      ExtraDropType;                                            // 0x0F78(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      ExtraRawDropType;                                         // 0x0F80(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DropChance;                                               // 0x0F88(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0F8C(0x0004) MISSED OFFSET
	struct FCanvasIcon                                 HUDIcon;                                                  // 0x0F90(0x0018) (Edit, DisableEditOnInstance)
	TArray<class UClass*>                              DisallowedPickupTypes;                                    // 0x0FA8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	float                                              TeleportDodgeDistance;                                    // 0x0FB8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0FBC(0x0004) MISSED OFFSET
	class UClass*                                      TeleportDodgeEffect;                                      // 0x0FC0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TeleportDodgeCooldown;                                    // 0x0FC8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0FCC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTMonster");
		return ptr;
	}

};


// Class UnrealTournament.UTFlagRunPvEGame
// 0x0060 (0x0AD0 - 0x0A70)
class AUTFlagRunPvEGame : public AUTFlagRunGame
{
public:
	TArray<struct FStringClassReference>               EditableMonsterTypes;                                     // 0x0A70(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<class UClass*>                              MonsterTypesPeon;                                         // 0x0A80(0x0010) (BlueprintVisible, ZeroConstructor)
	TArray<class UClass*>                              MonsterTypesElite;                                        // 0x0A90(0x0010) (BlueprintVisible, ZeroConstructor)
	struct FStringClassReference                       VialReplacement;                                          // 0x0AA0(0x0010) (ZeroConstructor)
	bool                                               bLevelHasEnergyPickups;                                   // 0x0AB0(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0AB1(0x0003) MISSED OFFSET
	int                                                BaseKillsForExtraLife;                                    // 0x0AB4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ElitePointsRemaining;                                     // 0x0AB8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                EliteCostLimit;                                           // 0x0ABC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FStringClassReference>               BoostPowerupTypes;                                        // 0x0AC0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTFlagRunPvEGame");
		return ptr;
	}


	void EscalateMonsters();
};


// Class UnrealTournament.UTTeamDMGameMode
// 0x0008 (0x0970 - 0x0968)
class AUTTeamDMGameMode : public AUTTeamGameMode
{
public:
	bool                                               bScoreTeamKills;                                          // 0x0968(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bScoreSuicides;                                           // 0x0969(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x096A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTTeamDMGameMode");
		return ptr;
	}

};


// Class UnrealTournament.UTDuelGame
// 0x0000 (0x0970 - 0x0970)
class AUTDuelGame : public AUTTeamDMGameMode
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTDuelGame");
		return ptr;
	}

};


// Class UnrealTournament.UTShowdownGame
// 0x0090 (0x0A00 - 0x0970)
class AUTShowdownGame : public AUTDuelGame
{
public:
	unsigned char                                      UnknownData00[0x1];                                       // 0x0970(0x0001) MISSED OFFSET
	bool                                               bXRayBreaker;                                             // 0x0971(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bPowerupBreaker;                                          // 0x0972(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData01[0x5];                                       // 0x0973(0x0005) MISSED OFFSET
	struct FStringClassReference                       PowerupBreakerPickupClass;                                // 0x0978(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FStringClassReference                       PowerupBreakerItemClass;                                  // 0x0988(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FStringClassReference                       SuperweaponReplacementPickupClass;                        // 0x0998(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FStringClassReference                       SuperweaponReplacementItemClass;                          // 0x09A8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	class AUTPickupInventory*                          BreakerPickup;                                            // 0x09B8(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              PowerupDuration;                                          // 0x09C0(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x09C4(0x0004) MISSED OFFSET
	int                                                ExtraHealth;                                              // 0x09C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      SpawnSelectionTime;                                       // 0x09CC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x09CD(0x0003) MISSED OFFSET
	TArray<class AUTPlayerState*>                      RemainingPicks;                                           // 0x09D0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                RoundElapsedTime;                                         // 0x09E0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x09E4(0x0004) MISSED OFFSET
	class AUTTeamInfo*                                 LastRoundWinner;                                          // 0x09E8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FTimedPlayerPing>                    DamagePings;                                              // 0x09F0(0x0010) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTShowdownGame");
		return ptr;
	}


	void StartIntermission();
	void AddDamagePing(class AUTCharacter* Char, unsigned char VisibleToTeam, float LifeTime);
};


// Class UnrealTournament.UTTeamShowdownGame
// 0x0000 (0x0A00 - 0x0A00)
class AUTTeamShowdownGame : public AUTShowdownGame
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTTeamShowdownGame");
		return ptr;
	}

};


// Class UnrealTournament.UTTimeDemoGameMode
// 0x0030 (0x0938 - 0x0908)
class AUTTimeDemoGameMode : public AUTGameMode
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0908(0x0008) MISSED OFFSET
	TArray<struct FString>                             CommandsToRunAtStart;                                     // 0x0910(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FString>                             CommandsToRunAtStop;                                      // 0x0920(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0930(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTTimeDemoGameMode");
		return ptr;
	}


	void StopTimeDemo();
	void StartTimeDemo();
};


// Class UnrealTournament.UTLobbyPlayerState
// 0x00B0 (0x0A80 - 0x09D0)
class AUTLobbyPlayerState : public AUTPlayerState
{
public:
	class AUTLobbyMatchInfo*                           LastInvitedMatch;                                         // 0x09D0(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class AUTLobbyMatchInfo*                           PreviousMatch;                                            // 0x09D8(0x0008) (ZeroConstructor, IsPlainOldData)
	class AUTLobbyMatchInfo*                           JoiningLeaderMatch;                                       // 0x09E0(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x90];                                      // 0x09E8(0x0090) MISSED OFFSET
	unsigned char                                      DesiredTeamNum;                                           // 0x0A78(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0A79(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTLobbyPlayerState");
		return ptr;
	}


	void ServerJoinMatch(class AUTLobbyMatchInfo* MatchToJoin, bool bAsSpectator);
	void ServerDestroyOrLeaveMatch();
	void ServerCreateInstance(const struct FString& CustomName, const struct FString& RulesetTag, const struct FString& StartingMap, bool bIsInParty, bool bRankLocked, bool bSpectatable, bool bPrivateMatch, bool bBeginnerMatch, bool bUseBots, int BotDifficulty, bool bRequireFilled, bool bHostControl);
	void ServerCreateCustomInstance(const struct FString& CustomName, const struct FString& GameMode, const struct FString& StartingMap, bool bIsInParty, const struct FString& Description, TArray<struct FString> GameOptions, int DesiredPlayerCount, bool bTeamGame, bool bRankLocked, bool bSpectatable, bool bPrivateMatch, bool bBeginnerMatch, bool bUseBots, int BotDifficulty, bool bRequireFilled, bool bHostControl);
	void Server_SendDataBlock(int bLock);
	void Server_ReadyToBeginDataPush();
	void OnRep_CurrentMatch();
	void NotifyBeginnerAutoLock();
	void ClientMatchError(const struct FText& MatchErrorMessage, int OptionalInt);
	void ClientConnectToInstance(const struct FString& GameInstanceGUIDString, int InDesiredTeam, bool bAsSpectator);
	void ClientAddedToMatch(bool bIsHost);
	void Client_ReceiveBlock(int bLock, const struct FAllowedData& Data);
	void Client_BeginDataPush(int ExpectedSendCount);
};


// Class UnrealTournament.UTLobbyPC
// 0x0030 (0x0820 - 0x07F0)
class AUTLobbyPC : public AUTBasePlayerController
{
public:
	class AUTLobbyHUD*                                 UTLobbyHUD;                                               // 0x07F0(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x28];                                      // 0x07F8(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTLobbyPC");
		return ptr;
	}


	void SetLobbyDebugLevel(int NewLevel);
	void ServerSendRedirectCount();
	void ServerSendAllRedirects();
	void ServerRconKillMatch(class AUTLobbyMatchInfo* MatchToKill);
	void ServerChat(const struct FName& Destination, const struct FString& Message);
	void MatchChat(const struct FString& Message);
	void GlobalChat(const struct FString& Message);
	void ClientReceiveRedirectCount(int NewCount);
	void ClientReceiveRedirect(const struct FPackageRedirectReference& Redirect);
};


// Class UnrealTournament.UTServerBeaconHost
// 0x0000 (0x03B0 - 0x03B0)
class AUTServerBeaconHost : public AOnlineBeaconHostObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTServerBeaconHost");
		return ptr;
	}

};


// Class UnrealTournament.UTServerBeaconLobbyHostObject
// 0x0000 (0x03B0 - 0x03B0)
class AUTServerBeaconLobbyHostObject : public AUTServerBeaconHost
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTServerBeaconLobbyHostObject");
		return ptr;
	}

};


// Class UnrealTournament.UTServerBeaconLobbyHostListener
// 0x0000 (0x0468 - 0x0468)
class AUTServerBeaconLobbyHostListener : public AOnlineBeaconHost
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTServerBeaconLobbyHostListener");
		return ptr;
	}

};


// Class UnrealTournament.UTReplicatedGameRuleset
// 0x0120 (0x04A8 - 0x0388)
class AUTReplicatedGameRuleset : public AInfo
{
public:
	struct FUTGameRuleset                              Data;                                                     // 0x0388(0x00F8) (BlueprintVisible, BlueprintReadOnly, Net)
	TArray<class AUTReplicatedMapInfo*>                MapList;                                                  // 0x0480(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor)
	int                                                OptimalPlayers;                                           // 0x0490(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bCustomRuleset : 1;                                       // 0x0494(0x0001) (BlueprintVisible, BlueprintReadOnly, Net)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0495(0x0003) MISSED OFFSET
	class UTexture2D*                                  BadgeTexture;                                             // 0x0498(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x04A0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTReplicatedGameRuleset");
		return ptr;
	}


	void OnReceiveData();
	struct FString GetDescription();
	class AUTGameMode* GetDefaultGameModeObject();
	void BuildSlateBadge();
};


// Class UnrealTournament.UTLobbyGameState
// 0x0120 (0x0D00 - 0x0BE0)
class AUTLobbyGameState : public AUTGameState
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0BE0(0x0008) MISSED OFFSET
	TArray<class AUTLobbyMatchInfo*>                   AvailableMatches;                                         // 0x0BE8(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0BF8(0x0010) MISSED OFFSET
	struct FString                                     ForcedInstanceGameOptions;                                // 0x0C08(0x0010) (ZeroConstructor, Config)
	struct FString                                     AdditionalInstanceCommandLine;                            // 0x0C18(0x0010) (ZeroConstructor, Config)
	TArray<struct FString>                             AccessKeys;                                               // 0x0C28(0x0010) (ZeroConstructor, Config)
	TArray<class UClass*>                              LoadedGametypes;                                          // 0x0C38(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData02[0x18];                                      // 0x0C48(0x0018) MISSED OFFSET
	int                                                AvailabelGameRulesetCount;                                // 0x0C60(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0C64(0x0004) MISSED OFFSET
	TArray<class AUTReplicatedGameRuleset*>            AvailableGameRulesets;                                    // 0x0C68(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor)
	TArray<struct FAllowedData>                        AllowedGameData;                                          // 0x0C78(0x0010) (ZeroConstructor, Config)
	unsigned char                                      UnknownData04[0x38];                                      // 0x0C88(0x0038) MISSED OFFSET
	TArray<class AUTReplicatedMapInfo*>                AllMapsOnServer;                                          // 0x0CC0(0x0010) (Net, ZeroConstructor)
	int                                                AllMapsOnServerCount;                                     // 0x0CD0(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	int                                                MaxSpectatorsInInstance;                                  // 0x0CD4(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bTrainingGround;                                          // 0x0CD8(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0CD9(0x0003) MISSED OFFSET
	int                                                NumGameInstances;                                         // 0x0CDC(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               bCustomContentAvailable;                                  // 0x0CE0(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               bAllowInstancesToStartWithBots;                           // 0x0CE1(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x1E];                                      // 0x0CE2(0x001E) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTLobbyGameState");
		return ptr;
	}

};


// Class UnrealTournament.UTLobbyGameMode
// 0x0078 (0x0628 - 0x05B0)
class AUTLobbyGameMode : public AUTBaseGameMode
{
public:
	class AUTLobbyGameState*                           UTLobbyGameState;                                         // 0x05B0(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                ServerRefreshCheckpoint;                                  // 0x05B8(0x0004) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x05BC(0x0004) MISSED OFFSET
	struct FString                                     LobbyPassword;                                            // 0x05C0(0x0010) (ZeroConstructor, Config, GlobalConfig)
	int                                                StartingInstancePort;                                     // 0x05D0(0x0004) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	int                                                InstancePortStep;                                         // 0x05D4(0x0004) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	struct FString                                     AutoLaunchGameMode;                                       // 0x05D8(0x0010) (ZeroConstructor, Config, GlobalConfig)
	struct FString                                     AutoLaunchGameOptions;                                    // 0x05E8(0x0010) (ZeroConstructor, Config, GlobalConfig)
	struct FString                                     AutoLaunchMap;                                            // 0x05F8(0x0010) (ZeroConstructor, Config, GlobalConfig)
	int                                                MaxInstances;                                             // 0x0608(0x0004) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	bool                                               bAllowInstancesToStartWithBots;                           // 0x060C(0x0001) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x060D(0x0003) MISSED OFFSET
	class UClass*                                      GameMessageClass;                                         // 0x0610(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                LobbyMaxTickRate;                                         // 0x0618(0x0004) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x061C(0x0004) MISSED OFFSET
	int                                                MaxPlayersInLobby;                                        // 0x0620(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0624(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTLobbyGameMode");
		return ptr;
	}

};


// Class UnrealTournament.UTHUDWidget
// 0x00C0 (0x00E8 - 0x0028)
class UUTHUDWidget : public UObject
{
public:
	float                                              DesignedResolution;                                       // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   Position;                                                 // 0x002C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   Size;                                                     // 0x0034(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   Origin;                                                   // 0x003C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   RealOrigin;                                               // 0x0044(0x0008) (ZeroConstructor, IsPlainOldData)
	bool                                               bShouldKickBack;                                          // 0x004C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x004D(0x0003) MISSED OFFSET
	struct FVector2D                                   ScreenPosition;                                           // 0x0050(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   LineupPositionOffset;                                     // 0x0058(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bScaleByDesignedResolution;                               // 0x0060(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0061(0x0003) MISSED OFFSET
	unsigned char                                      bMaintainAspectRatio : 1;                                 // 0x0064(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0065(0x0003) MISSED OFFSET
	float                                              Opacity;                                                  // 0x0068(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bIgnoreHUDBaseColor : 1;                                  // 0x006C(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bIgnoreHUDOpacity : 1;                                    // 0x006C(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData03[0x3];                                       // 0x006D(0x0003) MISSED OFFSET
	class AUTHUD*                                      UTHUDOwner;                                               // 0x0070(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class AUTPlayerController*                         UTPlayerOwner;                                            // 0x0078(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class AUTCharacter*                                UTCharacterOwner;                                         // 0x0080(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class AUTGameState*                                UTGameState;                                              // 0x0088(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0090(0x0004) MISSED OFFSET
	unsigned char                                      bHidden : 1;                                              // 0x0094(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0095(0x0003) MISSED OFFSET
	float                                              LastRenderTime;                                           // 0x0098(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   RenderPosition;                                           // 0x009C(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   RenderSize;                                               // 0x00A4(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RenderScale;                                              // 0x00AC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   CanvasCenter;                                             // 0x00B0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCanvas*                                     Canvas;                                                   // 0x00B8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AspectScale;                                              // 0x00C0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x14];                                      // 0x00C4(0x0014) MISSED OFFSET
	TArray<class UStructProperty*>                     RenderObjectList;                                         // 0x00D8(0x0010) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTHUDWidget");
		return ptr;
	}


	bool ShouldDraw(bool bShowScores);
	void SetHidden(bool bIsHidden);
	void RenderObj_TextureAtWithRotation(const struct FVector2D& Postion, float Rotation, struct FHUDRenderObject_Texture* TextureObject);
	void RenderObj_TextureAt(float X, float Y, float Width, float Height, struct FHUDRenderObject_Texture* TextureObject);
	void RenderObj_Texture(const struct FVector2D& DrawOffset, struct FHUDRenderObject_Texture* TextureObject);
	struct FVector2D RenderObj_TextAt(float X, float Y, struct FHUDRenderObject_Text* TextObject);
	struct FVector2D RenderObj_Text(const struct FVector2D& DrawOffset, struct FHUDRenderObject_Text* TextObject);
	void DrawTexture(class UTexture* Texture, float X, float Y, float Width, float Height, float MaterialU, float MaterialV, float MaterialUL, float MaterialVL, float DrawOpacity, const struct FLinearColor& DrawColor, const struct FVector2D& RenderOffset, float Rotation, const struct FVector2D& RotPivot);
	struct FVector2D DrawText(const struct FText& Text, float X, float Y, class UFont* Font, bool bDrawShadow, const struct FVector2D& ShadowDirection, const struct FLinearColor& ShadowColor, bool bDrawOutline, const struct FLinearColor& OutlineColor, float TextScale, float DrawOpacity, const struct FLinearColor& DrawColor, const struct FLinearColor& BackColor, TEnumAsByte<ETextHorzPos> TextHorzAlignment, TEnumAsByte<ETextVertPos> TextVertAlignment, const struct FFontRenderInfo& RenderInfo);
	void DrawMaterial(class UMaterialInterface* Material, float X, float Y, float Width, float Height, float MaterialU, float MaterialV, float MaterialUWidth, float MaterialVHeight, float DrawOpacity, const struct FLinearColor& DrawColor, const struct FVector2D& RenderOffset, float Rotation, const struct FVector2D& RotPivot);
	void DrawAllRenderObjects(float DeltaTime, const struct FVector2D& DrawOffset);
	void Draw(float DeltaTime);
	struct FVector2D CalcRotatedDrawLocation(float DistanceInPixels, float Angle);
	struct FLinearColor ApplyHUDColor(const struct FLinearColor& DrawColor);
};


// Class UnrealTournament.UTInventory
// 0x01E8 (0x0570 - 0x0388)
class AUTInventory : public AActor
{
public:
	class AUTInventory*                                NextInventory;                                            // 0x0388(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	class AUTCharacter*                                UTOwner;                                                  // 0x0390(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0398(0x0010) MISSED OFFSET
	class UMeshComponent*                              PickupMesh;                                               // 0x03A8(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x03B0(0x0018) MISSED OFFSET
	struct FText                                       DisplayName;                                              // 0x03C8(0x0018) (Edit, BlueprintVisible)
	float                                              RespawnTime;                                              // 0x03E0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bDelayedSpawn;                                            // 0x03E4(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bFixedRespawnInterval;                                    // 0x03E5(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x03E6(0x0002) MISSED OFFSET
	class UParticleSystem*                             PreSpawnEffect;                                           // 0x03E8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PreSpawnTime;                                             // 0x03F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0xC];                                       // 0x03F4(0x000C) MISSED OFFSET
	struct FTransform                                  PreSpawnEffectTransform;                                  // 0x0400(0x0030) (Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     PreSpawnColorVectorParam;                                 // 0x0430(0x000C) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bAlwaysDropOnDeath;                                       // 0x043C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bNoDropInTeamSafe;                                        // 0x043D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x2];                                       // 0x043E(0x0002) MISSED OFFSET
	class UParticleSystem*                             PickupEffect;                                             // 0x0440(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  PickupSound;                                              // 0x0448(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  ReceivedDamageSound;                                      // 0x0450(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  ShieldDamageSound;                                        // 0x0458(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      DroppedPickupClass;                                       // 0x0460(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bCallDamageEvents : 1;                                    // 0x0468(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bCallOwnerEvent : 1;                                      // 0x0468(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bFromLocker : 1;                                          // 0x0468(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0469(0x0003) MISSED OFFSET
	float                                              BasePickupDesireability;                                  // 0x046C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                IconColor;                                                // 0x0470(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCanvasIcon                                 HUDIcon;                                                  // 0x0480(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FCanvasIcon                                 MinimapIcon;                                              // 0x0498(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                      PickupSpawnAnnouncement;                                  // 0x04B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                PickupAnnouncementIndex;                                  // 0x04B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x04BC(0x0004) MISSED OFFSET
	struct FName                                       PickupAnnouncementName;                                   // 0x04C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bShouldAnnounceDrops;                                     // 0x04C8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bShowPowerupTimer;                                        // 0x04C9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bBoostPowerupSuppliedItem;                                // 0x04CA(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData07[0x1];                                       // 0x04CB(0x0001) MISSED OFFSET
	int                                                RemainingBoostsGivenOverride;                             // 0x04CC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bNotifyTeamOnPowerupUse;                                  // 0x04D0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData08[0x7];                                       // 0x04D1(0x0007) MISSED OFFSET
	struct FText                                       NotifyMessage;                                            // 0x04D8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FName                                       AnnouncementName;                                         // 0x04F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              HUDRenderPriority;                                        // 0x04F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              InitialFlashTime;                                         // 0x04FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              InitialFlashScale;                                        // 0x0500(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                InitialFlashColor;                                        // 0x0504(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x4];                                       // 0x0514(0x0004) MISSED OFFSET
	class UTexture2D*                                  MenuGraphic;                                              // 0x0518(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCanvasIcon                                 PowerupGraphic;                                           // 0x0520(0x0018) (Edit, BlueprintVisible)
	struct FText                                       MenuDescription;                                          // 0x0538(0x0018) (Edit, BlueprintVisible)
	struct FName                                       StatsNameCount;                                           // 0x0550(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bShouldPrecacheTutorialAnnouncements;                     // 0x0558(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0x7];                                       // 0x0559(0x0007) MISSED OFFSET
	TArray<struct FName>                               TutorialAnnouncements;                                    // 0x0560(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTInventory");
		return ptr;
	}


	bool StackPickup(class AUTInventory* ContainedInv);
	bool ShouldDisplayHitEffect(int AttemptedDamage, int DamageAmount, int FinalHealth, int FinalArmor);
	bool PreventHeadShot(const struct FVector& HitLocation, const struct FVector& ShotDirection, float WeaponHeadScaling, bool bConsumeArmor);
	bool PlayArmorEffects(class AUTCharacter* HitPawn);
	void OwnerEvent(const struct FName& EventName);
	bool OverrideGiveTo(class AUTPickup* Pickup);
	void OnViewTargetChange(class AUTPlayerController* NewViewTarget);
	bool ModifyDamageTaken(class AController* InstigatedBy, const struct FHitResult& HitInfo, class AActor* DamageCauser, class UClass* DamageType, int* Damage, struct FVector* Momentum, class AUTInventory** HitArmor);
	bool HUDShouldRender(class UUTHUDWidget* TargetWidget);
	bool HandleGivenTo(class AUTCharacter* Character);
	class UMeshComponent* GetPickupMeshTemplate(struct FVector* OverrideScale);
	struct FText GetHUDText();
	int GetEffectiveHealthModifier(bool bOnlyVisible);
	float GetBoostPowerRating(class AUTBot* B);
	void eventRemoved();
	void eventGivenTo(class AUTCharacter* NewOwner, bool bAutoActivate);
	void eventClientRemoved();
	void eventClientGivenTo(bool bAutoActivate);
	void DrawInventoryHUD(class UUTHUDWidget* Widget, const struct FVector2D& Pos, const struct FVector2D& Size);
	void DrawBoostHUD(class AUTHUD* HUD, class UCanvas* C, class APawn* P);
	float DetourWeight(class APawn* Asker, class AActor* Pickup, float PathDistance);
	void ClientRemoved();
	void ClientGivenTo(class APawn* NewInstigator, bool bAutoActivate);
	float BotDesireability(class APawn* Asker, class AController* RequestOwner, class AActor* Pickup, float PathDistance);
	void AddOverlayMaterials(class AUTGameState* GS);
};


// Class UnrealTournament.UTPickupInventory
// 0x0040 (0x05D0 - 0x0590)
class AUTPickupInventory : public AUTPickup
{
public:
	class UMeshComponent*                              Mesh;                                                     // 0x0590(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, IsPlainOldData)
	class UMeshComponent*                              GhostMesh;                                                // 0x0598(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, IsPlainOldData)
	class UMaterialInterface*                          GhostMeshMaterial;                                        // 0x05A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FloatHeight;                                              // 0x05A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    RotationOffset;                                           // 0x05AC(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bHasEverSpawned;                                          // 0x05B8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bNotifySpawnForOffense;                                   // 0x05B9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bNotifySpawnForDefense;                                   // 0x05BA(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bAllowRotatingPickup;                                     // 0x05BB(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x05BC(0x000C) MISSED OFFSET
	bool                                               bBeaconWasLeft;                                           // 0x05C8(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x05C9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTPickupInventory");
		return ptr;
	}


	void SetInventoryType(class UClass* NewType);
	void InventoryTypeUpdated();
};


// Class UnrealTournament.UTProjectile
// 0x01B0 (0x0538 - 0x0388)
class AUTProjectile : public AActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0388(0x0010) MISSED OFFSET
	struct FRepUTProjMovement                          UTProjReplicatedMovement;                                 // 0x0398(0x0024) (Net)
	float                                              Slomo;                                                    // 0x03BC(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               bReplicateUTMovement;                                     // 0x03C0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x03C1(0x0003) MISSED OFFSET
	float                                              SlomoTime;                                                // 0x03C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x03C8(0x0008) MISSED OFFSET
	class USphereComponent*                            CollisionComp;                                            // 0x03D0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class UProjectileMovementComponent*                ProjectileMovement;                                       // 0x03D8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	float                                              TossZ;                                                    // 0x03E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              InstigatorVelocityPct;                                    // 0x03E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FRadialDamageParams                         DamageParams;                                             // 0x03E8(0x0014) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData03[0x4];                                       // 0x03FC(0x0004) MISSED OFFSET
	class UClass*                                      MyDamageType;                                             // 0x0400(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Momentum;                                                 // 0x0408(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StatsHitCredit;                                           // 0x040C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       HitsStatsName;                                            // 0x0410(0x0008) (ZeroConstructor, IsPlainOldData)
	bool                                               bCanHitInstigator;                                        // 0x0418(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bCanHitTeammates;                                         // 0x0419(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bInitiallyWarnTarget;                                     // 0x041A(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x5];                                       // 0x041B(0x0005) MISSED OFFSET
	class AController*                                 InstigatorController;                                     // 0x0420(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      InstigatorTeamNum;                                        // 0x0428(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x7];                                       // 0x0429(0x0007) MISSED OFFSET
	class AController*                                 FFInstigatorController;                                   // 0x0430(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      FFDamageType;                                             // 0x0438(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class AActor*                                      ImpactedActor;                                            // 0x0440(0x0008) (ZeroConstructor, IsPlainOldData)
	bool                                               bPendingSpecialReward;                                    // 0x0448(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x7];                                       // 0x0449(0x0007) MISSED OFFSET
	class UClass*                                      ExplosionEffects;                                         // 0x0450(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bLowPriorityLight;                                        // 0x0458(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x7];                                       // 0x0459(0x0007) MISSED OFFSET
	class UParticleSystem*                             BounceEffect;                                             // 0x0460(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  BounceSound;                                              // 0x0468(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USceneComponent*                             OffsetVisualComponent;                                    // 0x0470(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               bDoVisualOffset;                                          // 0x0478(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x3];                                       // 0x0479(0x0003) MISSED OFFSET
	struct FVector                                     FinalVisualOffset;                                        // 0x047C(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     InitialVisualOffset;                                      // 0x0488(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              OffsetTime;                                               // 0x0494(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x5A];                                      // 0x0498(0x005A) MISSED OFFSET
	bool                                               bFakeClientProjectile;                                    // 0x04F2(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0x5];                                       // 0x04F3(0x0005) MISSED OFFSET
	class AUTProjectile*                               MyFakeProjectile;                                         // 0x04F8(0x0008) (ZeroConstructor, IsPlainOldData)
	bool                                               bMoveFakeToReplicatedPos;                                 // 0x0500(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bDamageOnBounce;                                          // 0x0501(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData11[0x6];                                       // 0x0502(0x0006) MISSED OFFSET
	class AUTProjectile*                               MasterProjectile;                                         // 0x0508(0x0008) (ZeroConstructor, IsPlainOldData)
	bool                                               bHasSpawnedFully;                                         // 0x0510(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData12[0x1];                                       // 0x0511(0x0001) MISSED OFFSET
	bool                                               bAlwaysShootable;                                         // 0x0512(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsEnergyProjectile;                                      // 0x0513(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ShooterLocation;                                          // 0x0514(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FRotator                                    ShooterRotation;                                          // 0x0520(0x000C) (ZeroConstructor, IsPlainOldData)
	float                                              OverlapRadius;                                            // 0x052C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USphereComponent*                            PawnOverlapSphere;                                        // 0x0530(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTProjectile");
		return ptr;
	}


	void ShutDown();
	bool ShouldIgnoreHit(class AActor* OtherActor, class UPrimitiveComponent* OtherComp);
	void ProcessHit(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& HitLocation, const struct FVector& HitNormal);
	void OnStop(const struct FHitResult& Hit);
	void OnShutdown();
	void OnRep_UTProjReplicatedMovement();
	void OnRep_Slomo();
	void OnPawnSphereOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnBounce(const struct FHitResult& ImpactResult, const struct FVector& ImpactVelocity);
	bool InteractsWithProj(class AUTProjectile* OtherProj);
	float GetMaxDamageRadius();
	struct FRadialDamageParams GetDamageParams(class AActor* OtherActor, const struct FVector& HitLocation, float* OutMomentum);
	void Explode(const struct FVector& HitLocation, const struct FVector& HitNormal, class UPrimitiveComponent* HitComp);
	void EndSlomo();
	void DamageImpactedActor(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& HitLocation, const struct FVector& HitNormal);
};


// Class UnrealTournament.UTPlaylistManager
// 0x0010 (0x0038 - 0x0028)
class UUTPlaylistManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0028(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTPlaylistManager");
		return ptr;
	}

};


// Class UnrealTournament.UTGameInstance
// 0x0150 (0x0240 - 0x00F0)
class UUTGameInstance : public UGameInstance
{
public:
	unsigned char                                      UnknownData00[0x41];                                      // 0x00F0(0x0041) MISSED OFFSET
	bool                                               bMovieWillAutocompleteWhenLoadFinishes;                   // 0x0131(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0132(0x0006) MISSED OFFSET
	class UUTMatchmaking*                              Matchmaking;                                              // 0x0138(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UUTParty*                                    Party;                                                    // 0x0140(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UUTPlaylistManager*                          PlaylistManager;                                          // 0x0148(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x70];                                      // 0x0150(0x0070) MISSED OFFSET
	TArray<struct FMapVignetteInfo>                    MovieVignettes;                                           // 0x01C0(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData03[0x30];                                      // 0x01D0(0x0030) MISSED OFFSET
	bool                                               bDisablePerformanceCounters;                              // 0x0200(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0201(0x0007) MISSED OFFSET
	TArray<struct FUTGameRuleset>                      GameRulesets;                                             // 0x0208(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      UnknownData05[0x28];                                      // 0x0218(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTGameInstance");
		return ptr;
	}


	void EndLevelLoading();
	void BeginLevelLoading(const struct FString& LevelName);
};


// Class UnrealTournament.UTGameplayStatics
// 0x0000 (0x0028 - 0x0028)
class UUTGameplayStatics : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTGameplayStatics");
		return ptr;
	}


	bool STATIC_UTSuggestProjectileVelocity(class UObject* WorldContextObject, const struct FVector& StartLoc, const struct FVector& EndLoc, class AActor* TargetActor, float ZOvershootTolerance, float TossSpeed, float CollisionRadius, float OverrideGravityZ, int MaxSubdivisions, TEnumAsByte<ESuggestProjVelocityTraceOption> TraceOption, struct FVector* TossVelocity);
	void STATIC_UTPlaySound(class UWorld* TheWorld, class USoundBase* TheSound, class AActor* SourceActor, TEnumAsByte<ESoundReplicationType> RepType, bool bStopWhenOwnerDestroyed, const struct FVector& SoundLoc, class AUTPlayerController* AmpedListener, class APawn* Instigator, bool bNotifyAI, TEnumAsByte<ESoundAmplificationType> AmpType);
	bool STATIC_UTHurtRadius(class UObject* WorldContextObject, float BaseDamage, float MinimumDamage, float BaseMomentumMag, const struct FVector& Origin, float DamageInnerRadius, float DamageOuterRadius, float DamageFalloff, class UClass* DamageTypeClass, TArray<class AActor*> IgnoreActors, class AActor* DamageCauser, class AController* InstigatedByController, class AController* FFInstigatedBy, class UClass* FFDamageType, float CollisionFreeRadius);
	void STATIC_TokensReset(class UObject* WorldContextObject);
	void STATIC_TokensCommit(class UObject* WorldContextObject);
	void STATIC_TokenRevoke(class UObject* WorldContextObject, const struct FName& TokenUniqueID);
	void STATIC_TokenPickedUp(class UObject* WorldContextObject, const struct FName& TokenUniqueID);
	void STATIC_SetModConfigStringArray(const struct FString& ConfigSection, const struct FString& ConfigKey, TArray<struct FString> Value);
	void STATIC_SetModConfigString(const struct FString& ConfigSection, const struct FString& ConfigKey, const struct FString& Value);
	void STATIC_SetModConfigInt(const struct FString& ConfigSection, const struct FString& ConfigKey, int Value);
	void STATIC_SetModConfigFloat(const struct FString& ConfigSection, const struct FString& ConfigKey, float Value);
	void STATIC_SetBestTime(class UObject* WorldContextObject, const struct FName& TimingSection, float InBestTime);
	void STATIC_SaveModConfig();
	void STATIC_ReloadModConfig();
	void STATIC_RecordEvent_UTTutorialPlayInstruction(class AUTPlayerController* UTPC, const struct FString& AnnouncementName, int InstructionID);
	void STATIC_RecordEvent_UTTutorialCompleted(class AUTPlayerController* UTPC, const struct FString& TutorialMap);
	class UAudioComponent* STATIC_PlaySoundTeamAdjusted(class USoundCue* SoundToPlay, class AActor* SoundInstigator, class AActor* SoundTarget, bool Attached);
	class APawn* STATIC_PickBestAimTarget(class AController* AskingC, const struct FVector& StartLoc, const struct FVector& FireDir, float MinAim, float MaxRange, class UClass* TargetClass);
	bool STATIC_LineTraceForWorldBlockingOnly(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, TEnumAsByte<EDrawDebugTrace> DrawDebugType, struct FVector* HitLocation, struct FVector* HitNormal);
	bool STATIC_LineTraceForObjectsSimple(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes, bool bTraceComplex, TEnumAsByte<EDrawDebugTrace> DrawDebugType, bool bIgnoreSelf, struct FVector* HitLocation, struct FVector* HitNormal);
	void STATIC_K2_SaveConfig(class UObject* Obj);
	bool STATIC_IsPlayInEditor(class UObject* WorldContextObject);
	bool STATIC_IsForcingSingleSampleShadowFromStationaryLights();
	int STATIC_HowManyTokensHaveBeenPickedUpBefore(class UObject* WorldContextObject, TArray<struct FName> TokenUniqueIDs);
	bool STATIC_HasTokenBeenPickedUpBefore(class UObject* WorldContextObject, const struct FName& TokenUniqueID);
	int STATIC_GetModConfigStringArray(const struct FString& ConfigSection, const struct FString& ConfigKey, TArray<struct FString>* Value);
	bool STATIC_GetModConfigString(const struct FString& ConfigSection, const struct FString& ConfigKey, struct FString* Value);
	bool STATIC_GetModConfigInt(const struct FString& ConfigSection, const struct FString& ConfigKey, int* Value);
	bool STATIC_GetModConfigFloat(const struct FString& ConfigSection, const struct FString& ConfigKey, float* Value);
	class APlayerController* GetLocalPlayerController(class UObject* WorldContextObject, int PlayerIndex);
	struct FString STATIC_GetLevelName(class UObject* WorldContextObject, bool bShortName);
	float STATIC_GetGravityZ(class UObject* WorldContextObject, const struct FVector& TestLoc);
	class UClass* STATIC_GetGameClass(class UObject* WorldContextObject);
	float STATIC_GetFloatOption(const struct FString& Options, const struct FString& Key, float DefaultValue);
	class AActor* STATIC_GetCurrentAimContext(class AUTCharacter* PawnTarget, float MinAim, float MaxRange, class UClass* TargetClass);
	bool STATIC_GetBestTime(class UObject* WorldContextObject, const struct FName& TimingSection, float* OutBestTime);
	void STATIC_ExecuteDatabaseQuery(class UObject* WorldContextObject, const struct FString& DatabaseQuery, TArray<struct FDatabaseRow>* OutDatabaseRows);
	class APawn* STATIC_ChooseBestAimTarget(class AController* AskingC, const struct FVector& StartLoc, const struct FVector& FireDir, float MinAim, float MaxRange, float MaxOffsetDist, class UClass* TargetClass);
	void STATIC_AssignTeamAdjustmentValue(class UAudioComponent* AudioComponent, class AActor* SoundInstigator);
};


// Class UnrealTournament.UTUMGWidget
// 0x0038 (0x0268 - 0x0230)
class UUTUMGWidget : public UUserWidget
{
public:
	struct FName                                       WidgetTag;                                                // 0x0230(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUniqueUMG;                                               // 0x0238(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0239(0x0003) MISSED OFFSET
	struct FVector2D                                   StackingOffset;                                           // 0x023C(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0244(0x0004) MISSED OFFSET
	class UUTLocalPlayer*                              UTPlayerOwner;                                            // 0x0248(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              DisplayZOrder;                                            // 0x0250(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0254(0x0004) MISSED OFFSET
	TArray<struct FHUDandUMGParticleSystemTracker>     ParticleSystemList;                                       // 0x0258(0x0010) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTUMGWidget");
		return ptr;
	}


	void WidgetOpened();
	void WidgetClosed();
	void SimpleEvent(const struct FName& EventTag);
	void ShowParticleSystem(class UParticleSystem* ParticleSystem, const struct FVector2D& ScreenLocation, bool bRelativeCoords, const struct FVector& LocationModifier, const struct FRotator& DirectionModifier, bool bAttachToCamera);
	void OnParticlesFinished(class UParticleSystemComponent* PCS);
	class UUTLocalPlayer* GetPlayerOwner();
	void CloseWidget();
};


// Class UnrealTournament.UTUMGHudWidget
// 0x0010 (0x0278 - 0x0268)
class UUTUMGHudWidget : public UUTUMGWidget
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0268(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTUMGHudWidget");
		return ptr;
	}


	void SetLifeTime(float LifeSpan);
	void NotifyHUDWidgetIsDone();
	ESlateVisibility GetHUDVisibility();
	ESlateVisibility ApplyHUDVisibility();
};


// Class UnrealTournament.UTUMGHudWidget_Crosshair
// 0x0040 (0x02B8 - 0x0278)
class UUTUMGHudWidget_Crosshair : public UUTUMGHudWidget
{
public:
	struct FWeaponCustomizationInfo                    Customizations;                                           // 0x0278(0x0038) (BlueprintVisible, BlueprintReadOnly)
	TWeakObjectPtr<class AUTWeapon>                    AssociatedWeapon;                                         // 0x02B0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTUMGHudWidget_Crosshair");
		return ptr;
	}


	void ApplyCustomizations(const struct FWeaponCustomizationInfo& CustomizationsToApply);
};


// Class UnrealTournament.UTCrosshair
// 0x0058 (0x0080 - 0x0028)
class UUTCrosshair : public UObject
{
public:
	struct FName                                       CrosshairTag;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     UMGClassname;                                             // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0040(0x0008) MISSED OFFSET
	struct FCanvasIcon                                 CrosshairIcon;                                            // 0x0048(0x0018) (Edit, BlueprintVisible)
	struct FText                                       CrosshairName;                                            // 0x0060(0x0018) (Edit, BlueprintVisible)
	struct FVector2D                                   OffsetAdjust;                                             // 0x0078(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTCrosshair");
		return ptr;
	}


	void NativeDrawCrosshair(class AUTHUD* TargetHUD, class UCanvas* Canvas, class AUTWeapon* Weapon, float DeltaTime, const struct FWeaponCustomizationInfo& CustomizationsToApply);
	void DrawCrosshair(class AUTHUD* TargetHUD, class UCanvas* Canvas, class AUTWeapon* Weapon, float DeltaTime, const struct FWeaponCustomizationInfo& CustomizationsToApply);
	void DeactivateCrosshair(class AUTHUD* TargetHUD);
	void ActivateCrosshair(class AUTHUD* TargetHUD, const struct FWeaponCustomizationInfo& CustomizationsToApply, class AUTWeapon* Weapon);
};


// Class UnrealTournament.UTWeapon
// 0x0690 (0x0C00 - 0x0570)
class AUTWeapon : public AUTInventory
{
public:
	class UClass*                                      AttachmentType;                                           // 0x0570(0x0008) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	int                                                Ammo;                                                     // 0x0578(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      FireEventIndex;                                           // 0x057C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x057D(0x0003) MISSED OFFSET
	int                                                MaxAmmo;                                                  // 0x0580(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0584(0x0004) MISSED OFFSET
	TArray<int>                                        AmmoCost;                                                 // 0x0588(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               bCanRegenerateAmmo;                                       // 0x0598(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0599(0x0007) MISSED OFFSET
	TArray<class UClass*>                              ProjClass;                                                // 0x05A0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FInstantHitDamageInfo>               InstantHitInfo;                                           // 0x05B0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<class UUTWeaponStateFiring*>                FiringState;                                              // 0x05C0(0x0010) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, NoClear)
	bool                                               bAffectedByStoppingPower;                                 // 0x05D0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bCheckHeadSphere;                                         // 0x05D1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bCheckMovingHeadSphere;                                   // 0x05D2(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIgnoreShockballs;                                        // 0x05D3(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bTeammatesBlockHitscan;                                   // 0x05D4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x05D5(0x0003) MISSED OFFSET
	float                                              FriendlyMomentumScaling;                                  // 0x05D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x05DC(0x0004) MISSED OFFSET
	struct FName                                       HandsAttachSocket;                                        // 0x05E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<float>                                      FireInterval;                                             // 0x05E8(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<float>                                      Spread;                                                   // 0x05F8(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	float                                              VerticalSpreadScaling;                                    // 0x0608(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxVerticalSpread;                                        // 0x060C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<class USoundBase*>                          FPFireSound;                                              // 0x0610(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<class USoundBase*>                          FireSound;                                                // 0x0620(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<class USoundBase*>                          ReloadSound;                                              // 0x0630(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<class USoundBase*>                          FireLoopingSound;                                         // 0x0640(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	class USoundBase*                                  LowAmmoSound;                                             // 0x0650(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LowAmmoSoundDelay;                                        // 0x0658(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                LowAmmoThreshold;                                         // 0x065C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x8];                                       // 0x0660(0x0008) MISSED OFFSET
	TArray<class UAnimMontage*>                        FireAnimation;                                            // 0x0668(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<class UAnimMontage*>                        FireAnimationHands;                                       // 0x0678(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<class UParticleSystemComponent*>            MuzzleFlash;                                              // 0x0688(0x0010) (Edit, ExportObject, ZeroConstructor)
	TArray<struct FTransform>                          MuzzleFlashDefaultTransforms;                             // 0x0698(0x0010) (ZeroConstructor, Transient)
	TArray<struct FName>                               MuzzleFlashSocketNames;                                   // 0x06A8(0x0010) (ZeroConstructor, Transient)
	TArray<class UParticleSystem*>                     FireEffect;                                               // 0x06B8(0x0010) (Edit, ZeroConstructor)
	float                                              MaxTracerDist;                                            // 0x06C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                FireEffectInterval;                                       // 0x06CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                FireEffectCount;                                          // 0x06D0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x06D4(0x0004) MISSED OFFSET
	TArray<class UClass*>                              ImpactEffect;                                             // 0x06D8(0x0010) (Edit, ZeroConstructor)
	float                                              ImpactEffectSkipDistance;                                 // 0x06E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxImpactEffectSkipTime;                                  // 0x06EC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     LastImpactEffectLocation;                                 // 0x06F0(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LastImpactEffectTime;                                     // 0x06FC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<class UMaterialInterface*>                  SavedMeshMaterials;                                       // 0x0700(0x0010) (BlueprintVisible, ZeroConstructor)
	bool                                               bMustBeHolstered;                                         // 0x0710(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bCanThrowWeapon;                                          // 0x0711(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bRootWhileFiring;                                         // 0x0712(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bHideInMenus;                                             // 0x0713(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bHideInCrosshairMenu;                                     // 0x0714(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData07[0x3];                                       // 0x0715(0x0003) MISSED OFFSET
	struct FText                                       HighlightText;                                            // 0x0718(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FVector                                     FOVOffset;                                                // 0x0730(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData08[0x4];                                       // 0x073C(0x0004) MISSED OFFSET
	TArray<class UMaterialInstanceDynamic*>            MeshMIDs;                                                 // 0x0740(0x0010) (ZeroConstructor)
	float                                              WeaponRenderScale;                                        // 0x0750(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData09[0x4];                                       // 0x0754(0x0004) MISSED OFFSET
	class UUTWeaponSkin*                               WeaponSkin;                                               // 0x0758(0x0008) (ZeroConstructor, IsPlainOldData)
	class USkeletalMeshComponent*                      Mesh;                                                     // 0x0760(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	bool                                               bFPFireFromCenter;                                        // 0x0768(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bFPIgnoreInstantHitFireOffset;                            // 0x0769(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0x2];                                       // 0x076A(0x0002) MISSED OFFSET
	struct FVector                                     FireOffset;                                               // 0x076C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bNetDelayedShot;                                          // 0x0778(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bMeleeWeapon;                                             // 0x0779(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bPrioritizeAccuracy;                                      // 0x077A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bRecommendSplashDamage;                                   // 0x077B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bRecommendSuppressiveFire;                                // 0x077C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bSniping;                                                 // 0x077D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData11[0x2];                                       // 0x077E(0x0002) MISSED OFFSET
	struct FDelayedProjectileInfo                      DelayedProjectile;                                        // 0x0780(0x0020)
	struct FDelayedHitScanInfo                         DelayedHitScan;                                           // 0x07A0(0x0028)
	unsigned char                                      UnknownData12[0x10];                                      // 0x07C8(0x0010) MISSED OFFSET
	float                                              BringUpTime;                                              // 0x07D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PutDownTime;                                              // 0x07DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RefirePutDownTimePercent;                                 // 0x07E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              EarliestFireTime;                                         // 0x07E4(0x0004) (ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                BringUpAnim;                                              // 0x07E8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                BringUpAnimHands;                                         // 0x07F0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                PutDownAnim;                                              // 0x07F8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                PutDownAnimHands;                                         // 0x0800(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  BringUpSound;                                             // 0x0808(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  LowerSound;                                               // 0x0810(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                Group;                                                    // 0x0818(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Config, IsPlainOldData)
	int                                                DefaultGroup;                                             // 0x081C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                GroupSlot;                                                // 0x0820(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              AutoSwitchPriority;                                       // 0x0824(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Config, IsPlainOldData)
	bool                                               bWeaponStay;                                              // 0x0828(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData13[0x3];                                       // 0x0829(0x0003) MISSED OFFSET
	struct FVector                                     FirstPMeshOffset;                                         // 0x082C(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     LowMeshOffset;                                            // 0x0838(0x000C) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     VeryLowMeshOffset;                                        // 0x0844(0x000C) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    FirstPMeshRotation;                                       // 0x0850(0x000C) (ZeroConstructor, IsPlainOldData)
	float                                              WeaponBobScaling;                                         // 0x085C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FiringViewKickback;                                       // 0x0860(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FiringViewKickbackY;                                      // 0x0864(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   HUDViewKickback;                                          // 0x0868(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bAttachingToOwner;                                        // 0x0870(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData14[0x7];                                       // 0x0871(0x0007) MISSED OFFSET
	TArray<struct FPendingFireEvent>                   ResendFireEvents;                                         // 0x0878(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData15[0x8];                                       // 0x0888(0x0008) MISSED OFFSET
	float                                              FireZOffset;                                              // 0x0890(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              FireZOffsetTime;                                          // 0x0894(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LastContinuedFiring;                                      // 0x0898(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ESoundAmplificationType>               FireSoundAmp;                                             // 0x089C(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData16[0x3];                                       // 0x089D(0x0003) MISSED OFFSET
	class AUTPlayerState*                              TargetPlayerState;                                        // 0x08A0(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData17[0x8];                                       // 0x08A8(0x0008) MISSED OFFSET
	class AUTCharacter*                                TargetedCharacter;                                        // 0x08B0(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<struct FParticleSysParam>                   OverlayEffectParams;                                      // 0x08B8(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	class UParticleSystem*                             UDamageOverrideEffect1P;                                  // 0x08C8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             UDamageOverrideEffect3P;                                  // 0x08D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    LastRotation;                                             // 0x08D8(0x000C) (ZeroConstructor, IsPlainOldData)
	float                                              OldRotDiff[0x2];                                          // 0x08E4(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              OldLeadMag[0x2];                                          // 0x08EC(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              OldMaxDiff[0x2];                                          // 0x08F4(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              AnimLagMultiplier;                                        // 0x08FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AnimLagSpeedReturn;                                       // 0x0900(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RotChgSpeed;                                              // 0x0904(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ReturnChgSpeed;                                           // 0x0908(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxYawLag;                                                // 0x090C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxPitchLag;                                              // 0x0910(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bProceduralLagRotation;                                   // 0x0914(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData18[0x3];                                       // 0x0915(0x0003) MISSED OFFSET
	float                                              BaseAISelectRating;                                       // 0x0918(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bSecondaryIdle;                                           // 0x091C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bWallRunFire;                                             // 0x091D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIdleOffset;                                              // 0x091E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIdleEmpty;                                               // 0x091F(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIdleAlt;                                                 // 0x0920(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData19[0x7];                                       // 0x0921(0x0007) MISSED OFFSET
	class UAnimSequence*                               Idle;                                                     // 0x0928(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               Idle_Pose;                                                // 0x0930(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               IdleOffset_Pose;                                          // 0x0938(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               IdleEmpty_Pose;                                           // 0x0940(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               idleAlt_offset_pose;                                      // 0x0948(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               Idle_Pose_Zero;                                           // 0x0950(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               secondary_idle;                                           // 0x0958(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               secondary_idle_into;                                      // 0x0960(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               Secondary_Idle_Out;                                       // 0x0968(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               Secondary_Idle_Pose;                                      // 0x0970(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               secondary_idleOffset_pose;                                // 0x0978(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               secondary_idleAlt_offset_pose;                            // 0x0980(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               runForward;                                               // 0x0988(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               runForward_L;                                             // 0x0990(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               runForward_R;                                             // 0x0998(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               Jump;                                                     // 0x09A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               fall;                                                     // 0x09A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               fall_long;                                                // 0x09B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               Land;                                                     // 0x09B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               Land_Soft;                                                // 0x09C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               Land_Medium;                                              // 0x09C8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               Land_Heavy;                                               // 0x09D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               Slide;                                                    // 0x09D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               dodgeForward;                                             // 0x09E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               dodgeBack;                                                // 0x09E8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               dodgeLeft;                                                // 0x09F0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               dodgeRight;                                               // 0x09F8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               dodgeForward_right;                                       // 0x0A00(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               dodgeForward_left;                                        // 0x0A08(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               WallRun_L_Into;                                           // 0x0A10(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               WallRun_L;                                                // 0x0A18(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               WallRun_L_Out;                                            // 0x0A20(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               WallRun_R_Into;                                           // 0x0A28(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               WallRun_R;                                                // 0x0A30(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               WallRun_R_Out;                                            // 0x0A38(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               WallRun_L_Dodge;                                          // 0x0A40(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               WallRun_R_Dodge;                                          // 0x0A48(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAimOffsetBlendSpace*                        lagAO;                                                    // 0x0A50(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UBlendSpace*                                 leanBS;                                                   // 0x0A58(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               inspect;                                                  // 0x0A60(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               accent_A;                                                 // 0x0A68(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               accent_B;                                                 // 0x0A70(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               fidget_A;                                                 // 0x0A78(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               fidget_B;                                                 // 0x0A80(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               fidget_C;                                                 // 0x0A88(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UUTWeaponState*                              CurrentState;                                             // 0x0A90(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      CurrentFireMode;                                          // 0x0A98(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData20[0x7];                                       // 0x0A99(0x0007) MISSED OFFSET
	class UUTWeaponState*                              ActiveState;                                              // 0x0AA0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUTWeaponStateEquipping*                     EquippingState;                                           // 0x0AA8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUTWeaponState*                              UnequippingStateDefault;                                  // 0x0AB0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUTWeaponState*                              UnequippingState;                                         // 0x0AB8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUTWeaponState*                              InactiveState;                                            // 0x0AC0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USkeletalMeshComponent*                      OverlayMesh;                                              // 0x0AC8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USkeletalMeshComponent*                      CustomDepthMesh;                                          // 0x0AD0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData21[0x4];                                       // 0x0AD8(0x0004) MISSED OFFSET
	struct FTextureUVs                                 WeaponBarSelectedUVs;                                     // 0x0ADC(0x0010) (Edit, BlueprintVisible)
	struct FTextureUVs                                 WeaponBarInactiveUVs;                                     // 0x0AEC(0x0010) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData22[0x4];                                       // 0x0AFC(0x0004) MISSED OFFSET
	struct FName                                       KillStatsName;                                            // 0x0B00(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       AltKillStatsName;                                         // 0x0B08(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       DeathStatsName;                                           // 0x0B10(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       AltDeathStatsName;                                        // 0x0B18(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       HitsStatsName;                                            // 0x0B20(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       ShotsStatsName;                                           // 0x0B28(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ZoomCount;                                                // 0x0B30(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EZoomState>                            ZoomState;                                                // 0x0B31(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CurrentZoomMode;                                          // 0x0B32(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData23[0x5];                                       // 0x0B33(0x0005) MISSED OFFSET
	TArray<struct FZoomInfo>                           ZoomModes;                                                // 0x0B38(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	float                                              ZoomTime;                                                 // 0x0B48(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              WeightSpeedPctModifier;                                   // 0x0B4C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                AmmoWarningAmount;                                        // 0x0B50(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                AmmoDangerAmount;                                         // 0x0B54(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       WeaponCustomizationTag;                                   // 0x0B58(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       WeaponSkinCustomizationTag;                               // 0x0B60(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UUTCrosshair*                                ActiveCrosshair;                                          // 0x0B68(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FWeaponCustomizationInfo                    ActiveCrosshairCustomizationInfo;                         // 0x0B70(0x0038) (BlueprintVisible, BlueprintReadOnly)
	bool                                               bTrackHitScanReplication;                                 // 0x0BA8(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData24[0x7];                                       // 0x0BA9(0x0007) MISSED OFFSET
	class AUTCharacter*                                HitScanHitChar;                                           // 0x0BB0(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FVector_NetQuantize                         HitScanCharLoc;                                           // 0x0BB8(0x000C)
	struct FVector_NetQuantize                         HitScanStart;                                             // 0x0BC4(0x000C)
	struct FVector_NetQuantize                         HitScanEnd;                                               // 0x0BD0(0x000C)
	float                                              HitScanHeight;                                            // 0x0BDC(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      HitScanIndex;                                             // 0x0BE0(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData25[0x3];                                       // 0x0BE1(0x0003) MISSED OFFSET
	float                                              HitScanTime;                                              // 0x0BE4(0x0004) (ZeroConstructor, IsPlainOldData)
	class AUTCharacter*                                ReceivedHitScanHitChar;                                   // 0x0BE8(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      ReceivedHitScanIndex;                                     // 0x0BF0(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData26[0xF];                                       // 0x0BF1(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTWeapon");
		return ptr;
	}


	void UpdateTiming();
	void UpdateCrosshairTarget(class AUTPlayerState* NewCrosshairTarget, class UUTHUDWidget* WeaponHudWidget, float RenderDelta);
	void TestWeaponScale(float X, float Y, float Z);
	void TestWeaponRot(float Pitch, float Yaw, float Roll);
	void TestWeaponLoc(float X, float Y, float Z);
	float SuggestDefenseStyle();
	float SuggestAttackStyle();
	void StopFiringEffects();
	void StopFire(unsigned char FireModeNum);
	void StartFire(unsigned char FireModeNum);
	bool ShouldPlay1PVisuals();
	bool ShouldDrawFFIndicator(class APlayerController* Viewer, class AUTPlayerState** HitPlayerState);
	bool ShouldAIDelayFiring();
	void SetZoomState(TEnumAsByte<EZoomState> NewZoomState);
	void SetZoomMode(unsigned char NewZoomMode);
	void SetupSpecialMaterials();
	void ServerUpdateFiringStates(unsigned char FireSettings);
	void ServerStopFireRecent(unsigned char FireModeNum, unsigned char InFireEventIndex);
	void ServerStopFire(unsigned char FireModeNum, unsigned char InFireEventIndex);
	void ServerStartFireOffset(unsigned char FireModeNum, unsigned char InFireEventIndex, unsigned char ZOffset, bool bClientFired);
	void ServerStartFire(unsigned char FireModeNum, unsigned char InFireEventIndex, bool bClientFired);
	void ServerSetZoomState(unsigned char NewZoomState);
	void ServerSetZoomMode(unsigned char NewZoomMode);
	void ServerHitScanHit(class AUTCharacter* HitScanChar, unsigned char HitScanEventIndex);
	void ResendServerStartFireOffset(unsigned char FireModeNum, unsigned char InFireEventIndex, unsigned char ZOffset, bool bClientFired);
	void ResendServerStartFire(unsigned char FireModeNum, unsigned char InFireEventIndex, bool bClientFired);
	void PlayWeaponAnim(class UAnimMontage* WeaponAnim, class UAnimMontage* HandsAnim, float RateOverride);
	void PlayImpactEffects(const struct FVector& TargetLoc, unsigned char FireMode, const struct FVector& SpawnLocation, const struct FRotator& SpawnRotation);
	void PlayFiringEffects();
	void OnZoomedOut();
	void OnZoomedIn();
	void OnStoppedFiring();
	void OnStartedFiring();
	void OnRep_ZoomState();
	void OnRep_ZoomCount();
	void OnRep_AttachmentType();
	void OnRep_Ammo();
	void OnMultiPress(unsigned char OtherFireMode);
	void OnHitScanDamage(const struct FHitResult& Hit, const struct FVector& FireDir);
	void OnContinuedFiring();
	void OnBringUp();
	void NotifyTeamChanged();
	void NotifyKillWhileHolding(class UClass* DmgType);
	bool NeedsAmmoDisplay();
	void ModifyFireEffect(class UParticleSystemComponent* Effect);
	void K2_FireInstantHit(bool bDealDamage, struct FHitResult* OutHit);
	bool IsUnEquipping();
	bool IsPreparingAttack();
	bool IsFiring();
	bool HasAnyAmmo();
	bool HasAmmo(unsigned char FireModeNum);
	void GuessPlayerTarget(const struct FVector& StartFireLoc, const struct FVector& FireDir);
	void GotoFireMode(unsigned char NewFireMode);
	class UMaterialInstanceDynamic* GetZoomMaterial(unsigned char FireModeNum);
	EWeaponHand GetWeaponHand();
	float GetRefireTime(unsigned char FireModeNum);
	float GetPutDownTime();
	void GetImpactSpawnPosition(const struct FVector& TargetLoc, struct FVector* SpawnLocation, struct FRotator* SpawnRotation);
	struct FHitResult STATIC_GetImpactEffectHit(class APawn* Shooter, const struct FVector& StartLoc, const struct FVector& TargetLoc);
	class UAnimMontage* GetFiringAnim(unsigned char FireMode, bool bOnHands);
	struct FVector GetFireStartLoc(unsigned char FireMode);
	float GetDamageRadius(unsigned char TestMode);
	float GetCrosshairScale(class AUTHUD* HUD);
	struct FLinearColor GetCrosshairColor(class UUTHUDWidget* WeaponHudWidget);
	float GetBringUpTime();
	struct FRotator GetBaseFireRotation();
	float GetAISelectRating();
	struct FRotator GetAdjustedAim(const struct FVector& StartFireLoc);
	TArray<class UMeshComponent*> Get1PMeshes();
	void FiringInfoUpdated(unsigned char InFireMode, unsigned char FlashCount, const struct FVector& InFlashLocation);
	void FiringExtraUpdated(unsigned char NewFlashExtra, unsigned char InFireMode);
	void FiringEffectsUpdated(unsigned char InFireMode, const struct FVector& InFlashLocation);
	bool FireShotOverride();
	void FireShot();
	class AUTProjectile* FireProjectile();
	void FireCone();
	bool eventPreventPutDown();
	void DrawWeaponCrosshair(class UUTHUDWidget* WeaponHudWidget, float RenderDelta);
	void DetachFromOwner();
	void DetachFromHolster();
	void ConsumeAmmo(unsigned char FireModeNum);
	void ClientMissedHitScan(const struct FVector_NetQuantize& MissedHitScanStart, const struct FVector_NetQuantize& MissedHitScanEnd, const struct FVector_NetQuantize& MissedHitScanLoc, float MissedHitScanTime, unsigned char MissedHitScanIndex);
	bool CanSwitchTo();
	bool CancelImpactEffect(const struct FHitResult& ImpactHit);
	bool CanAttack(class AActor* Target, const struct FVector& TargetLoc, bool bDirectOnly, bool bPreferCurrentMode, unsigned char* BestFireMode, struct FVector* OptimalTargetLoc);
	void AttachToOwner();
	void AttachToHolster();
	void AddAmmo(int Amount);
};


// Class UnrealTournament.UTPickupWeapon
// 0x0030 (0x0600 - 0x05D0)
class AUTPickupWeapon : public AUTPickupInventory
{
public:
	class UMeshComponent*                              GhostDepthMesh;                                           // 0x05D0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, IsPlainOldData)
	class UClass*                                      WeaponType;                                               // 0x05D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FWeaponPickupCustomer>               Customers;                                                // 0x05E0(0x0010) (BlueprintVisible, ZeroConstructor)
	float                                              NextPickupTime;                                           // 0x05F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x05F4(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTPickupWeapon");
		return ptr;
	}

};


// Class UnrealTournament.UTLineUpZoneVisualizationCharacter
// 0x0030 (0x07D0 - 0x07A0)
class AUTLineUpZoneVisualizationCharacter : public ACharacter
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x07A0(0x0008) MISSED OFFSET
	int                                                TeamNum;                                                  // 0x07A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x07AC(0x0004) MISSED OFFSET
	class UMaterialInstanceDynamic*                    DynMaterial;                                              // 0x07B0(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                TransformOwnerIndex;                                      // 0x07B8(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x07BC(0x0004) MISSED OFFSET
	class UMaterialInterface*                          Material;                                                 // 0x07C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x07C8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTLineUpZoneVisualizationCharacter");
		return ptr;
	}


	void OnChangeTeamNum();
	unsigned char GetTeamNum();
};


// Class UnrealTournament.UTLineUpZone
// 0x0228 (0x05B0 - 0x0388)
class AUTLineUpZone : public AActor
{
public:
	ELineUpTypes                                       ZoneType;                                                 // 0x0388(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bSnapToFloor;                                             // 0x0389(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x038A(0x0002) MISSED OFFSET
	float                                              SnapFloorOffset;                                          // 0x038C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bIsTeamSpawnList;                                         // 0x0390(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bUseCustomSpawnList;                                      // 0x0391(0x0001) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	bool                                               bUseCustomCameraTransform;                                // 0x0392(0x0001) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	unsigned char                                      UnknownData01[0x5];                                       // 0x0393(0x0005) MISSED OFFSET
	class UCameraComponent*                            Camera;                                                   // 0x0398(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UCameraAnim*                                 CameraAnimation;                                          // 0x03A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class AUTGameObjective*                            GameObjectiveReference;                                   // 0x03A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  CameraLocation;                                           // 0x03B0(0x0030) (Edit, DisableEditOnTemplate, IsPlainOldData)
	TArray<struct FLineUpSpawn>                        SpawnLocations;                                           // 0x03E0(0x0010) (Edit, ZeroConstructor, DisableEditOnTemplate)
	TArray<struct FLineUpSpawn>                        TeamIntroSpawnLocations;                                  // 0x03F0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FLineUpSpawn>                        TeamIntermissionSpawnLocations;                           // 0x0400(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FLineUpSpawn>                        TeamPostMatchSpawnLocations;                              // 0x0410(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FLineUpSpawn>                        SoloIntroSpawnLocations;                                  // 0x0420(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FLineUpSpawn>                        SoloIntermissionSpawnLocations;                           // 0x0430(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FLineUpSpawn>                        SoloPostMatchSpawnLocations;                              // 0x0440(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FTransform                                  SoloIntroCameraLocation;                                  // 0x0450(0x0030) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FTransform                                  SoloIntermissionCameraLocation;                           // 0x0480(0x0030) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FTransform                                  SoloPostMatchCameraLocation;                              // 0x04B0(0x0030) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FTransform                                  TeamIntroCameraLocation;                                  // 0x04E0(0x0030) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FTransform                                  TeamIntermissionCameraLocation;                           // 0x0510(0x0030) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FTransform                                  TeamPostMatchCameraLocation;                              // 0x0540(0x0030) (Edit, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      EditorVisualizationCharacter;                             // 0x0570(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<class UClass*>                              DefaultIntros;                                            // 0x0578(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	float                                              MinIntroSpawnTime;                                        // 0x0588(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxIntroSpawnTime;                                        // 0x058C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TimeToReadyWeaponStance;                                  // 0x0590(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0594(0x0004) MISSED OFFSET
	class USceneComponent*                             SceneRoot;                                                // 0x0598(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	TArray<class UMeshComponent*>                      RenderedPlayerStates;                                     // 0x05A0(0x0010) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTLineUpZone");
		return ptr;
	}


	void UpdateSpawnLocationsWithVisualizationMove();
	void UpdateMeshVisualizations();
	void SnapToFloor();
	void OnTransitionToWeaponReadyAnims();
	void OnPlayWeaponReadyAnimOnCharacter(class AUTCharacter* UTChar);
	void OnPlayIntroAnimationOnCharacter(class AUTCharacter* UTChar);
	void OnLineUpStart(ELineUpTypes Type);
	void OnLineUpEnd(ELineUpTypes Type);
	void InitializeMeshVisualizations();
	void DeleteAllMeshVisualizations();
};


// Class UnrealTournament.UTMenuGameMode
// 0x0030 (0x05E0 - 0x05B0)
class AUTMenuGameMode : public AUTBaseGameMode
{
public:
	struct FString                                     MenuMusicAssetName;                                       // 0x05B0(0x0010) (ZeroConstructor, Config)
	class USoundBase*                                  MenuMusic;                                                // 0x05C0(0x0008) (ZeroConstructor, IsPlainOldData)
	class UAudioComponent*                             MenuMusicAC;                                              // 0x05C8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TArray<class USoundBase*>                          DefaultMusics;                                            // 0x05D0(0x0010) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTMenuGameMode");
		return ptr;
	}

};


// Class UnrealTournament.UTDemoRecSpectator
// 0x0030 (0x0C90 - 0x0C60)
class AUTDemoRecSpectator : public AUTPlayerController
{
public:
	class APlayerState*                                QueuedPlayerStateToView;                                  // 0x0C60(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              LastKillcamSeekTime;                                      // 0x0C68(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x24];                                      // 0x0C6C(0x0024) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTDemoRecSpectator");
		return ptr;
	}


	void ToggleReplayWindow();
	void MulticastReceiveLocalizedMessage(class UClass* Message, int Switch, class APlayerState* RelatedPlayerState_2, class APlayerState* RelatedPlayerState_3, class UObject* OptionalObject);
	void DumpSpecInfo();
	void DemoNotifyCausedHit(class APawn* InstigatorPawn, class AUTCharacter* HitPawn, unsigned char AppliedDamage, const struct FVector& Momentum, const struct FDamageEvent& DamageEvent, bool bArmorDamage, bool bOverhealth);
};


// Class UnrealTournament.UTFlagRunScoring
// 0x0000 (0x0388 - 0x0388)
class AUTFlagRunScoring : public AUTBaseScoring
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTFlagRunScoring");
		return ptr;
	}

};


// Class UnrealTournament.UTBlurWidget
// 0x0020 (0x0200 - 0x01E0)
class UUTBlurWidget : public UBackgroundBlurWidget
{
public:
	struct FLinearColor                                ColorAndOpacity;                                          // 0x01E0(0x0010) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x01F0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTBlurWidget");
		return ptr;
	}


	void SetColorAndOpacity(const struct FLinearColor& InColorAndOpacity);
};


// Class UnrealTournament.UTPathTestBot
// 0x0020 (0x0870 - 0x0850)
class AUTPathTestBot : public AUTBot
{
public:
	TArray<struct FPathTestEntry>                      TestList;                                                 // 0x0850(0x0010) (ZeroConstructor)
	int                                                CurrentTestIndex;                                         // 0x0860(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0864(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTPathTestBot");
		return ptr;
	}

};


// Class UnrealTournament.UTBotCharacter
// 0x00F0 (0x0118 - 0x0028)
class UUTBotCharacter : public UDataAsset
{
public:
	bool                                               bRequiresItem;                                            // 0x0028(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bProtoBot;                                                // 0x0029(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002A(0x0002) MISSED OFFSET
	float                                              SkillAdjust;                                              // 0x002C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinimumSkill;                                             // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	struct FBotPersonality                             Personality;                                              // 0x0038(0x0028) (Edit)
	struct FStringClassReference                       Character;                                                // 0x0060(0x0010) (Edit, ZeroConstructor)
	struct FStringClassReference                       HatType;                                                  // 0x0070(0x0010) (Edit, ZeroConstructor)
	int                                                HatVariantId;                                             // 0x0080(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0084(0x0004) MISSED OFFSET
	struct FStringClassReference                       EyewearType;                                              // 0x0088(0x0010) (Edit, ZeroConstructor)
	int                                                EyewearVariantId;                                         // 0x0098(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x009C(0x0004) MISSED OFFSET
	struct FStringClassReference                       CharacterVoice;                                           // 0x00A0(0x0010) (Edit, ZeroConstructor)
	int                                                MaxMultiJumpCount;                                        // 0x00B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MultiJumpImpulse;                                         // 0x00B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxRunSpeed;                                              // 0x00B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AirControl;                                               // 0x00BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              JumpImpulse;                                              // 0x00C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxWallRunFallZ;                                          // 0x00C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              WallRunGravityScaling;                                    // 0x00C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bCanDodge;                                                // 0x00CC(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x00CD(0x0003) MISSED OFFSET
	float                                              DodgeResetInterval;                                       // 0x00D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DodgeImpulseHorizontal;                                   // 0x00D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DodgeImpulseVertical;                                     // 0x00D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxAdditiveDodgeJumpSpeed;                                // 0x00DC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DodgeMaxHorizontalVelocity;                               // 0x00E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              WallDodgeImpulseHorizontal;                               // 0x00E4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              WallDodgeImpulseVertical;                                 // 0x00E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              WallDodgeSecondImpulseVertical;                           // 0x00EC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UClass*>                              CardInventory;                                            // 0x00F0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                ExtraArmor;                                               // 0x0100(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FloorSlideEndingSpeedFactor;                              // 0x0104(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FloorSlideAcceleration;                                   // 0x0108(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxFloorSlideSpeed;                                       // 0x010C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxInitialFloorSlideSpeed;                                // 0x0110(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FloorSlideDuration;                                       // 0x0114(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTBotCharacter");
		return ptr;
	}

};


// Class UnrealTournament.UTUserWidgetBase
// 0x0070 (0x02A0 - 0x0230)
class UUTUserWidgetBase : public UUserWidget
{
public:
	bool                                               bConsumePointerInput;                                     // 0x0230(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableUTTooltip;                                         // 0x0231(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0232(0x0006) MISSED OFFSET
	struct FText                                       UTTooltipTitleText;                                       // 0x0238(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	TEnumAsByte<EMenuPlacement>                        TooltipAnchorPlacement;                                   // 0x0250(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0251(0x0007) MISSED OFFSET
	struct FName                                       WidgetId;                                                 // 0x0258(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EMenuPlacement>                        AttachedMessagePlacement;                                 // 0x0260(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0261(0x0007) MISSED OFFSET
	struct FText                                       UTTooltipText;                                            // 0x0268(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	class UWidget*                                     CustomTooltipWidget;                                      // 0x0280(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bAutoOpenTooltip;                                         // 0x0288(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0xF];                                       // 0x0289(0x000F) MISSED OFFSET
	class UUTBasicTooltipWidget*                       BasicTooltipWidget;                                       // 0x0298(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTUserWidgetBase");
		return ptr;
	}


	void SetUTTooltip(class UWidget* InTooltipWidget);
	void SetBasicTooltipTitle(const struct FText& NewTooltipTitle);
	void SetBasicTooltipText(const struct FText& NewTooltipText);
	void SetBasicTooltipInfo(const struct FText& NewTooltipTitle, const struct FText& NewTooltipText);
	struct FText GetBasicTooltipText();
	class UWidget* DynamicGetTooltipContent();
};


// Class UnrealTournament.UTInputHandlerWidget
// 0x0000 (0x0028 - 0x0028)
class UUTInputHandlerWidget : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTInputHandlerWidget");
		return ptr;
	}


	void HandleRequestedInput(const struct FKey& Key, TEnumAsByte<EInputEvent> EventType);
};


// Class UnrealTournament.UTButtonStyle
// 0x0C78 (0x0CA0 - 0x0028)
class UUTButtonStyle : public UObject
{
public:
	struct FSlateBrush                                 NormalBase[0x3];                                          // 0x0028(0x0090) (Edit, DisableEditOnInstance)
	struct FSlateBrush                                 NormalHovered[0x3];                                       // 0x01D8(0x0090) (Edit, DisableEditOnInstance)
	struct FSlateBrush                                 NormalPressed[0x3];                                       // 0x0388(0x0090) (Edit, DisableEditOnInstance)
	struct FSlateBrush                                 SelectedBase[0x3];                                        // 0x0538(0x0090) (Edit, DisableEditOnInstance)
	struct FSlateBrush                                 SelectedHovered[0x3];                                     // 0x06E8(0x0090) (Edit, DisableEditOnInstance)
	struct FSlateBrush                                 SelectedPressed[0x3];                                     // 0x0898(0x0090) (Edit, DisableEditOnInstance)
	struct FSlateBrush                                 Disabled[0x3];                                            // 0x0A48(0x0090) (Edit, DisableEditOnInstance)
	struct FMargin                                     ButtonPadding[0x3];                                       // 0x0BF8(0x0010) (Edit, DisableEditOnInstance)
	struct FMargin                                     CustomPadding[0x3];                                       // 0x0C28(0x0010) (Edit, DisableEditOnInstance)
	class UClass*                                      NormalTextStyle;                                          // 0x0C58(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      SelectedTextStyle;                                        // 0x0C60(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      DisabledTextStyle;                                        // 0x0C68(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FSlateSound                                 PressedSlateSound;                                        // 0x0C70(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FSlateSound                                 HoveredSlateSound;                                        // 0x0C88(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTButtonStyle");
		return ptr;
	}


	class UUTTextStyle* GetSelectedTextStyle();
	void GetSelectedPressedBrush(TEnumAsByte<EUTWidgetStyleSize> Size, struct FSlateBrush* Brush);
	void GetSelectedHoveredBrush(TEnumAsByte<EUTWidgetStyleSize> Size, struct FSlateBrush* Brush);
	void GetSelectedBaseBrush(TEnumAsByte<EUTWidgetStyleSize> Size, struct FSlateBrush* Brush);
	class UUTTextStyle* GetNormalTextStyle();
	void GetNormalPressedBrush(TEnumAsByte<EUTWidgetStyleSize> Size, struct FSlateBrush* Brush);
	void GetNormalHoveredBrush(TEnumAsByte<EUTWidgetStyleSize> Size, struct FSlateBrush* Brush);
	void GetNormalBaseBrush(TEnumAsByte<EUTWidgetStyleSize> Size, struct FSlateBrush* Brush);
	class UUTTextStyle* GetDisabledTextStyle();
	void GetDisabledBrush(TEnumAsByte<EUTWidgetStyleSize> Size, struct FSlateBrush* Brush);
	void GetCustomPadding(TEnumAsByte<EUTWidgetStyleSize> Size, struct FMargin* OutCustomPadding);
	void GetButtonPadding(TEnumAsByte<EUTWidgetStyleSize> Size, struct FMargin* OutButtonPadding);
};


// Class UnrealTournament.UTButtonInternal
// 0x0030 (0x0498 - 0x0468)
class UUTButtonInternal : public UButton
{
public:
	int                                                MinWidth;                                                 // 0x0468(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                MinHeight;                                                // 0x046C(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bInteractionEnabled;                                      // 0x0470(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x27];                                      // 0x0471(0x0027) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTButtonInternal");
		return ptr;
	}

};


// Class UnrealTournament.UTBaseButton
// 0x0810 (0x0AB0 - 0x02A0)
class UUTBaseButton : public UUTUserWidgetBase
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x02A0(0x0008) MISSED OFFSET
	int                                                MinWidth;                                                 // 0x02A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MinHeight;                                                // 0x02AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      Style;                                                    // 0x02B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EUTWidgetStyleSize>                    StyleSize;                                                // 0x02B8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bApplyAlphaOnDisable;                                     // 0x02B9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x02BA(0x0006) MISSED OFFSET
	struct FSlateSound                                 PressedSlateSoundOverride;                                // 0x02C0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FSlateSound                                 HoveredSlateSoundOverride;                                // 0x02D8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	bool                                               bSelectable;                                              // 0x02F0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bToggleable;                                              // 0x02F1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EButtonClickMethod>                    ClickMethod;                                              // 0x02F2(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x5];                                       // 0x02F3(0x0005) MISSED OFFSET
	struct FKey                                        BoundKey;                                                 // 0x02F8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	bool                                               bListenForInput;                                          // 0x0310(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0311(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnButtonSelectedChanged;                                  // 0x0318(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnButtonClicked;                                          // 0x0328(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnButtonHovered;                                          // 0x0338(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnButtonUnhovered;                                        // 0x0348(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData04[0x758];                                     // 0x0358(0x0758) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTBaseButton");
		return ptr;
	}


	void SetStyleSize(TEnumAsByte<EUTWidgetStyleSize> InSize);
	void SetStyle(class UClass* InStyle);
	void SetSelectedInternal(bool bInSelected, bool bAllowSound, bool bBroadcast);
	void SetMinDimensions(int InMinWidth, int InMinHeight);
	void SetIsSelected(bool InSelected, bool bFromClick);
	void SetIsSelectable(bool bInIsSelectable);
	void OnStyleSizeChanged();
	bool IsPressed();
	bool IsInteractionEnabled();
	bool IsHovered();
	void HandleButtonClicked();
	class UUTButtonStyle* GetStyle();
	bool GetSelected();
	class UClass* GetCurrentTextStyleClass();
	class UUTTextStyle* GetCurrentTextStyle();
	void GetCurrentCustomPadding(struct FMargin* OutCustomPadding);
	void GetCurrentButtonPadding(struct FMargin* OutButtonPadding);
	void EnableButton();
	void DisableButtonWithReason(const struct FText& DisabledReason);
	void DisableButton();
	void ClearSelection();
	void BP_OnUnhovered();
	void BP_OnSelected();
	void BP_OnHovered();
	void BP_OnEnabled();
	void BP_OnDisabled();
	void BP_OnDeselected();
	void BP_OnClicked();
};


// Class UnrealTournament.UTCanvasRenderTarget2D
// 0x0048 (0x0160 - 0x0118)
class UUTCanvasRenderTarget2D : public UCanvasRenderTarget2D
{
public:
	unsigned char                                      UnknownData00[0x48];                                      // 0x0118(0x0048) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTCanvasRenderTarget2D");
		return ptr;
	}


	void UpdateDispatcher(class UCanvas* Canvas, int Width, int Height);
};


// Class UnrealTournament.UTBlitzFlag
// 0x0000 (0x0650 - 0x0650)
class AUTBlitzFlag : public AUTFlag
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTBlitzFlag");
		return ptr;
	}

};


// Class UnrealTournament.UTChallengeManager
// 0x0190 (0x01B8 - 0x0028)
class UUTChallengeManager : public UObject
{
public:
	struct FTeamRoster                                 PlayerTeamRoster;                                         // 0x0028(0x0028)
	TMap<struct FName, struct FTeamRoster>             EnemyTeamRosters;                                         // 0x0050(0x0050) (ZeroConstructor)
	TMap<struct FName, struct FUTChallengeInfo>        Challenges;                                               // 0x00A0(0x0050) (ZeroConstructor)
	float                                              XPBonus;                                                  // 0x00F0(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00F4(0x0004) MISSED OFFSET
	TArray<struct FName>                               RewardTags;                                               // 0x00F8(0x0010) (ZeroConstructor)
	TMap<struct FName, struct FText>                   RewardCaptions;                                           // 0x0108(0x0050) (ZeroConstructor)
	bool                                               bTestDailyChallenges;                                     // 0x0158(0x0001) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	unsigned char                                      UnknownData01[0x5F];                                      // 0x0159(0x005F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTChallengeManager");
		return ptr;
	}

};


// Class UnrealTournament.UTCheatManager
// 0x0008 (0x0080 - 0x0078)
class UUTCheatManager : public UCheatManager
{
public:
	int                                                AnnCount;                                                 // 0x0078(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              AnnDelay;                                                 // 0x007C(0x0004) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTCheatManager");
		return ptr;
	}


	void WOff(float F);
	void ViewBot();
	void UnlockTutorials();
	void UnlimitedPowerupUses();
	void UnlimitedAmmo();
	void ua();
	void TestPaths(bool bHighJumps, bool bWallDodges, bool bLifts, bool bLiftJumps);
	void TestAMDAllocation();
	void Teleport();
	void Spread(float Scaling);
	void SetHat(const struct FString& Hat);
	void SetEyewear(const struct FString& Eyewear);
	void SetChar(const struct FString& NewChar);
	void ReportWaitTime(const struct FString& RatingType, int Seconds);
	void PlayTaunt(const struct FString& TauntClass);
	void NoOutline();
	void McpRefreshProfile();
	void McpGrantItem(const struct FString& ItemId);
	void McpGetVersion();
	void McpDestroyItem(const struct FString& ItemId);
	void McpCheat();
	void MatchmakeMyParty(int PlaylistId);
	void Loaded();
	void ImpartWeaponSkin(const struct FString& Skin);
	void ImpartHats(const struct FString& Hat);
	void ImpartEyewear(const struct FString& Eyewear);
	void HL();
	void Gibs();
	void EstimateWaitTimes();
	void DebugAchievement(const struct FString& AchievementName);
	void CheatShowRankedReconnectDialog();
	void AnnM(float F);
	void Ann(int Switch);
	void AllAmmo();
};


// Class UnrealTournament.UTComboBoxString
// 0x0068 (0x0DF8 - 0x0D90)
class UUTComboBoxString : public UComboBoxString
{
public:
	struct FSlateFontInfo                              ItemFont;                                                 // 0x0D90(0x0068) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTComboBoxString");
		return ptr;
	}

};


// Class UnrealTournament.UTConsole
// 0x0008 (0x0138 - 0x0130)
class UUTConsole : public UConsole
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0130(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTConsole");
		return ptr;
	}

};


// Class UnrealTournament.UTCustomPhysicsVolume
// 0x0008 (0x03D8 - 0x03D0)
class AUTCustomPhysicsVolume : public APhysicsVolume
{
public:
	float                                              CustomGravityScaling;                                     // 0x03D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x03D4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTCustomPhysicsVolume");
		return ptr;
	}

};


// Class UnrealTournament.UTDmg_SniperHeadshot
// 0x0000 (0x0168 - 0x0168)
class UUTDmg_SniperHeadshot : public UUTDamageType
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTDmg_SniperHeadshot");
		return ptr;
	}

};


// Class UnrealTournament.UTDmgType_AttachParticles
// 0x0020 (0x0188 - 0x0168)
class UUTDmgType_AttachParticles : public UUTDamageType
{
public:
	class UParticleSystem*                             HitEffect;                                                // 0x0168(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              EffectLifeSpan;                                           // 0x0170(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AttachToGibChance;                                        // 0x0174(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                DamageThreshold;                                          // 0x0178(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                HealthThreshold;                                          // 0x017C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bSpawnOnAnyPass;                                          // 0x0180(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0181(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTDmgType_AttachParticles");
		return ptr;
	}

};


// Class UnrealTournament.UTDmgType_BlockedTelefrag
// 0x0000 (0x0168 - 0x0168)
class UUTDmgType_BlockedTelefrag : public UUTDamageType
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTDmgType_BlockedTelefrag");
		return ptr;
	}

};


// Class UnrealTournament.UTDmgType_Crushed
// 0x0000 (0x0168 - 0x0168)
class UUTDmgType_Crushed : public UUTDamageType
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTDmgType_Crushed");
		return ptr;
	}

};


// Class UnrealTournament.UTDmgType_Drown
// 0x0000 (0x0168 - 0x0168)
class UUTDmgType_Drown : public UUTDamageType
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTDmgType_Drown");
		return ptr;
	}

};


// Class UnrealTournament.UTDmgType_FallingCrush
// 0x0000 (0x0168 - 0x0168)
class UUTDmgType_FallingCrush : public UUTDamageType
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTDmgType_FallingCrush");
		return ptr;
	}

};


// Class UnrealTournament.UTDmgType_FeignFail
// 0x0000 (0x0168 - 0x0168)
class UUTDmgType_FeignFail : public UUTDamageType
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTDmgType_FeignFail");
		return ptr;
	}

};


// Class UnrealTournament.UTDmgType_Fell
// 0x0000 (0x0168 - 0x0168)
class UUTDmgType_Fell : public UUTDamageType
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTDmgType_Fell");
		return ptr;
	}

};


// Class UnrealTournament.UTDmgType_KillZ
// 0x0000 (0x0168 - 0x0168)
class UUTDmgType_KillZ : public UUTDamageType
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTDmgType_KillZ");
		return ptr;
	}

};


// Class UnrealTournament.UTDmgType_Suicide
// 0x0000 (0x0168 - 0x0168)
class UUTDmgType_Suicide : public UUTDamageType
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTDmgType_Suicide");
		return ptr;
	}

};


// Class UnrealTournament.UTDmgType_Telefragged
// 0x0000 (0x0168 - 0x0168)
class UUTDmgType_Telefragged : public UUTDamageType
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTDmgType_Telefragged");
		return ptr;
	}

};


// Class UnrealTournament.UTDemoNetDriver
// 0x0000 (0x0980 - 0x0980)
class UUTDemoNetDriver : public UDemoNetDriver
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTDemoNetDriver");
		return ptr;
	}

};


// Class UnrealTournament.UTPickupAmmo
// 0x0010 (0x05A0 - 0x0590)
class AUTPickupAmmo : public AUTPickup
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0590(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTPickupAmmo");
		return ptr;
	}

};


// Class UnrealTournament.UTDroppedAmmoBox
// 0x0058 (0x0428 - 0x03D0)
class AUTDroppedAmmoBox : public AUTDroppedPickup
{
public:
	class UStaticMeshComponent*                        SMComp;                                                   // 0x03D0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class USoundBase*                                  PickupSound;                                              // 0x03D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FStoredAmmo>                         Ammo;                                                     // 0x03E0(0x0010) (BlueprintVisible, ZeroConstructor)
	float                                              GlobalRestorePct;                                         // 0x03F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bDrawBeacon;                                              // 0x03F4(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x03F5(0x0003) MISSED OFFSET
	struct FCanvasIcon                                 BeaconIcon;                                               // 0x03F8(0x0018) (Edit, BlueprintVisible)
	struct FCanvasIcon                                 BeaconArrow;                                              // 0x0410(0x0018) (Edit, BlueprintVisible)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTDroppedAmmoBox");
		return ptr;
	}

};


// Class UnrealTournament.UTDroppedArmor
// 0x0028 (0x03F8 - 0x03D0)
class AUTDroppedArmor : public AUTDroppedPickup
{
public:
	class USoundBase*                                  PickupSound;                                              // 0x03D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<class UStaticMesh*>                         ArmorMeshes;                                              // 0x03D8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	int                                                ArmorAmount;                                              // 0x03E8(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x03EC(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTDroppedArmor");
		return ptr;
	}


	void OnArmorAmountReceived();
};


// Class UnrealTournament.UTDroppedLife
// 0x0050 (0x0420 - 0x03D0)
class AUTDroppedLife : public AUTDroppedPickup
{
public:
	class AUTPlayerState*                              OwnerPlayerState;                                         // 0x03D0(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class AUTPlayerState*                              KillerPlayerState;                                        // 0x03D8(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              Value;                                                    // 0x03E0(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    AutoRotate;                                               // 0x03E4(0x000C) (ZeroConstructor, IsPlainOldData)
	float                                              BounceZ;                                                  // 0x03F0(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x03F4(0x0004) MISSED OFFSET
	class USoundBase*                                  PickupSound;                                              // 0x03F8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<class UMaterialInterface*>                  TeamMaterials;                                            // 0x0400(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class AUTCharacter*>                        TouchingCharacters;                                       // 0x0410(0x0010) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTDroppedLife");
		return ptr;
	}


	void OnReceivedOwnerPlayerState();
	void OnOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void Init(class AUTPlayerState* inOwnerPlayerState, class AUTPlayerState* inKillerPlayerState, float InValue);
};


// Class UnrealTournament.UTDroppedPickupImportant
// 0x0000 (0x03D0 - 0x03D0)
class AUTDroppedPickupImportant : public AUTDroppedPickup
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTDroppedPickupImportant");
		return ptr;
	}

};


// Class UnrealTournament.UTEpicDefaultChallenges
// 0x0010 (0x0038 - 0x0028)
class UUTEpicDefaultChallenges : public UObject
{
public:
	TArray<struct FUTChallengeInfo>                    Challenges;                                               // 0x0028(0x0010) (ZeroConstructor, Config)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTEpicDefaultChallenges");
		return ptr;
	}

};


// Class UnrealTournament.UTEpicDefaultRulesets
// 0x0000 (0x0028 - 0x0028)
class UUTEpicDefaultRulesets : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTEpicDefaultRulesets");
		return ptr;
	}

};


// Class UnrealTournament.UTFlagInfo
// 0x0050 (0x0078 - 0x0028)
class UUTFlagInfo : public UObject
{
public:
	struct FTextureUVs                                 UV;                                                       // 0x0028(0x0010) (Config)
	TArray<TEnumAsByte<EUnrealRoles>>                  EntitledRoles;                                            // 0x0038(0x0010) (ZeroConstructor, Config)
	int                                                Priority;                                                 // 0x0048(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	struct FString                                     FilenameOverride;                                         // 0x0050(0x0010) (ZeroConstructor, Config)
	struct FString                                     TextureName;                                              // 0x0060(0x0010) (ZeroConstructor, Config)
	class UTexture2D*                                  Texture;                                                  // 0x0070(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTFlagInfo");
		return ptr;
	}

};


// Class UnrealTournament.UTFlagReturnTrail
// 0x0008 (0x0390 - 0x0388)
class AUTFlagReturnTrail : public AActor
{
public:
	class AUTCarriedObject*                            Flag;                                                     // 0x0388(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTFlagReturnTrail");
		return ptr;
	}


	void SetTeam(class AUTTeamInfo* Team);
	void SetPoints(TArray<struct FVector> Points);
	void EndTrail();
};


// Class UnrealTournament.UTGameEngine
// 0x02E0 (0x0FB0 - 0x0CD0)
class UUTGameEngine : public UGameEngine
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0CD0(0x0008) MISSED OFFSET
	TArray<class UClass*>                              AlwaysLoadedWeapons;                                      // 0x0CD8(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0CE8(0x0010) MISSED OFFSET
	class UTexture2D*                                  DefaultLevelScreenshot;                                   // 0x0CF8(0x0008) (ZeroConstructor, IsPlainOldData)
	class UClass*                                      TutorialMenuClass;                                        // 0x0D00(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FText                                       ReadEULACaption;                                          // 0x0D08(0x0018)
	struct FText                                       ReadEULAText;                                             // 0x0D20(0x0018)
	bool                                               bFirstRun;                                                // 0x0D38(0x0001) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0D39(0x0003) MISSED OFFSET
	int                                                ParallelRendererProcessorRequirement;                     // 0x0D3C(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              SmoothedDeltaTime;                                        // 0x0D40(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              HitchTimeThreshold;                                       // 0x0D44(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              HitchScaleThreshold;                                      // 0x0D48(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              HitchSmoothingRate;                                       // 0x0D4C(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              NormalSmoothingRate;                                      // 0x0D50(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              MaximumSmoothedTime;                                      // 0x0D54(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bAllowClientNetProfile;                                   // 0x0D58(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0D59(0x0003) MISSED OFFSET
	float                                              FrameRateCap;                                             // 0x0D5C(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	struct FString                                     RconPassword;                                             // 0x0D60(0x0010) (ZeroConstructor, Config)
	unsigned char                                      UnknownData04[0x1B0];                                     // 0x0D70(0x01B0) MISSED OFFSET
	TArray<struct FString>                             PaksThatFailedToLoad;                                     // 0x0F20(0x0010) (ZeroConstructor)
	TMap<struct FName, class UUTFlagInfo*>             FlagList;                                                 // 0x0F30(0x0050) (ZeroConstructor)
	unsigned char                                      UnknownData05[0x8];                                       // 0x0F80(0x0008) MISSED OFFSET
	TArray<struct FBanInfo>                            InstanceBannedUsers;                                      // 0x0F88(0x0010) (ZeroConstructor)
	TArray<struct FString>                             PlayerReservations;                                       // 0x0F98(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData06[0x8];                                       // 0x0FA8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTGameEngine");
		return ptr;
	}

};


// Class UnrealTournament.UTBlitzDeliveryPoint
// 0x0020 (0x0460 - 0x0440)
class AUTBlitzDeliveryPoint : public AUTCTFFlagBase
{
public:
	class UParticleSystem*                             BlueDefenseEffect;                                        // 0x0440(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             RedDefenseEffect;                                         // 0x0448(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UParticleSystemComponent*                    DefensePSC;                                               // 0x0450(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      ShowDefenseEffect;                                        // 0x0458(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0459(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTBlitzDeliveryPoint");
		return ptr;
	}


	void OnDefenseEffectChanged();
};


// Class UnrealTournament.UTBlitzFlagSpawner
// 0x0000 (0x0440 - 0x0440)
class AUTBlitzFlagSpawner : public AUTCTFFlagBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTBlitzFlagSpawner");
		return ptr;
	}

};


// Class UnrealTournament.UTRallyPoint
// 0x0198 (0x0588 - 0x03F0)
class AUTRallyPoint : public AUTGameObjective
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x03F0(0x0008) MISSED OFFSET
	class UCapsuleComponent*                           Capsule;                                                  // 0x03F8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class AUTGameVolume*                               MyGameVolume;                                             // 0x0400(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RallyAvailableDistance;                                   // 0x0408(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RallyReadyDelay;                                          // 0x040C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RallyStartTime;                                           // 0x0410(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x14];                                      // 0x0414(0x0014) MISSED OFFSET
	float                                              MinPersistentRemaining;                                   // 0x0428(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinimumRallyTime;                                         // 0x042C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RallyReadyCountdown;                                      // 0x0430(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LastRallyHot;                                             // 0x0434(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                ReplicatedCountdown;                                      // 0x0438(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              ClientCountdown;                                          // 0x043C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              OldClientCountdown;                                       // 0x0440(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              RallyTimeRemaining;                                       // 0x0444(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ReplicatedRallyTimeRemaining;                             // 0x0448(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bShowAvailableEffect;                                     // 0x044C(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x044D(0x0003) MISSED OFFSET
	class AUTCharacter*                                TouchingFC;                                               // 0x0450(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bHaveGameState;                                           // 0x0458(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bIsEnabled;                                               // 0x0459(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x6];                                       // 0x045A(0x0006) MISSED OFFSET
	struct FName                                       RallyPointState;                                          // 0x0460(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             AvailableEffect;                                          // 0x0468(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UParticleSystemComponent*                    AvailableEffectPSC;                                       // 0x0470(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UParticleSystem*                             RallyChargingEffectRed;                                   // 0x0478(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             RallyPoweredEffectRed;                                    // 0x0480(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             RallyFinishedEffectRed;                                   // 0x0488(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             LosingChargeEffectRed;                                    // 0x0490(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             RallyChargingEffectBlue;                                  // 0x0498(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             RallyPoweredEffectBlue;                                   // 0x04A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             RallyFinishedEffectBlue;                                  // 0x04A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             LosingChargeEffectBlue;                                   // 0x04B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UParticleSystemComponent*                    RallyChargingEffectPSC;                                   // 0x04B8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    RallyPoweredEffectPSC;                                    // 0x04C0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    LosingChargeEffectPSC;                                    // 0x04C8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UDecalComponent*                             AvailableDecal;                                           // 0x04D0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USoundBase*                                  AmbientSound;                                             // 0x04D8(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              AmbientSoundPitch;                                        // 0x04E0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x04E4(0x0004) MISSED OFFSET
	class UAudioComponent*                             AmbientSoundComp;                                         // 0x04E8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USoundBase*                                  PoweringUpSound;                                          // 0x04F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  FullyPoweredSound;                                        // 0x04F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  ReadyToRallySound;                                        // 0x0500(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  FCTouchedSound;                                           // 0x0508(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  EnabledSound;                                             // 0x0510(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  RallyEndedSound;                                          // 0x0518(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  RallyBrokenSound;                                         // 0x0520(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          GlowDecalMaterial;                                        // 0x0528(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UMaterialInstanceDynamic*                    GlowDecalMaterialInstance;                                // 0x0530(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LastEnemyRallyWarning;                                    // 0x0538(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x053C(0x0004) MISSED OFFSET
	struct FName                                       EnemyRallyWarning;                                        // 0x0540(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FText                                       RallyBeaconText;                                          // 0x0548(0x0018) (Edit, BlueprintVisible)
	struct FText                                       LocationText;                                             // 0x0560(0x0018) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData06[0x8];                                       // 0x0578(0x0008) MISSED OFFSET
	bool                                               bBeaconWasLeft;                                           // 0x0580(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x3];                                       // 0x0581(0x0003) MISSED OFFSET
	int                                                RallyOffset;                                              // 0x0584(0x0004) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTRallyPoint");
		return ptr;
	}


	void OnReplicatedCountdown();
	void OnRallyTimeRemaining();
	void OnRallyStateChanged();
	void OnRallyChargingChanged();
	void OnOverlapEnd(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnAvailableEffectChanged();
	void AmbientSoundUpdated();
	void AmbientSoundPitchUpdated();
};


// Class UnrealTournament.UTGameSession
// 0x0040 (0x03E0 - 0x03A0)
class AUTGameSession : public AGameSession
{
public:
	class AUTBaseGameMode*                             UTBaseGameMode;                                           // 0x03A0(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x30];                                      // 0x03A8(0x0030) MISSED OFFSET
	float                                              ServerSecondsToLive;                                      // 0x03D8(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bNoJoinInProgress;                                        // 0x03DC(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               CantBindBeaconPortIsNotFatal;                             // 0x03DD(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x03DE(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTGameSession");
		return ptr;
	}

};


// Class UnrealTournament.UTGameSessionNonRanked
// 0x0050 (0x0430 - 0x03E0)
class AUTGameSessionNonRanked : public AUTGameSession
{
public:
	unsigned char                                      UnknownData00[0x38];                                      // 0x03E0(0x0038) MISSED OFFSET
	class AUTServerBeaconHost*                         BeaconHost;                                               // 0x0418(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FBanInfo>                            BannedUsers;                                              // 0x0420(0x0010) (ZeroConstructor, Config)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTGameSessionNonRanked");
		return ptr;
	}

};


// Class UnrealTournament.UTGameSessionRanked
// 0x0200 (0x05E0 - 0x03E0)
class AUTGameSessionRanked : public AUTGameSession
{
public:
	unsigned char                                      UnknownData00[0x1C0];                                     // 0x03E0(0x01C0) MISSED OFFSET
	class UClass*                                      ReservationBeaconHostClass;                               // 0x05A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UClass*                                      QosBeaconHostClass;                                       // 0x05A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bSessionRegistrationLocked;                               // 0x05B0(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0xF];                                       // 0x05B1(0x000F) MISSED OFFSET
	class AUTPartyBeaconHost*                          ReservationBeaconHost;                                    // 0x05C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AQosBeaconHost*                              QosBeaconHost;                                            // 0x05C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x10];                                      // 0x05D0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTGameSessionRanked");
		return ptr;
	}

};


// Class UnrealTournament.UTFlagRunGameState
// 0x01C0 (0x0DA0 - 0x0BE0)
class AUTFlagRunGameState : public AUTGameState
{
public:
	float                                              HalftimeScoreDelay;                                       // 0x0BE0(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0BE4(0x0004) MISSED OFFSET
	class AUTBlitzDeliveryPoint*                       DeliveryPoint;                                            // 0x0BE8(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	class AUTBlitzFlagSpawner*                         FlagSpawner;                                              // 0x0BF0(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	int                                                CTFRound;                                                 // 0x0BF8(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	int                                                NumRounds;                                                // 0x0BFC(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	struct FText                                       RoundInProgressStatus;                                    // 0x0C00(0x0018) (Edit, BlueprintVisible)
	struct FText                                       FullRoundInProgressStatus;                                // 0x0C18(0x0018) (Edit, BlueprintVisible)
	struct FText                                       IntermissionStatus;                                       // 0x0C30(0x0018) (Edit, BlueprintVisible)
	unsigned char                                      bRedToCap : 1;                                            // 0x0C48(0x0001) (BlueprintVisible, BlueprintReadOnly, Net)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0C49(0x0003) MISSED OFFSET
	int                                                GoldBonusThreshold;                                       // 0x0C4C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                SilverBonusThreshold;                                     // 0x0C50(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0C54(0x0004) MISSED OFFSET
	struct FText                                       GoldBonusText;                                            // 0x0C58(0x0018)
	struct FText                                       SilverBonusText;                                          // 0x0C70(0x0018)
	struct FText                                       BronzeBonusText;                                          // 0x0C88(0x0018)
	struct FText                                       GoldBonusTimedText;                                       // 0x0CA0(0x0018)
	struct FText                                       SilverBonusTimedText;                                     // 0x0CB8(0x0018)
	struct FText                                       BronzeBonusTimedText;                                     // 0x0CD0(0x0018)
	int                                                EarlyEndTime;                                             // 0x0CE8(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               bAttackersCanRally;                                       // 0x0CEC(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               bHaveEstablishedFlagRunner;                               // 0x0CED(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      BonusLevel;                                               // 0x0CEE(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               bAllowBoosts;                                             // 0x0CEF(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	int                                                FlagRunMessageSwitch;                                     // 0x0CF0(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	int                                                TiebreakValue;                                            // 0x0CF4(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	int                                                RemainingPickupDelay;                                     // 0x0CF8(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	int                                                RampStartTime;                                            // 0x0CFC(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	class AUTTeamInfo*                                 FlagRunMessageTeam;                                       // 0x0D00(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class AUTRallyPoint*                               CurrentRallyPoint;                                        // 0x0D08(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	class AUTRallyPoint*                               PendingRallyPoint;                                        // 0x0D10(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bEnemyRallyPointIdentified;                               // 0x0D18(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bHaveRallyHighlight;                                      // 0x0D19(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bHaveRallyPoweredHighlight;                               // 0x0D1A(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x1];                                       // 0x0D1B(0x0001) MISSED OFFSET
	int                                                HappyCount;                                               // 0x0D1C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                HiredGunCount;                                            // 0x0D20(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                BobLifeCount;                                             // 0x0D24(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                BubbleGumCount;                                           // 0x0D28(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                NaturalKillerCount;                                       // 0x0D2C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                DestroyerCount;                                           // 0x0D30(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0D34(0x0004) MISSED OFFSET
	TArray<class UClass*>                              DefenseSelectablePowerups;                                // 0x0D38(0x0010) (Net, ZeroConstructor)
	TArray<class UClass*>                              OffenseSelectablePowerups;                                // 0x0D48(0x0010) (Net, ZeroConstructor)
	struct FText                                       AttackText;                                               // 0x0D58(0x0018) (Edit, BlueprintVisible)
	struct FText                                       DefendText;                                               // 0x0D70(0x0018) (Edit, BlueprintVisible)
	TArray<struct FCTFScoringPlay>                     ScoringPlays;                                             // 0x0D88(0x0010) (Net, ZeroConstructor)
	unsigned char                                      UnknownData05[0x8];                                       // 0x0D98(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTFlagRunGameState");
		return ptr;
	}


	bool IsTeamOnOffense(int TeamNumber);
	bool IsTeamOnDefenseNextRound(int TeamNumber);
	bool IsTeamOnDefense(int TeamNumber);
	bool IsSelectedBoostValid(class AUTPlayerState* PlayerState);
	class UClass* GetSelectableBoostByIndex(class AUTPlayerState* PlayerState, int Index);
	struct FString GetPowerupSelectWidgetPath(int TeamNumber);
	class AUTBlitzFlag* GetOffenseFlag();
	class AUTPlayerState* GetFlagHolder();
	void AddScoringPlay(const struct FCTFScoringPlay& NewScoringPlay);
};


// Class UnrealTournament.UTFlagRunPvEGameState
// 0x0010 (0x0DB0 - 0x0DA0)
class AUTFlagRunPvEGameState : public AUTFlagRunGameState
{
public:
	int                                                NextStarTime;                                             // 0x0DA0(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	int                                                KillsUntilExtraLife;                                      // 0x0DA4(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	int                                                ExtraLivesGained;                                         // 0x0DA8(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0DAC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTFlagRunPvEGameState");
		return ptr;
	}


	void OnRep_EndingElapsedTime();
};


// Class UnrealTournament.UTShowdownGameState
// 0x0010 (0x0BF0 - 0x0BE0)
class AUTShowdownGameState : public AUTGameState
{
public:
	unsigned char                                      IntermissionStageTime;                                    // 0x0BE0(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bStartedSpawnSelection;                                   // 0x0BE1(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bStartingSpawnSelection;                                  // 0x0BE2(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bFinalIntermissionDelay;                                  // 0x0BE3(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bActivateXRayVision;                                      // 0x0BE4(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bMatchHasStarted;                                         // 0x0BE5(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xA];                                       // 0x0BE6(0x000A) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTShowdownGameState");
		return ptr;
	}


	void OnRep_XRayVision();
	void OnRep_StartSpawnSelect();
};


// Class UnrealTournament.UTRewardDisplayData
// 0x0400 (0x0428 - 0x0028)
class UUTRewardDisplayData : public UDataAsset
{
public:
	class UTexture2D*                                  DefaultRewardIcon;                                        // 0x0028(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TMap<struct FString, struct FText>                 RewardSourceTextByNameString;                             // 0x0030(0x0050) (Edit, ZeroConstructor)
	struct FUTRewardTypeInfo                           BadgeTypeInfo;                                            // 0x0080(0x0060) (Edit)
	struct FUTRewardTypeInfo                           Currencies[0x3];                                          // 0x00E0(0x0060) (Edit)
	struct FText                                       LevelTypeNames[0x3];                                      // 0x0200(0x0018) (Edit)
	struct FLinearColor                                BaseXPColors[0x3];                                        // 0x0248(0x0010) (Edit, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                DeltaXPColors[0x3];                                       // 0x0278(0x0010) (Edit, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                BoostXPColors[0x3];                                       // 0x02A8(0x0010) (Edit, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                FakeBoostXPColors[0x3];                                   // 0x02D8(0x0010) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FUTRewardSourceInfo>                 RewardSources;                                            // 0x0308(0x0010) (Edit, ZeroConstructor)
	struct FUTRewardSourceInfo                         DefaultRewardSource;                                      // 0x0318(0x0040) (Edit)
	TArray<struct FUTItemRewardInfo>                   ItemRewardTypes;                                          // 0x0358(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0368(0x0050) MISSED OFFSET
	TArray<struct FUTLootTierRewardInfo>               LootRewardTypes;                                          // 0x03B8(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData01[0x50];                                      // 0x03C8(0x0050) MISSED OFFSET
	TArray<struct FUTCoinLootCrateRewards>             LootCrateCoinRewards;                                     // 0x0418(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTRewardDisplayData");
		return ptr;
	}

};


// Class UnrealTournament.UTTextStyle
// 0x0230 (0x0258 - 0x0028)
class UUTTextStyle : public UObject
{
public:
	struct FSlateFontInfo                              Font[0x3];                                                // 0x0028(0x0068) (Edit, DisableEditOnInstance)
	struct FLinearColor                                Color[0x5];                                               // 0x0160(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   ShadowOffset[0x3];                                        // 0x01B0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                ShadowColor[0x5];                                         // 0x01C8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FMargin                                     Margin[0x3];                                              // 0x0218(0x0010) (Edit, DisableEditOnInstance)
	float                                              LineHeightPercentage[0x3];                                // 0x0248(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0254(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTTextStyle");
		return ptr;
	}


	void GetShadowOffset(TEnumAsByte<EUTWidgetStyleSize> Size, struct FVector2D* OutShadowOffset);
	void GetShadowColor(TEnumAsByte<EUTTextColor> ColorType, struct FLinearColor* OutColor);
	void GetMargin(TEnumAsByte<EUTWidgetStyleSize> Size, struct FMargin* OutMargin);
	float GetLineHeightPercentage(TEnumAsByte<EUTWidgetStyleSize> Size);
	void GetFont(TEnumAsByte<EUTWidgetStyleSize> Size, struct FSlateFontInfo* OutFont);
	void GetColor(TEnumAsByte<EUTTextColor> ColorType, struct FLinearColor* OutColor);
};


// Class UnrealTournament.UTTextBlock
// 0x0060 (0x02A8 - 0x0248)
class UUTTextBlock : public UTextBlock
{
public:
	class UClass*                                      Style;                                                    // 0x0248(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EUTWidgetStyleSize>                    StyleSize;                                                // 0x0250(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EUTTextColor>                          ColorType;                                                // 0x0251(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bUseDropShadow;                                           // 0x0252(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bAllCaps;                                                 // 0x0253(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bScroll;                                                  // 0x0254(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0255(0x0003) MISSED OFFSET
	float                                              Speed;                                                    // 0x0258(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              StartDelay;                                               // 0x025C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              EndDelay;                                                 // 0x0260(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FadeInDelay;                                              // 0x0264(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FadeOutDelay;                                             // 0x0268(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3C];                                      // 0x026C(0x003C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTTextBlock");
		return ptr;
	}


	void SetWrapTextWidth(int InWrapTextAt);
	void SetUseDropShadow(bool bShouldUseDropShadow);
	void SetStyle(class UClass* InStyle);
	void SetSize(TEnumAsByte<EUTWidgetStyleSize> Size);
	void SetProperties(class UClass* InStyle, TEnumAsByte<EUTWidgetStyleSize> Size, TEnumAsByte<EUTTextColor> Color, int InWrapTextAt, bool bShouldUseDropShadow);
	void SetColorType(TEnumAsByte<EUTTextColor> Color);
};


// Class UnrealTournament.UTRichTextStyleData
// 0x01D0 (0x01F8 - 0x0028)
class UUTRichTextStyleData : public UDataAsset
{
public:
	struct FString                                     StyleSizeSubtags[0x3];                                    // 0x0028(0x0010) (Edit, ZeroConstructor, EditConst)
	struct FString                                     ColorTypeSubtags[0x4];                                    // 0x0058(0x0010) (Edit, ZeroConstructor, EditConst)
	struct FString                                     KeywordMarkupTag;                                         // 0x0098(0x0010) (Edit, ZeroConstructor, EditConst)
	class UClass*                                      KeywordStyle;                                             // 0x00A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              InlineIconSizes[0x3];                                     // 0x00B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              InlineIconBaselines[0x3];                                 // 0x00BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FString                                     StatusEffectMarkupTag;                                    // 0x00C8(0x0010) (Edit, ZeroConstructor, EditConst)
	struct FString                                     CurrencyMarkupTag;                                        // 0x00D8(0x0010) (Edit, ZeroConstructor, EditConst)
	struct FString                                     CurrencyTypeIDs[0x3];                                     // 0x00E8(0x0010) (Edit, ZeroConstructor, EditConst)
	struct FText                                       CurrencyNames[0x3];                                       // 0x0118(0x0018) (Edit)
	class UTexture2D*                                  CurrencyIcons[0x3];                                       // 0x0160(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FString                                     InputMarkupTag;                                           // 0x0178(0x0010) (Edit, ZeroConstructor, EditConst)
	struct FString                                     InputAxisMarkupTag;                                       // 0x0188(0x0010) (Edit, ZeroConstructor, EditConst)
	struct FString                                     SpecificKeyMarkupSubtag;                                  // 0x0198(0x0010) (Edit, ZeroConstructor, EditConst)
	TMap<struct FString, struct FUTKeywordIcon>        IconsByKeyword;                                           // 0x01A8(0x0050) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTRichTextStyleData");
		return ptr;
	}

};


// Class UnrealTournament.UTRichTextHelperLibrary
// 0x0000 (0x0028 - 0x0028)
class UUTRichTextHelperLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTRichTextHelperLibrary");
		return ptr;
	}


	struct FString STATIC_GetCurrencyIconTagSpecific(EUTCurrencyType Currency, TEnumAsByte<EUTWidgetStyleSize> Size);
	struct FString STATIC_GetCurrencyIconTag(EUTCurrencyType Currency);
	struct FString STATIC_FormatAsKeywordSpecific(const struct FString& Text, TEnumAsByte<EUTWidgetStyleSize> Size, TEnumAsByte<EUTTextColor> Color);
	struct FString STATIC_FormatAsKeyword(const struct FString& Text);
	struct FText STATIC_FormatAsCurrency(EUTCurrencyType Currency, const struct FText& DisplayValue, TEnumAsByte<EUTWidgetStyleSize> Size);
	void STATIC_ConvertToKeywordSpecific(TEnumAsByte<EUTWidgetStyleSize> Size, TEnumAsByte<EUTTextColor> Color, struct FText* Text);
	void STATIC_ConvertToKeyword(struct FText* Text);
};


// Class UnrealTournament.UTInputDisplayData
// 0x02D8 (0x0300 - 0x0028)
class UUTInputDisplayData : public UDataAsset
{
public:
	TArray<struct FInputActionGamepadEquivalency>      GamepadActionEquivalences;                                // 0x0028(0x0010) (Edit, ZeroConstructor, Transient)
	TMap<struct FName, struct FName>                   GamepadActionEquivalencesMap;                             // 0x0038(0x0050) (ZeroConstructor)
	float                                              ButtonIconHeights[0x3];                                   // 0x0088(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0094(0x0004) MISSED OFFSET
	TArray<struct FGamepadButtonArt>                   GamepadButtons;                                           // 0x0098(0x0010) (Edit, ZeroConstructor)
	TArray<struct FGamepadButtonArt>                   SecondaryGamepadButtons;                                  // 0x00A8(0x0010) (Edit, ZeroConstructor)
	TArray<struct FMouseButtonArt>                     MouseButtons;                                             // 0x00B8(0x0010) (Edit, ZeroConstructor)
	struct FSlateBrush                                 KeyboardKeyBackground;                                    // 0x00C8(0x0090) (Edit)
	class UClass*                                      KeyboardKeyTextStyle;                                     // 0x0158(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FMargin                                     KeyTextPadding[0x3];                                      // 0x0160(0x0010) (Edit)
	TArray<struct FActionBindingToReadableName>        ReadableNamesArray;                                       // 0x0190(0x0010) (Edit, ZeroConstructor, Transient)
	TArray<struct FAxisBindingsRedirectStruct>         AxisRedirects;                                            // 0x01A0(0x0010) (Edit, ZeroConstructor)
	TArray<struct FAxisKeyRedirect>                    AxisKeyRedirects;                                         // 0x01B0(0x0010) (Edit, ZeroConstructor)
	TMap<struct FName, struct FText>                   ReadableNamesMap;                                         // 0x01C0(0x0050) (ZeroConstructor)
	TMap<struct FName, struct FText>                   OverrideNames;                                            // 0x0210(0x0050) (ZeroConstructor)
	TArray<struct FInputChord>                         InputBlacklist;                                           // 0x0260(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData01[0x90];                                      // 0x0270(0x0090) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTInputDisplayData");
		return ptr;
	}

};


// Class UnrealTournament.UTGameUIData
// 0x00B0 (0x00D8 - 0x0028)
class UUTGameUIData : public UDataAsset
{
public:
	class UTexture2D*                                  DefaultIcon;                                              // 0x0028(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FSlateBrush                                 LoadingSpinner;                                           // 0x0030(0x0090) (Edit)
	class UUTInputDisplayData*                         InputDisplayData;                                         // 0x00C0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UUTRichTextStyleData*                        RichTextStyleData;                                        // 0x00C8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UUTRewardDisplayData*                        RewardDisplayData;                                        // 0x00D0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTGameUIData");
		return ptr;
	}

};


// Class UnrealTournament.UTGameUserSettings
// 0x0160 (0x0260 - 0x0100)
class UUTGameUserSettings : public UGameUserSettings
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0100(0x0008) MISSED OFFSET
	uint32_t                                           UTVersion;                                                // 0x0108(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              SoundClassVolumes[0x7];                                   // 0x010C(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	struct FString                                     EpicIDLogin;                                              // 0x0128(0x0010) (ZeroConstructor, Config)
	struct FString                                     EpicIDAuthToken;                                          // 0x0138(0x0010) (ZeroConstructor, Config)
	float                                              ServerBrowserColumnWidths[0xA];                           // 0x0148(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              ServerBrowserRulesColumnWidths[0x2];                      // 0x0170(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              ServerBrowserPlayerColumnWidths[0x2];                     // 0x0178(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              ServerBrowserSplitterPositions[0x4];                      // 0x0180(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	int                                                AAMode;                                                   // 0x0190(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	int                                                ScreenPercentage;                                         // 0x0194(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	int                                                InitialBenchmarkState;                                    // 0x0198(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	TEnumAsByte<EBotSpeechOption>                      BotSpeech;                                                // 0x019C(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bHRTFEnabled;                                             // 0x019D(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bVoiceChatEnabled;                                        // 0x019E(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x019F(0x0001) MISSED OFFSET
	float                                              VoiceChatPlaybackVolume;                                  // 0x01A0(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x01A4(0x0004) MISSED OFFSET
	struct FString                                     VoiceChatInputDevice;                                     // 0x01A8(0x0010) (ZeroConstructor, Config)
	bool                                               bDisableKeyboardLighting;                                 // 0x01B8(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bShouldSuppressLanWarning;                                // 0x01B9(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData03[0xA6];                                      // 0x01BA(0x00A6) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTGameUserSettings");
		return ptr;
	}

};


// Class UnrealTournament.UTGameViewportClient
// 0x0190 (0x0690 - 0x0500)
class UUTGameViewportClient : public UGameViewportClient
{
public:
	unsigned char                                      UnknownData00[0x190];                                     // 0x0500(0x0190) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTGameViewportClient");
		return ptr;
	}

};


// Class UnrealTournament.UTNoCameraVolume
// 0x0000 (0x0460 - 0x0460)
class AUTNoCameraVolume : public AUTGameVolume
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTNoCameraVolume");
		return ptr;
	}

};


// Class UnrealTournament.UTGenerateRedirectsCommandlet
// 0x0000 (0x0080 - 0x0080)
class UUTGenerateRedirectsCommandlet : public UCommandlet
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTGenerateRedirectsCommandlet");
		return ptr;
	}

};


// Class UnrealTournament.UTGenericObjectivePoint
// 0x0018 (0x03A0 - 0x0388)
class AUTGenericObjectivePoint : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0388(0x0008) MISSED OFFSET
	unsigned char                                      TeamIndex;                                                // 0x0390(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0391(0x0007) MISSED OFFSET
	struct FName                                       Purpose;                                                  // 0x0398(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTGenericObjectivePoint");
		return ptr;
	}

};


// Class UnrealTournament.UTGhostComponent
// 0x0048 (0x0138 - 0x00F0)
class UUTGhostComponent : public UActorComponent
{
public:
	class AUTCharacter*                                UTOwner;                                                  // 0x00F0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bGhostRecording;                                          // 0x00F8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bGhostPlaying;                                            // 0x00F9(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x00FA(0x0006) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnGhostPlayFinished;                                      // 0x0100(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0110(0x0008) MISSED OFFSET
	class UUTGhostData*                                GhostData;                                                // 0x0118(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0120(0x0004) MISSED OFFSET
	float                                              MaxMoveDelta;                                             // 0x0124(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x10];                                      // 0x0128(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTGhostComponent");
		return ptr;
	}


	void GhostStopRecording();
	void GhostStopPlaying();
	void GhostStartRecording();
	void GhostStartPlaying();
	void GhostMoveToStart();
	class UUTGhostEvent* CreateAndAddEvent(class UClass* EventClass);
};


// Class UnrealTournament.UTGhostController
// 0x0000 (0x0480 - 0x0480)
class AUTGhostController : public AAIController
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTGhostController");
		return ptr;
	}

};


// Class UnrealTournament.UTGhostData
// 0x0048 (0x0070 - 0x0028)
class UUTGhostData : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	struct FTransform                                  StartTransform;                                           // 0x0030(0x0030) (Edit, BlueprintVisible, IsPlainOldData)
	TArray<class UUTGhostEvent*>                       Events;                                                   // 0x0060(0x0010) (Edit, BlueprintVisible, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTGhostData");
		return ptr;
	}

};


// Class UnrealTournament.UTGhostEvent
// 0x0008 (0x0030 - 0x0028)
class UUTGhostEvent : public UObject
{
public:
	float                                              Time;                                                     // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTGhostEvent");
		return ptr;
	}


	void ApplyEvent(class AUTCharacter* UTC);
};


// Class UnrealTournament.UTGhostEvent_Move
// 0x0030 (0x0060 - 0x0030)
class UUTGhostEvent_Move : public UUTGhostEvent
{
public:
	struct FRepUTMovement                              RepMovement;                                              // 0x0030(0x0028) (Edit, BlueprintVisible)
	unsigned char                                      CompressedFlags;                                          // 0x0058(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0059(0x0003) MISSED OFFSET
	unsigned char                                      bIsCrouched : 1;                                          // 0x005C(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bApplyWallSlide : 1;                                      // 0x005C(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData01[0x3];                                       // 0x005D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTGhostEvent_Move");
		return ptr;
	}


	void ApplyEvent(class AUTCharacter* UTC);
};


// Class UnrealTournament.UTGhostEvent_MovementEvent
// 0x0010 (0x0040 - 0x0030)
class UUTGhostEvent_MovementEvent : public UUTGhostEvent
{
public:
	struct FMovementEventInfo                          MovementEvent;                                            // 0x0030(0x0010) (Edit, BlueprintVisible)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTGhostEvent_MovementEvent");
		return ptr;
	}


	void ApplyEvent(class AUTCharacter* UTC);
};


// Class UnrealTournament.UTGhostEvent_Input
// 0x0008 (0x0038 - 0x0030)
class UUTGhostEvent_Input : public UUTGhostEvent
{
public:
	unsigned char                                      FireFlags;                                                // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTGhostEvent_Input");
		return ptr;
	}


	void ApplyEvent(class AUTCharacter* UTC);
};


// Class UnrealTournament.UTGhostEvent_Weapon
// 0x0008 (0x0038 - 0x0030)
class UUTGhostEvent_Weapon : public UUTGhostEvent
{
public:
	class UClass*                                      WeaponClass;                                              // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTGhostEvent_Weapon");
		return ptr;
	}


	void ApplyEvent(class AUTCharacter* UTC);
};


// Class UnrealTournament.UTGhostEvent_JumpBoots
// 0x0010 (0x0040 - 0x0030)
class UUTGhostEvent_JumpBoots : public UUTGhostEvent
{
public:
	class UClass*                                      SuperJumpEffect;                                          // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  SuperJumpSound;                                           // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTGhostEvent_JumpBoots");
		return ptr;
	}


	void ApplyEvent(class AUTCharacter* UTC);
};


// Class UnrealTournament.UTGhostFlag
// 0x0078 (0x0400 - 0x0388)
class AUTGhostFlag : public AActor
{
public:
	class USkeletalMeshComponent*                      Mesh;                                                     // 0x0388(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	TArray<class UMaterialInstanceDynamic*>            MeshMIDs;                                                 // 0x0390(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)
	class UParticleSystemComponent*                    TimerEffect;                                              // 0x03A0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	struct FGhostMaster                                GhostMaster;                                              // 0x03A8(0x0040) (BlueprintVisible, BlueprintReadOnly, Net)
	class AUTFlagReturnTrail*                          Trail;                                                    // 0x03E8(0x0008) (ZeroConstructor, IsPlainOldData)
	class UClass*                                      TrailClass;                                               // 0x03F0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TrailSpawnTime;                                           // 0x03F8(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x03FC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTGhostFlag");
		return ptr;
	}


	void OnSetCarriedObject();
};


// Class UnrealTournament.UTGibSkeletalMesh
// 0x0010 (0x03D0 - 0x03C0)
class AUTGibSkeletalMesh : public AUTGib
{
public:
	TArray<class USkeletalMesh*>                       MeshChoices;                                              // 0x03C0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTGibSkeletalMesh");
		return ptr;
	}

};


// Class UnrealTournament.UTGibStaticMesh
// 0x0010 (0x03D0 - 0x03C0)
class AUTGibStaticMesh : public AUTGib
{
public:
	TArray<class UStaticMesh*>                         MeshChoices;                                              // 0x03C0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTGibStaticMesh");
		return ptr;
	}

};


// Class UnrealTournament.UTGlobals
// 0x01F8 (0x0220 - 0x0028)
class UUTGlobals : public UObject
{
public:
	unsigned char                                      UnknownData00[0xA0];                                      // 0x0028(0x00A0) MISSED OFFSET
	struct FStringAssetReference                       WidgetDataNameRef;                                        // 0x00C8(0x0010) (Edit, ZeroConstructor, Config)
	class UUTWidgetData*                               WidgetData;                                               // 0x00D8(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FStringAssetReference                       GameDataRef;                                              // 0x00E0(0x0010) (Edit, ZeroConstructor, Config)
	struct FStringAssetReference                       GameUIDataRef;                                            // 0x00F0(0x0010) (Edit, ZeroConstructor, Config)
	class UDataTable*                                  RewardToSourceTable;                                      // 0x0100(0x0008) (ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  RewardSourceLocTable;                                     // 0x0108(0x0008) (ZeroConstructor, IsPlainOldData)
	class UUTGameUIData*                               GameUIData;                                               // 0x0110(0x0008) (ZeroConstructor, IsPlainOldData)
	class UUTRewardDisplayData*                        RewardDisplayData;                                        // 0x0118(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FUTObjectLibraryEntry                       ObjectLibraries[0x8];                                     // 0x0120(0x0020)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTGlobals");
		return ptr;
	}

};


// Class UnrealTournament.UTHeartbeatManager
// 0x0018 (0x0040 - 0x0028)
class UUTHeartbeatManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0028(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTHeartbeatManager");
		return ptr;
	}

};


// Class UnrealTournament.UTScoreboard
// 0x02F8 (0x03E0 - 0x00E8)
class UUTScoreboard : public UUTHUDWidget
{
public:
	float                                              ColumnHeaderPlayerX;                                      // 0x00E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ColumnHeaderScoreX;                                       // 0x00EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ColumnHeaderDeathsX;                                      // 0x00F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ColumnHeaderPingX;                                        // 0x00F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ColumnHeaderY;                                            // 0x00F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ColumnY;                                                  // 0x00FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CellHeight;                                               // 0x0100(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CellWidth;                                                // 0x0104(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinimapPadding;                                           // 0x0108(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              EdgeWidth;                                                // 0x010C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ColumnMedalX;                                             // 0x0110(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FooterPosY;                                               // 0x0114(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   MinimapCenter;                                            // 0x0118(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FlagX;                                                    // 0x0120(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0124(0x0004) MISSED OFFSET
	class USoundBase*                                  ScoreUpdateSound;                                         // 0x0128(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  XPGainedSound;                                            // 0x0130(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  LevelUpSound;                                             // 0x0138(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ScaledEdgeSize;                                           // 0x0140(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              ScaledCellWidth;                                          // 0x0144(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LastScorePanelYOffset;                                    // 0x0148(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x014C(0x0004) MISSED OFFSET
	struct FText                                       GameMessageText;                                          // 0x0150(0x0018) (Edit, BlueprintVisible)
	struct FText                                       CH_PlayerName;                                            // 0x0168(0x0018) (Edit, BlueprintVisible)
	struct FText                                       CH_Score;                                                 // 0x0180(0x0018) (Edit, BlueprintVisible)
	struct FText                                       CH_Kills;                                                 // 0x0198(0x0018) (Edit, BlueprintVisible)
	struct FText                                       CH_Deaths;                                                // 0x01B0(0x0018) (Edit, BlueprintVisible)
	struct FText                                       CH_Skill;                                                 // 0x01C8(0x0018) (Edit, BlueprintVisible)
	struct FText                                       CH_Ping;                                                  // 0x01E0(0x0018) (Edit, BlueprintVisible)
	struct FText                                       CH_Ready;                                                 // 0x01F8(0x0018) (Edit, BlueprintVisible)
	struct FText                                       OneSpectatorWatchingText;                                 // 0x0210(0x0018) (Edit, BlueprintVisible)
	struct FText                                       SpectatorsWatchingText;                                   // 0x0228(0x0018) (Edit, BlueprintVisible)
	struct FText                                       PingFormatText;                                           // 0x0240(0x0018) (Edit, BlueprintVisible)
	struct FText                                       PositionFormatText;                                       // 0x0258(0x0018) (Edit, BlueprintVisible)
	struct FText                                       TeamSwapText;                                             // 0x0270(0x0018) (Edit, BlueprintVisible)
	struct FText                                       ReadyText;                                                // 0x0288(0x0018) (Edit, BlueprintVisible)
	struct FText                                       NotReadyText;                                             // 0x02A0(0x0018) (Edit, BlueprintVisible)
	struct FText                                       WarmupText;                                               // 0x02B8(0x0018) (Edit, BlueprintVisible)
	struct FText                                       InteractiveText;                                          // 0x02D0(0x0018) (Edit, BlueprintVisible)
	struct FText                                       InteractiveStandaloneText;                                // 0x02E8(0x0018) (Edit, BlueprintVisible)
	struct FText                                       InteractiveHintA;                                         // 0x0300(0x0018) (Edit, BlueprintVisible)
	struct FText                                       DifficultyText[0x3];                                      // 0x0318(0x0018) (Edit)
	bool                                               bDrawMinimapInScoreboard;                                 // 0x0360(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0361(0x0003) MISSED OFFSET
	int                                                ActualPlayerCount;                                        // 0x0364(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  FlagAtlas;                                                // 0x0368(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  HighlightIcon;                                            // 0x0370(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x38];                                      // 0x0378(0x0038) MISSED OFFSET
	float                                              ValueColumn;                                              // 0x03B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ScoreColumn;                                              // 0x03B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              KillsColumn;                                              // 0x03B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DeathsColumn;                                             // 0x03BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ShotsColumn;                                              // 0x03C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AccuracyColumn;                                           // 0x03C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bHighlightStatsLineTopValue;                              // 0x03C8(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x03C9(0x0007) MISSED OFFSET
	TArray<class AUTWeapon*>                           StatsWeapons;                                             // 0x03D0(0x0010) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTScoreboard");
		return ptr;
	}


	bool HandleContextCommand(unsigned char ContextId, class AUTPlayerState* InSelectedPlayer);
	void GetContextMenuItems(TArray<struct FScoreboardContextMenuItem>* MenuItems);
};


// Class UnrealTournament.UTHUDWidget_ReplayTimeSlider
// 0x0020 (0x0108 - 0x00E8)
class UUTHUDWidget_ReplayTimeSlider : public UUTHUDWidget
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x00E8(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTHUDWidget_ReplayTimeSlider");
		return ptr;
	}

};


// Class UnrealTournament.UTHUD
// 0x05C0 (0x0A30 - 0x0470)
class AUTHUD : public AHUD
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0470(0x0008) MISSED OFFSET
	TArray<class UUTHUDWidget*>                        HudWidgets;                                               // 0x0478(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData01[0x50];                                      // 0x0488(0x0050) MISSED OFFSET
	TArray<struct FString>                             HudWidgetClasses;                                         // 0x04D8(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	class UFont*                                       ChatFont;                                                 // 0x04E8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UFont*                                       TinyFont;                                                 // 0x04F0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UFont*                                       SmallFont;                                                // 0x04F8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UFont*                                       MediumFont;                                               // 0x0500(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UFont*                                       LargeFont;                                                // 0x0508(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UFont*                                       HugeFont;                                                 // 0x0510(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UFont*                                       NumberFont;                                               // 0x0518(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFontsCached;                                             // 0x0520(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0521(0x0007) MISSED OFFSET
	struct FText                                       ScoreMessageText;                                         // 0x0528(0x0018) (Edit, BlueprintVisible)
	float                                              WidgetOpacity;                                            // 0x0540(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0544(0x0004) MISSED OFFSET
	class UUTHUDWidget_Spectator*                      SpectatorMessageWidget;                                   // 0x0548(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UUTHUDWidget_ReplayTimeSlider*               ReplayTimeSliderWidget;                                   // 0x0550(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UUTHUDWidget_SpectatorSlideOut*              SpectatorSlideOutWidget;                                  // 0x0558(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UUTHUDWidgetMessage_KillIconMessages*        KillIconWidget;                                           // 0x0560(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UUTHUDWidgetAnnouncements*                   AnnouncementWidget;                                       // 0x0568(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ScoreboardKillFeedPosition;                               // 0x0570(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FEnemyDamageNumber>                  DamageNumbers;                                            // 0x0578(0x0010) (BlueprintVisible, ZeroConstructor)
	bool                                               bDrawDamageNumbers;                                       // 0x0588(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0589(0x0003) MISSED OFFSET
	float                                              LastPickupTime;                                           // 0x058C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LastKillTime;                                             // 0x0590(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                LastMultiKillCount;                                       // 0x0594(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LastFlagGrabTime;                                         // 0x0598(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x059C(0x0004) MISSED OFFSET
	class USoundBase*                                  KillSound;                                                // 0x05A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData06[0x8];                                       // 0x05A8(0x0008) MISSED OFFSET
	class UTexture2D*                                  DefaultCrosshairTex;                                      // 0x05B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  HUDAtlas;                                                 // 0x05B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  HUDAtlas3;                                                // 0x05C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  ScoreboardAtlas;                                          // 0x05C8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   TeamIconUV[0x4];                                          // 0x05D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LastConfirmedHitTime;                                     // 0x05F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                LastConfirmedHitDamage;                                   // 0x05F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               LastConfirmedHitWasAKill;                                 // 0x05F8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x7];                                       // 0x05F9(0x0007) MISSED OFFSET
	TArray<struct FDamageHudIndicator>                 DamageIndicators;                                         // 0x0600(0x0010) (ZeroConstructor)
	class UMaterialInterface*                          DamageScreenMat;                                          // 0x0610(0x0008) (ZeroConstructor, IsPlainOldData)
	class UMaterialInstanceDynamic*                    DamageScreenMID;                                          // 0x0618(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<struct FString>                             RequiredHudWidgetClasses;                                 // 0x0620(0x0010) (ZeroConstructor, Config)
	TArray<struct FString>                             SpectatorHudWidgetClasses;                                // 0x0630(0x0010) (ZeroConstructor, Config)
	unsigned char                                      bShowScores : 1;                                          // 0x0640(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bShowScoresWhileDead : 1;                                 // 0x0640(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bDrawMinimap : 1;                                         // 0x0640(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData08[0x3];                                       // 0x0641(0x0003) MISSED OFFSET
	float                                              MinimapScaleX;                                            // 0x0644(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  PlayerMinimapTexture;                                     // 0x0648(0x0008) (Edit, BlueprintVisible, ZeroConstructor, NoClear, IsPlainOldData)
	class UTexture2D*                                  SelectedPlayerTexture;                                    // 0x0650(0x0008) (Edit, BlueprintVisible, ZeroConstructor, NoClear, IsPlainOldData)
	struct FCanvasIcon                                 SpawnHelpTextBG;                                          // 0x0658(0x0018) (Edit, BlueprintVisible, NoClear)
	unsigned char                                      bForceScores : 1;                                         // 0x0670(0x0001) (BlueprintVisible)
	unsigned char                                      UnknownData09[0x3];                                       // 0x0671(0x0003) MISSED OFFSET
	bool                                               bShowUTHUD;                                               // 0x0674(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0xB];                                       // 0x0675(0x000B) MISSED OFFSET
	bool                                               bDisplayMatchSummary;                                     // 0x0680(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData11[0x3];                                       // 0x0681(0x0003) MISSED OFFSET
	float                                              MatchSummaryTime;                                         // 0x0684(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData12[0x8];                                       // 0x0688(0x0008) MISSED OFFSET
	bool                                               bHUDWeaponBarSettingChanged;                              // 0x0690(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData13[0x3];                                       // 0x0691(0x0003) MISSED OFFSET
	float                                              MiniMapIconAlpha;                                         // 0x0694(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MiniMapIconMuting;                                        // 0x0698(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData14[0x14];                                      // 0x069C(0x0014) MISSED OFFSET
	TArray<class AUTPlayerState*>                      Leaderboard;                                              // 0x06B0(0x0010) (ZeroConstructor)
	class UUTScoreboard*                               MyUTScoreboard;                                           // 0x06C0(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<class UTexture2D*>                          ELOBadges;                                                // 0x06C8(0x0010) (ZeroConstructor)
	TArray<class UTexture2D*>                          XPStars;                                                  // 0x06D8(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData15[0x10];                                      // 0x06E8(0x0010) MISSED OFFSET
	bool                                               bKeyMappingsSet;                                          // 0x06F8(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData16[0x7];                                       // 0x06F9(0x0007) MISSED OFFSET
	struct FText                                       RallyLabel;                                               // 0x0700(0x0018)
	struct FText                                       BoostLabel;                                               // 0x0718(0x0018)
	struct FText                                       GroupTauntLabel;                                          // 0x0730(0x0018)
	struct FText                                       TauntOneLabel;                                            // 0x0748(0x0018)
	struct FText                                       TauntTwoLabel;                                            // 0x0760(0x0018)
	struct FText                                       ShowScoresLabel;                                          // 0x0778(0x0018)
	unsigned char                                      UnknownData17[0x8];                                       // 0x0790(0x0008) MISSED OFFSET
	struct FText                                       TimerHours;                                               // 0x0798(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       TimerMinutes;                                             // 0x07B0(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       TimerSeconds;                                             // 0x07C8(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       SuffixFirst;                                              // 0x07E0(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       SuffixSecond;                                             // 0x07F8(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       SuffixThird;                                              // 0x0810(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       SuffixNth;                                                // 0x0828(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       BuildText;                                                // 0x0840(0x0018)
	struct FText                                       WarmupText;                                               // 0x0858(0x0018)
	struct FText                                       MatchHostText;                                            // 0x0870(0x0018)
	struct FText                                       HaveHostText;                                             // 0x0888(0x0018)
	struct FText                                       NeedFullText;                                             // 0x08A0(0x0018)
	float                                              BuildTextWidth;                                           // 0x08B8(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData18[0xC];                                       // 0x08BC(0x000C) MISSED OFFSET
	TMap<struct FName, class UUTCrosshair*>            Crosshairs;                                               // 0x08C8(0x0050) (ZeroConstructor)
	class UCanvasRenderTarget2D*                       MinimapTexture;                                           // 0x0918(0x0008) (ZeroConstructor, IsPlainOldData)
	class AActor*                                      LastHoveredActor;                                         // 0x0920(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LastHoveredActorChangeTime;                               // 0x0928(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData19[0x94];                                      // 0x092C(0x0094) MISSED OFFSET
	bool                                               bInvertMinimap;                                           // 0x09C0(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData20[0x7];                                       // 0x09C1(0x0007) MISSED OFFSET
	TArray<class UUTRadialMenu*>                       RadialMenus;                                              // 0x09C8(0x0010) (ZeroConstructor)
	class UUTRadialMenu_Coms*                          ComsMenu;                                                 // 0x09D8(0x0008) (ZeroConstructor, IsPlainOldData)
	class UUTRadialMenu_WeaponWheel*                   WeaponWheel;                                              // 0x09E0(0x0008) (ZeroConstructor, IsPlainOldData)
	class UUTRadialMenu_DropInventory*                 DropMenu;                                                 // 0x09E8(0x0008) (ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  CharacterPortraitAtlas;                                   // 0x09F0(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   TargetHUDImpulse;                                         // 0x09F8(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   CurrentHUDImpulse;                                        // 0x0A00(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData21[0x28];                                      // 0x0A08(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTHUD");
		return ptr;
	}


	void UpdateMinimapTexture(class UCanvas* C, int Width, int Height);
	void ToggleScoreboard(bool bShow);
	void ShowUTMenu();
	class UTexture2D* ResolveFlag(class AUTPlayerState* PS, struct FTextureUVs* UV);
	bool IsUMGWidgetActive(class UUTUMGHudWidget* TestWidget);
	bool GetUseWeaponColors();
	struct FName GetQuickStatsType();
	bool GetQuickStatsHidden();
	float GetQuickStatsForegroundAlpha();
	float GetQuickStatsDistance();
	float GetQuickStatScaleOverride();
	float GetQuickStatsBackgroundAlpha();
	bool GetQuickInfoHidden();
	bool GetPlayKillSoundMsg();
	TEnumAsByte<EInputMode> GetInputMode();
	float GetHUDWidgetWeaponBarScaleOverride();
	float GetHUDWidgetWeaponbarInactiveOpacity();
	float GetHUDWidgetWeaponBarInactiveIconOpacity();
	float GetHUDWidgetWeaponBarEmptyOpacity();
	float GetHUDWidgetSlateOpacity();
	float GetHUDWidgetScaleOverride();
	float GetHUDWidgetOpacity();
	float GetHUDWidgetBorderOpacity();
	float GetHUDMessageScaleOverride();
	bool GetHealthArcShown();
	float GetHealthArcRadius();
	bool GetDrawHUDKillIconMsg();
	bool GetDrawChatKillMsg();
	bool GetDrawCenteredKillMsg();
	class UUTCrosshair* GetCrosshairForWeapon(const struct FName& WeaponCustomizationTag, struct FWeaponCustomizationInfo* outWeaponCustomizationInfo);
	void DrawMinimapIcon(class UTexture2D* Texture, const struct FVector2D& Pos, const struct FVector2D& DrawSize, const struct FVector2D& UV, const struct FVector2D& UVL, const struct FLinearColor& DrawColor, bool bDropShadow);
	void DrawMinimap(const struct FColor& DrawColor, float MapSize, const struct FVector2D& DrawPos);
	void DeactivateUMGHudWidget(const struct FString& UMGHudWidgetClassName);
	void DeactivateActualUMGHudWidget(class UUTUMGHudWidget* WidgetToDeactivate);
	void ClientRestart();
	void ClearAllUMGWidgets();
	void BeforeFirstFrame();
	class UUTHUDWidget* AddHudWidget(class UClass* NewWidgetClass);
	class UUTUMGHudWidget* ActivateUMGHudWidget(const struct FString& UMGHudWidgetClassName, bool bUnique);
	void ActivateActualUMGHudWidget(class UUTUMGHudWidget* WidgetToActivate);
};


// Class UnrealTournament.UTFlagRunHUD
// 0x0190 (0x0BC0 - 0x0A30)
class AUTFlagRunHUD : public AUTHUD
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0A30(0x0010) MISSED OFFSET
	struct FCanvasIcon                                 RedTeamIcon;                                              // 0x0A40(0x0018) (Edit, BlueprintVisible, NoClear)
	struct FCanvasIcon                                 BlueTeamIcon;                                             // 0x0A58(0x0018) (Edit, BlueprintVisible, NoClear)
	struct FCanvasIcon                                 RedTeamOverlay;                                           // 0x0A70(0x0018) (Edit, BlueprintVisible, NoClear)
	struct FCanvasIcon                                 BlueTeamOverlay;                                          // 0x0A88(0x0018) (Edit, BlueprintVisible, NoClear)
	struct FText                                       DefendersMustStop;                                        // 0x0AA0(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       DefendersMustHold;                                        // 0x0AB8(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       AttackersMustScore;                                       // 0x0AD0(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       UnhandledCondition;                                       // 0x0AE8(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       AttackersMustScoreWin;                                    // 0x0B00(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       AttackersMustScoreTime;                                   // 0x0B18(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       AttackersMustScoreTimeWin;                                // 0x0B30(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       AttackersMustScoreShort;                                  // 0x0B48(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       BlueTeamText;                                             // 0x0B60(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       RedTeamText;                                              // 0x0B78(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       MustScoreText;                                            // 0x0B90(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                               bUseShortWinMessage;                                      // 0x0BA8(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x17];                                      // 0x0BA9(0x0017) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTFlagRunHUD");
		return ptr;
	}

};


// Class UnrealTournament.UTRadialMenu
// 0x0528 (0x0610 - 0x00E8)
class UUTRadialMenu : public UUTHUDWidget
{
public:
	struct FHUDRenderObject_Texture                    WeaponIconTemplate;                                       // 0x00E8(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    InnerCircleTemplate;                                      // 0x0168(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    SegmentTemplate;                                          // 0x01E8(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    HighlightedSegmentTemplate;                               // 0x0268(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    IndicatorTemplate;                                        // 0x02E8(0x0080) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0368(0x0008) MISSED OFFSET
	struct FHUDRenderObject_Text                       CaptionTemplate;                                          // 0x0370(0x00F0) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    CursorTemplate;                                           // 0x0460(0x0080) (Edit, BlueprintVisible)
	float                                              CancelDistance;                                           // 0x04E0(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3C];                                      // 0x04E4(0x003C) MISSED OFFSET
	struct FHUDRenderObject_Text                       DebugTextTemplate;                                        // 0x0520(0x00F0) (Edit, BlueprintVisible)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTRadialMenu");
		return ptr;
	}

};


// Class UnrealTournament.UTRadialMenu_BoostPowerup
// 0x0010 (0x0620 - 0x0610)
class UUTRadialMenu_BoostPowerup : public UUTRadialMenu
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0610(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTRadialMenu_BoostPowerup");
		return ptr;
	}

};


// Class UnrealTournament.UTFlagRunPvEHUD
// 0x0020 (0x0BE0 - 0x0BC0)
class AUTFlagRunPvEHUD : public AUTFlagRunHUD
{
public:
	class UMaterialInterface*                          ChargeIndicatorMat;                                       // 0x0BC0(0x0008) (ZeroConstructor, IsPlainOldData)
	class UMaterialInstanceDynamic*                    ChargeIndicatorMID;                                       // 0x0BC8(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0BD0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTFlagRunPvEHUD");
		return ptr;
	}

};


// Class UnrealTournament.UTHUD_CastingGuide
// 0x0000 (0x0A30 - 0x0A30)
class AUTHUD_CastingGuide : public AUTHUD
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTHUD_CastingGuide");
		return ptr;
	}

};


// Class UnrealTournament.UTHUD_CTF
// 0x0000 (0x0A30 - 0x0A30)
class AUTHUD_CTF : public AUTHUD
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTHUD_CTF");
		return ptr;
	}

};


// Class UnrealTournament.UTHUD_DM
// 0x0000 (0x0A30 - 0x0A30)
class AUTHUD_DM : public AUTHUD
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTHUD_DM");
		return ptr;
	}

};


// Class UnrealTournament.UTHUD_TeamDM
// 0x0000 (0x0A30 - 0x0A30)
class AUTHUD_TeamDM : public AUTHUD_DM
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTHUD_TeamDM");
		return ptr;
	}

};


// Class UnrealTournament.UTHUD_Duel
// 0x0000 (0x0A30 - 0x0A30)
class AUTHUD_Duel : public AUTHUD_TeamDM
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTHUD_Duel");
		return ptr;
	}

};


// Class UnrealTournament.UTHUD_Showdown
// 0x00E0 (0x0B10 - 0x0A30)
class AUTHUD_Showdown : public AUTHUD_TeamDM
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0A30(0x0010) MISSED OFFSET
	struct FCanvasIcon                                 PlayerStartIcon;                                          // 0x0A40(0x0018) (Edit, BlueprintVisible, NoClear)
	class UTexture2D*                                  SelectedSpawnTexture;                                     // 0x0A58(0x0008) (Edit, BlueprintVisible, ZeroConstructor, NoClear, IsPlainOldData)
	class USoundBase*                                  SpawnSelectSound;                                         // 0x0A60(0x0008) (ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  OtherSelectSound;                                         // 0x0A68(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0A70(0x0008) MISSED OFFSET
	class AUTPlayerState*                              LastPlayerSelect;                                         // 0x0A78(0x0008) (ZeroConstructor, IsPlainOldData)
	class USceneCaptureComponent2D*                    SpawnPreviewCapture;                                      // 0x0A80(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class APlayerStart*                                PreviewPlayerStart;                                       // 0x0A88(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0A90(0x0008) MISSED OFFSET
	class USoundBase*                                  MapOpenSound;                                             // 0x0A98(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  TeamKillSound;                                            // 0x0AA0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  TeamVictimSound;                                          // 0x0AA8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  TeamLMSVictimSound;                                       // 0x0AB0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x20];                                      // 0x0AB8(0x0020) MISSED OFFSET
	struct FCanvasIcon                                 AmmoPickupIndicator;                                      // 0x0AD8(0x0018) (Edit, BlueprintVisible, NoClear)
	unsigned char                                      UnknownData04[0x20];                                      // 0x0AF0(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTHUD_Showdown");
		return ptr;
	}

};


// Class UnrealTournament.UTHUD_InstantReplay
// 0x0010 (0x0A40 - 0x0A30)
class AUTHUD_InstantReplay : public AUTHUD
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0A30(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTHUD_InstantReplay");
		return ptr;
	}

};


// Class UnrealTournament.UTLobbyHUD
// 0x0000 (0x0A30 - 0x0A30)
class AUTLobbyHUD : public AUTHUD
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTLobbyHUD");
		return ptr;
	}

};


// Class UnrealTournament.UTHUDWidget_CTFFlagStatus
// 0x07A8 (0x0890 - 0x00E8)
class UUTHUDWidget_CTFFlagStatus : public UUTHUDWidget
{
public:
	struct FText                                       YouHaveFlagText;                                          // 0x00E8(0x0018) (Edit, BlueprintVisible)
	struct FText                                       YouHaveFlagTextAlt;                                       // 0x0100(0x0018) (Edit, BlueprintVisible)
	struct FText                                       EnemyHasFlagText;                                         // 0x0118(0x0018) (Edit, BlueprintVisible)
	struct FText                                       BothFlagsText;                                            // 0x0130(0x0018) (Edit, BlueprintVisible)
	float                                              AnimationAlpha;                                           // 0x0148(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x014C(0x0004) MISSED OFFSET
	struct FHUDRenderObject_Texture                    CircleTemplate;                                           // 0x0150(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    CircleBorderTemplate;                                     // 0x01D0(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Text                       FlagHolderNameTemplate;                                   // 0x0250(0x00F0) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    FlagIconTemplate;                                         // 0x0340(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    DroppedIconTemplate;                                      // 0x03C0(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    TakenIconTemplate;                                        // 0x0440(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    FlagGoneIconTemplate;                                     // 0x04C0(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    CameraIconTemplate;                                       // 0x0540(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Text                       FlagStatusText;                                           // 0x05C0(0x00F0) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    ArrowTemplate;                                            // 0x06B0(0x0080) (Edit, BlueprintVisible)
	float                                              InWorldAlpha;                                             // 0x0730(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              StatusScale;                                              // 0x0734(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              EnemyFlagStartDrawTime;                                   // 0x0738(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bEnemyFlagWasDrawn;                                       // 0x073C(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bStatusDir;                                               // 0x073D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x073E(0x0002) MISSED OFFSET
	float                                              MaxIconScale;                                             // 0x0740(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0744(0x0004) MISSED OFFSET
	TArray<struct FVector2D>                           TeamPositions;                                            // 0x0748(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0758(0x0008) MISSED OFFSET
	struct FHUDRenderObject_Text                       RallyText;                                                // 0x0760(0x00F0) (Edit, BlueprintVisible)
	bool                                               bAlwaysDrawFlagHolderName;                                // 0x0850(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0851(0x0003) MISSED OFFSET
	float                                              TopEdgePadding;                                           // 0x0854(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BottomEdgePadding;                                        // 0x0858(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LeftEdgePadding;                                          // 0x085C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RightEdgePadding;                                         // 0x0860(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x0864(0x0004) MISSED OFFSET
	struct FName                                       OldFlagState[0x2];                                        // 0x0868(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              StatusChangedScale;                                       // 0x0878(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              CurrentStatusScale[0x2];                                  // 0x087C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              ScaleDownTime;                                            // 0x0884(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x8];                                       // 0x0888(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTHUDWidget_CTFFlagStatus");
		return ptr;
	}

};


// Class UnrealTournament.UTHUDWidget_DMPlayerLeaderboard
// 0x04B8 (0x05A0 - 0x00E8)
class UUTHUDWidget_DMPlayerLeaderboard : public UUTHUDWidget
{
public:
	TArray<struct FHUDRenderObject_Texture>            Header;                                                   // 0x00E8(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FHUDRenderObject_Texture>            Bar;                                                      // 0x00F8(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FHUDRenderObject_Texture>            SpreadBar;                                                // 0x0108(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FHUDRenderObject_Texture                    Medal;                                                    // 0x0118(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    UpIcon;                                                   // 0x0198(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    DownIcon;                                                 // 0x0218(0x0080) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0298(0x0008) MISSED OFFSET
	struct FHUDRenderObject_Text                       PlaceTextTemplate;                                        // 0x02A0(0x00F0) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Text                       NameTextTemplate;                                         // 0x0390(0x00F0) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Text                       SpreadTextTemplate;                                       // 0x0480(0x00F0) (Edit, BlueprintVisible)
	struct FLinearColor                                OwnerNameColor;                                           // 0x0570(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FText                                       SpreadText;                                               // 0x0580(0x0018) (Edit, BlueprintVisible)
	float                                              BarWidth;                                                 // 0x0598(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x059C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTHUDWidget_DMPlayerLeaderboard");
		return ptr;
	}

};


// Class UnrealTournament.UTHUDWidget_FlagRunStatus
// 0x08D8 (0x09C0 - 0x00E8)
class UUTHUDWidget_FlagRunStatus : public UUTHUDWidget
{
public:
	struct FHUDRenderObject_Texture                    RedTeamIconTemplate;                                      // 0x00E8(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    BlueTeamIconTemplate;                                     // 0x0168(0x0080) (Edit, BlueprintVisible)
	float                                              LineGlow;                                                 // 0x01E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              NormalLineBrightness;                                     // 0x01EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PulseLength;                                              // 0x01F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LastFlagStatusChange;                                     // 0x01F4(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FName                                       LastFlagStatus;                                           // 0x01F8(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FText                                       DeliveryPointText;                                        // 0x0200(0x0018)
	struct FText                                       YouHaveFlagText;                                          // 0x0218(0x0018) (Edit, BlueprintVisible)
	struct FText                                       YouHaveFlagTextAlt;                                       // 0x0230(0x0018) (Edit, BlueprintVisible)
	struct FText                                       EnemyHasFlagText;                                         // 0x0248(0x0018) (Edit, BlueprintVisible)
	struct FText                                       BothFlagsText;                                            // 0x0260(0x0018) (Edit, BlueprintVisible)
	float                                              AnimationAlpha;                                           // 0x0278(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x027C(0x0004) MISSED OFFSET
	struct FHUDRenderObject_Texture                    CircleTemplate;                                           // 0x0280(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    CircleBorderTemplate;                                     // 0x0300(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Text                       FlagHolderNameTemplate;                                   // 0x0380(0x00F0) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    FlagIconTemplate;                                         // 0x0470(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    DroppedIconTemplate;                                      // 0x04F0(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    TakenIconTemplate;                                        // 0x0570(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    FlagGoneIconTemplate;                                     // 0x05F0(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    CameraIconTemplate;                                       // 0x0670(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Text                       FlagStatusText;                                           // 0x06F0(0x00F0) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    ArrowTemplate;                                            // 0x07E0(0x0080) (Edit, BlueprintVisible)
	float                                              InWorldAlpha;                                             // 0x0860(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              StatusScale;                                              // 0x0864(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              EnemyFlagStartDrawTime;                                   // 0x0868(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bEnemyFlagWasDrawn;                                       // 0x086C(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bStatusDir;                                               // 0x086D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x086E(0x0002) MISSED OFFSET
	float                                              MaxIconScale;                                             // 0x0870(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0874(0x0004) MISSED OFFSET
	TArray<struct FVector2D>                           TeamPositions;                                            // 0x0878(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0888(0x0008) MISSED OFFSET
	struct FHUDRenderObject_Text                       RallyText;                                                // 0x0890(0x00F0) (Edit, BlueprintVisible)
	bool                                               bAlwaysDrawFlagHolderName;                                // 0x0980(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0981(0x0003) MISSED OFFSET
	float                                              TopEdgePadding;                                           // 0x0984(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BottomEdgePadding;                                        // 0x0988(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LeftEdgePadding;                                          // 0x098C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RightEdgePadding;                                         // 0x0990(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x0994(0x0004) MISSED OFFSET
	struct FName                                       OldFlagState[0x2];                                        // 0x0998(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              StatusChangedScale;                                       // 0x09A8(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              CurrentStatusScale[0x2];                                  // 0x09AC(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              ScaleDownTime;                                            // 0x09B4(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x8];                                       // 0x09B8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTHUDWidget_FlagRunStatus");
		return ptr;
	}

};


// Class UnrealTournament.UTHUDWidget_GameClock
// 0x0848 (0x0930 - 0x00E8)
class UUTHUDWidget_GameClock : public UUTHUDWidget
{
public:
	struct FHUDRenderObject_Texture                    BackgroundSlate;                                          // 0x00E8(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    BackgroundBorder;                                         // 0x0168(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    Skull;                                                    // 0x01E8(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    ClockBackground;                                          // 0x0268(0x0080) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x8];                                       // 0x02E8(0x0008) MISSED OFFSET
	struct FHUDRenderObject_Text                       PlayerScoreText;                                          // 0x02F0(0x00F0) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Text                       ClockText;                                                // 0x03E0(0x00F0) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Text                       PlayerRankText;                                           // 0x04D0(0x00F0) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Text                       PlayerRankThText;                                         // 0x05C0(0x00F0) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Text                       NumPlayersText;                                           // 0x06B0(0x00F0) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    GameStateBackground;                                      // 0x07A0(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Text                       GameStateText;                                            // 0x0820(0x00F0) (Edit, BlueprintVisible)
	float                                              AltClockScale;                                            // 0x0910(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0914(0x0004) MISSED OFFSET
	struct FText                                       NumPlayersDisplay;                                        // 0x0918(0x0018) (Edit, BlueprintVisible)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTHUDWidget_GameClock");
		return ptr;
	}


	struct FText GetPlayerScoreText();
	struct FText GetPlayerRankThText();
	struct FText GetPlayerRankText();
	struct FText GetNumPlayersText();
	struct FText GetClockText();
};


// Class UnrealTournament.UTHUDWidget_NetInfo
// 0x0508 (0x05F0 - 0x00E8)
class UUTHUDWidget_NetInfo : public UUTHUDWidget
{
public:
	float                                              DataColumnX;                                              // 0x00E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ValueHighlight[0x3];                                      // 0x00EC(0x0010) (ZeroConstructor, IsPlainOldData)
	int                                                CurrentBucket;                                            // 0x011C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                BucketIndex;                                              // 0x0120(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              PingHistory[0x12C];                                       // 0x0124(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MaxDeviation;                                             // 0x05D4(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                NumPingsRcvd;                                             // 0x05D8(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                PacketsIn;                                                // 0x05DC(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                PacketsOut;                                               // 0x05E0(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                LastPacketsIn;                                            // 0x05E4(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                LastPacketsOut;                                           // 0x05E8(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x05EC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTHUDWidget_NetInfo");
		return ptr;
	}

};


// Class UnrealTournament.UTHUDWidget_Paperdoll
// 0x07F8 (0x08E0 - 0x00E8)
class UUTHUDWidget_Paperdoll : public UUTHUDWidget
{
public:
	struct FHUDRenderObject_Texture                    HealthBackground;                                         // 0x00E8(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    ArmorBackground;                                          // 0x0168(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    FlagBackground;                                           // 0x01E8(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    ShieldOverlay;                                            // 0x0268(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    HealthIcon;                                               // 0x02E8(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    ArmorIcon;                                                // 0x0368(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    FlagIcon;                                                 // 0x03E8(0x0080) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0468(0x0008) MISSED OFFSET
	struct FHUDRenderObject_Text                       HealthText;                                               // 0x0470(0x00F0) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Text                       ArmorText;                                                // 0x0560(0x00F0) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Text                       FlagText;                                                 // 0x0650(0x00F0) (Edit, BlueprintVisible)
	float                                              HealthFlashTime;                                          // 0x0740(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                HealthPositiveFlashColor;                                 // 0x0744(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                HealthNegativeFlashColor;                                 // 0x0754(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ArmorFlashTime;                                           // 0x0764(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ArmorPositiveFlashColor;                                  // 0x0768(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ArmorNegativeFlashColor;                                  // 0x0778(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FTextureUVs                                 FlagHolderIconUVs;                                        // 0x0788(0x0010) (Edit, BlueprintVisible)
	struct FTextureUVs                                 RallyIconUVs;                                             // 0x0798(0x0010) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    DetectedIcon;                                             // 0x07A8(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    CombatIcon;                                               // 0x0828(0x0080) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData01[0x38];                                      // 0x08A8(0x0038) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTHUDWidget_Paperdoll");
		return ptr;
	}

};


// Class UnrealTournament.UTHUDWidget_Powerups
// 0x01B8 (0x02A0 - 0x00E8)
class UUTHUDWidget_Powerups : public UUTHUDWidget
{
public:
	TArray<struct FHUDRenderObject_Texture>            LeftTexture;                                              // 0x00E8(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FHUDRenderObject_Texture>            TileTexture;                                              // 0x00F8(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FHUDRenderObject_Texture>            RightTexture;                                             // 0x0108(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FHUDRenderObject_Texture                    IconTexture;                                              // 0x0118(0x0080) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0198(0x0008) MISSED OFFSET
	struct FHUDRenderObject_Text                       TimeText;                                                 // 0x01A0(0x00F0) (Edit, BlueprintVisible)
	float                                              ScaleFactor;                                              // 0x0290(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x0294(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTHUDWidget_Powerups");
		return ptr;
	}

};


// Class UnrealTournament.UTHUDWidget_QuickStats
// 0x1048 (0x1130 - 0x00E8)
class UUTHUDWidget_QuickStats : public UUTHUDWidget
{
public:
	TArray<struct FQStatLayoutInfo>                    Layouts;                                                  // 0x00E8(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FHUDRenderObject_Texture                    HorizontalBackground;                                     // 0x00F8(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    VerticalBackground;                                       // 0x0178(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    HorizontalHighlight;                                      // 0x01F8(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    VerticalHighlight;                                        // 0x0278(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    HealthIcon;                                               // 0x02F8(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    ArmorIcon;                                                // 0x0378(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    ArmorIconWithShieldBelt;                                  // 0x03F8(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    AmmoIcon;                                                 // 0x0478(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    InfiniteIcon;                                             // 0x04F8(0x0080) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0578(0x0008) MISSED OFFSET
	struct FHUDRenderObject_Text                       TextTemplate;                                             // 0x0580(0x00F0) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    FlagIcon;                                                 // 0x0670(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    BootsIcon;                                                // 0x06F0(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    BoostIcon;                                                // 0x0770(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    LabelBackgroundIcon;                                      // 0x07F0(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    DetectedIcon;                                             // 0x0870(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    CombatIcon;                                               // 0x08F0(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    RallyFlagIcon;                                            // 0x0970(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    PowerupIcon;                                              // 0x09F0(0x0080)
	struct FHUDRenderObject_Texture                    HealthPip;                                                // 0x0A70(0x0080) (Edit, BlueprintVisible)
	float                                              AngleDelta;                                               // 0x0AF0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PipSize;                                                  // 0x0AF4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PipPopTime;                                               // 0x0AF8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                LastHealth;                                               // 0x0AFC(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                LastArmor;                                                // 0x0B00(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              HealthPipChange[0x14];                                    // 0x0B04(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              ArmorPipChange[0x14];                                     // 0x0B54(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x554];                                     // 0x0BA4(0x0554) MISSED OFFSET
	class AUTWeapon*                                   LastWeapon;                                               // 0x10F8(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x30];                                      // 0x1100(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTHUDWidget_QuickStats");
		return ptr;
	}

};


// Class UnrealTournament.UTHUDWidget_RespawnChoice
// 0x0018 (0x0100 - 0x00E8)
class UUTHUDWidget_RespawnChoice : public UUTHUDWidget
{
public:
	class USceneCaptureComponent2D*                    RespawnChoiceACaptureComponent;                           // 0x00E8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USceneCaptureComponent2D*                    RespawnChoiceBCaptureComponent;                           // 0x00F0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              LastRespawnCaptureTime;                                   // 0x00F8(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bHasValidRespawnCapture;                                  // 0x00FC(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00FD(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTHUDWidget_RespawnChoice");
		return ptr;
	}

};


// Class UnrealTournament.UTHUDWidget_Spectator
// 0x0010 (0x00F8 - 0x00E8)
class UUTHUDWidget_Spectator : public UUTHUDWidget
{
public:
	class AUTPlayerState*                              LastViewedPS;                                             // 0x00E8(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x00F0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTHUDWidget_Spectator");
		return ptr;
	}

};


// Class UnrealTournament.UTHUDWidget_SpectatorShowdown
// 0x0048 (0x0140 - 0x00F8)
class UUTHUDWidget_SpectatorShowdown : public UUTHUDWidget_Spectator
{
public:
	struct FText                                       SelectingSpawnText;                                       // 0x00F8(0x0018) (Edit, BlueprintVisible)
	struct FText                                       RoundBeginsText;                                          // 0x0110(0x0018) (Edit, BlueprintVisible)
	struct FText                                       PickingStartsText;                                        // 0x0128(0x0018) (Edit, BlueprintVisible)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTHUDWidget_SpectatorShowdown");
		return ptr;
	}

};


// Class UnrealTournament.UTHUDWidget_SpectatorSlideOut
// 0x0220 (0x0308 - 0x00E8)
class UUTHUDWidget_SpectatorSlideOut : public UUTHUDWidget
{
public:
	float                                              CellHeight;                                               // 0x00E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00EC(0x0004) MISSED OFFSET
	class UFont*                                       SlideOutFont;                                             // 0x00F0(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00F8(0x0004) MISSED OFFSET
	float                                              SlideSpeed;                                               // 0x00FC(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              ArrowSize;                                                // 0x0100(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CamTypeButtonStart;                                       // 0x0104(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CamTypeButtonWidth;                                       // 0x0108(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FlagX;                                                    // 0x010C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ColumnHeaderPlayerX;                                      // 0x0110(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ColumnHeaderScoreX;                                       // 0x0114(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ColumnHeaderArmor;                                        // 0x0118(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ColumnY;                                                  // 0x011C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ActionHighlightTime;                                      // 0x0120(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0124(0x0004) MISSED OFFSET
	struct FText                                       TerminatedNotification;                                   // 0x0128(0x0018) (Edit, BlueprintVisible)
	struct FCanvasIcon                                 UDamageHUDIcon;                                           // 0x0140(0x0018) (Edit, DisableEditOnInstance)
	struct FCanvasIcon                                 HealthIcon;                                               // 0x0158(0x0018) (Edit, DisableEditOnInstance)
	struct FCanvasIcon                                 ArmorIcon;                                                // 0x0170(0x0018) (Edit, DisableEditOnInstance)
	struct FCanvasIcon                                 FlagIcon;                                                 // 0x0188(0x0018) (Edit, DisableEditOnInstance)
	struct FName                                       DemoRestartBind;                                          // 0x01A0(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FName                                       DemoLiveBind;                                             // 0x01A8(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FName                                       DemoRewindBind;                                           // 0x01B0(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FName                                       DemoFastForwardBind;                                      // 0x01B8(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FName                                       DemoPauseBind;                                            // 0x01C0(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FString                                     CameraString[0xA];                                        // 0x01C8(0x0010) (ZeroConstructor)
	int                                                NumCameras;                                               // 0x0268(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                NumCamBinds;                                              // 0x026C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                DrawnCamBinds;                                            // 0x0270(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bBalanceCamBinds;                                         // 0x0274(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bCamerasInitialized;                                      // 0x0275(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x0276(0x0002) MISSED OFFSET
	float                                              MouseOverOpacity;                                         // 0x0278(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              SelectedOpacity;                                          // 0x027C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              CameraBindWidth;                                          // 0x0280(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              PowerupWidth;                                             // 0x0284(0x0004) (ZeroConstructor, IsPlainOldData)
	class AUTPlayerState*                              SelectedPlayer;                                           // 0x0288(0x0008) (ZeroConstructor, IsPlainOldData)
	bool                                               bShowingStats;                                            // 0x0290(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0291(0x0007) MISSED OFFSET
	class UTexture2D*                                  TextureAtlas;                                             // 0x0298(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  FlagAtlas;                                                // 0x02A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  WeaponAtlas;                                              // 0x02A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<class AUTPickup*>                           PowerupList;                                              // 0x02B0(0x0010) (ZeroConstructor)
	bool                                               bPowerupListInitialized;                                  // 0x02C0(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x02C1(0x0003) MISSED OFFSET
	float                                              KillsColumn;                                              // 0x02C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DeathsColumn;                                             // 0x02C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ShotsColumn;                                              // 0x02CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AccuracyColumn;                                           // 0x02D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x02D4(0x0004) MISSED OFFSET
	TArray<class AUTWeapon*>                           StatsWeapons;                                             // 0x02D8(0x0010) (ZeroConstructor)
	int                                                BestWeaponIndex;                                          // 0x02E8(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x1C];                                      // 0x02EC(0x001C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTHUDWidget_SpectatorSlideOut");
		return ptr;
	}

};


// Class UnrealTournament.UTHUDWidget_TeamGameClock
// 0x08B8 (0x09A0 - 0x00E8)
class UUTHUDWidget_TeamGameClock : public UUTHUDWidget
{
public:
	struct FHUDRenderObject_Texture                    BackgroundSlate;                                          // 0x00E8(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    BackgroundBorder;                                         // 0x0168(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    RedTeamLogo;                                              // 0x01E8(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    RedTeamBanner;                                            // 0x0268(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    BlueTeamLogo;                                             // 0x02E8(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    BlueTeamBanner;                                           // 0x0368(0x0080) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x8];                                       // 0x03E8(0x0008) MISSED OFFSET
	struct FHUDRenderObject_Text                       RedScoreText;                                             // 0x03F0(0x00F0) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Text                       BlueScoreText;                                            // 0x04E0(0x00F0) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Text                       RoleText;                                                 // 0x05D0(0x00F0) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Text                       TeamNameText;                                             // 0x06C0(0x00F0) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Text                       ClockText;                                                // 0x07B0(0x00F0) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Text                       GameStateText;                                            // 0x08A0(0x00F0) (Edit, BlueprintVisible)
	float                                              AltClockScale;                                            // 0x0990(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x0994(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTHUDWidget_TeamGameClock");
		return ptr;
	}


	struct FText GetRedScoreText();
	struct FText GetClockText();
	struct FText GetBlueScoreText();
};


// Class UnrealTournament.UTHUDWidget_WeaponBar
// 0x03A8 (0x0490 - 0x00E8)
class UUTHUDWidget_WeaponBar : public UUTHUDWidget
{
public:
	TArray<struct FWeaponGroupInfo>                    KnownWeaponMap;                                           // 0x00E8(0x0010) (ZeroConstructor)
	struct FVector2D                                   VerticalPosition;                                         // 0x00F8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   VerticalScreenPosition;                                   // 0x0100(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   HorizontalPosition;                                       // 0x0108(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   HorizontalScreenPosition;                                 // 0x0110(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   MaxSize;                                                  // 0x0118(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   AmmoBarSizePct;                                           // 0x0120(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0128(0x0008) MISSED OFFSET
	struct FHUDRenderObject_Text                       GroupText;                                                // 0x0130(0x00F0) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    WeaponIcon;                                               // 0x0220(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    CellBackground;                                           // 0x02A0(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    AmmoBarBackground;                                        // 0x0320(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    AmmoBarFill;                                              // 0x03A0(0x0080) (Edit, BlueprintVisible)
	float                                              SelectedAnimRate;                                         // 0x0420(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SelectedOpacity;                                          // 0x0424(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ActiveOpacity;                                            // 0x0428(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              InactiveOpacity;                                          // 0x042C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  DefaultWeaponIconAtlas;                                   // 0x0430(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x48];                                      // 0x0438(0x0048) MISSED OFFSET
	class AUTWeapon*                                   LastSelectedWeapon;                                       // 0x0480(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0488(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTHUDWidget_WeaponBar");
		return ptr;
	}

};


// Class UnrealTournament.UTHUDWidget_WeaponCrosshair
// 0x0008 (0x00F0 - 0x00E8)
class UUTHUDWidget_WeaponCrosshair : public UUTHUDWidget
{
public:
	class AUTWeapon*                                   LastWeapon;                                               // 0x00E8(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTHUDWidget_WeaponCrosshair");
		return ptr;
	}

};


// Class UnrealTournament.UTHUDWidget_WeaponInfo
// 0x0238 (0x0320 - 0x00E8)
class UUTHUDWidget_WeaponInfo : public UUTHUDWidget
{
public:
	struct FHUDRenderObject_Texture                    BackgroundSlate;                                          // 0x00E8(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    BackgroundBorder;                                         // 0x0168(0x0080) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x8];                                       // 0x01E8(0x0008) MISSED OFFSET
	struct FHUDRenderObject_Text                       AmmoText;                                                 // 0x01F0(0x00F0) (Edit, BlueprintVisible)
	float                                              AmmoFlashTime;                                            // 0x02E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                AmmoFlashColor;                                           // 0x02E4(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                WeaponChangeFlashColor;                                   // 0x02F4(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x0304(0x000C) MISSED OFFSET
	class AUTWeapon*                                   LastWeapon;                                               // 0x0310(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0318(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTHUDWidget_WeaponInfo");
		return ptr;
	}


	struct FText GetAmmoAmount();
};


// Class UnrealTournament.UTHUDWidgetMessage
// 0x0080 (0x0168 - 0x00E8)
class UUTHUDWidgetMessage : public UUTHUDWidget
{
public:
	struct FName                                       ManagedMessageArea;                                       // 0x00E8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bOutlinedText : 1;                                        // 0x00F0(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00F1(0x0003) MISSED OFFSET
	struct FLinearColor                                OutlineColor;                                             // 0x00F4(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bShadowedText : 1;                                        // 0x0104(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0105(0x0003) MISSED OFFSET
	struct FLinearColor                                ShadowColor;                                              // 0x0108(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   LargeShadowDirection;                                     // 0x0118(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   SmallShadowDirection;                                     // 0x0120(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ScaleInDirection;                                         // 0x0128(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FadeTime;                                                 // 0x012C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FText                                       CombinedEmphasisText;                                     // 0x0130(0x0018)
	int                                                CombinedMessageIndex;                                     // 0x0148(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x014C(0x0004) MISSED OFFSET
	TArray<struct FLocalizedMessageData>               MessageQueue;                                             // 0x0150(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                NumVisibleLines;                                          // 0x0160(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0164(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTHUDWidgetMessage");
		return ptr;
	}


	void AgeMessages(float DeltaTime);
};


// Class UnrealTournament.UTHUDWidgetAnnouncements
// 0x0028 (0x0190 - 0x0168)
class UUTHUDWidgetAnnouncements : public UUTHUDWidgetMessage
{
public:
	TArray<struct FAnnouncementSlot>                   Slots;                                                    // 0x0168(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FLinearColor                                EmphasisOutlineColor;                                     // 0x0178(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              EmphasisScaling;                                          // 0x0188(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PaddingBetweenTextAndDamageIcon;                          // 0x018C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTHUDWidgetAnnouncements");
		return ptr;
	}

};


// Class UnrealTournament.UTHUDWidgetMessage_ConsoleMessages
// 0x0000 (0x0168 - 0x0168)
class UUTHUDWidgetMessage_ConsoleMessages : public UUTHUDWidgetMessage
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTHUDWidgetMessage_ConsoleMessages");
		return ptr;
	}

};


// Class UnrealTournament.UTHUDWidgetMessage_KillIconMessages
// 0x01B0 (0x0318 - 0x0168)
class UUTHUDWidgetMessage_KillIconMessages : public UUTHUDWidgetMessage
{
public:
	struct FHUDRenderObject_Texture                    Background;                                               // 0x0168(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    LocalKillerBG;                                            // 0x01E8(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    LocalVictimBG;                                            // 0x0268(0x0080) (Edit, BlueprintVisible)
	float                                              MessageHeight;                                            // 0x02E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MessagePadding;                                           // 0x02EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              IconHeight;                                               // 0x02F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ColumnPadding;                                            // 0x02F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FText                                       RewardMessageText;                                        // 0x02F8(0x0018) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0310(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTHUDWidgetMessage_KillIconMessages");
		return ptr;
	}

};


// Class UnrealTournament.UTHUDWidgetMessage_VoiceChatStatus
// 0x0000 (0x0168 - 0x0168)
class UUTHUDWidgetMessage_VoiceChatStatus : public UUTHUDWidgetMessage
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTHUDWidgetMessage_VoiceChatStatus");
		return ptr;
	}

};


// Class UnrealTournament.UTRadialMenu_Coms
// 0x0610 (0x0C20 - 0x0610)
class UUTRadialMenu_Coms : public UUTRadialMenu
{
public:
	struct FHUDRenderObject_Texture                    YesNoTemplate;                                            // 0x0610(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    HighlightedYesTemplate;                                   // 0x0690(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    HighlightedNoTemplate;                                    // 0x0710(0x0080) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Texture                    IconTemplate;                                             // 0x0790(0x0080) (Edit, BlueprintVisible)
	TArray<struct FTextureUVs>                         IconUVs;                                                  // 0x0810(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FHUDRenderObject_Text                       YesNoTextTemplate;                                        // 0x0820(0x00F0) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Text                       ToolTipTemplate;                                          // 0x0910(0x00F0) (Edit, BlueprintVisible)
	struct FHUDRenderObject_Text                       TargetTextTemplate;                                       // 0x0A00(0x00F0) (Edit, BlueprintVisible)
	float                                              ForcedCancelDist;                                         // 0x0AF0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x124];                                     // 0x0AF4(0x0124) MISSED OFFSET
	class UTexture2D*                                  AltIconAtlas;                                             // 0x0C18(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTRadialMenu_Coms");
		return ptr;
	}

};


// Class UnrealTournament.UTRadialMenu_DropInventory
// 0x0320 (0x0930 - 0x0610)
class UUTRadialMenu_DropInventory : public UUTRadialMenu
{
public:
	struct FHUDRenderObject_Texture                    FlagIcon;                                                 // 0x0610(0x0080) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x2A0];                                     // 0x0690(0x02A0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTRadialMenu_DropInventory");
		return ptr;
	}

};


// Class UnrealTournament.UTRadialMenu_WeaponWheel
// 0x00A0 (0x06B0 - 0x0610)
class UUTRadialMenu_WeaponWheel : public UUTRadialMenu
{
public:
	struct FHUDRenderObject_Texture                    OutOfAmmoTemplate;                                        // 0x0610(0x0080) (Edit, BlueprintVisible)
	TArray<class AUTWeapon*>                           WeaponList;                                               // 0x0690(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData00[0x10];                                      // 0x06A0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTRadialMenu_WeaponWheel");
		return ptr;
	}

};


// Class UnrealTournament.UTTeamScoreboard
// 0x0058 (0x0438 - 0x03E0)
class UUTTeamScoreboard : public UUTScoreboard
{
public:
	struct FText                                       RedTeamText;                                              // 0x03E0(0x0018) (Edit, BlueprintVisible)
	struct FText                                       BlueTeamText;                                             // 0x03F8(0x0018) (Edit, BlueprintVisible)
	bool                                               bUseRoundKills;                                           // 0x0410(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0411(0x0003) MISSED OFFSET
	int                                                PendingScore;                                             // 0x0414(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              RedScoreScaling;                                          // 0x0418(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              BlueScoreScaling;                                         // 0x041C(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FText                                       TeamScoringHeader;                                        // 0x0420(0x0018)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTTeamScoreboard");
		return ptr;
	}

};


// Class UnrealTournament.UTCTFScoreboard
// 0x0150 (0x0588 - 0x0438)
class UUTCTFScoreboard : public UUTTeamScoreboard
{
public:
	struct FText                                       ScoringPlaysHeader;                                       // 0x0438(0x0018)
	struct FText                                       AssistedByText;                                           // 0x0450(0x0018)
	struct FText                                       UnassistedText;                                           // 0x0468(0x0018)
	struct FText                                       CaptureText;                                              // 0x0480(0x0018)
	struct FText                                       ScoreText;                                                // 0x0498(0x0018)
	struct FText                                       NoScoringText;                                            // 0x04B0(0x0018)
	struct FText                                       PeriodText[0x3];                                          // 0x04C8(0x0018)
	bool                                               bGroupRoundPairs;                                         // 0x0510(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0511(0x0007) MISSED OFFSET
	struct FText                                       ScoringPlayScore;                                         // 0x0518(0x0018)
	struct FText                                       CH_Caps;                                                  // 0x0530(0x0018) (Edit, BlueprintVisible)
	struct FText                                       CH_Assists;                                               // 0x0548(0x0018) (Edit, BlueprintVisible)
	struct FText                                       CH_Returns;                                               // 0x0560(0x0018) (Edit, BlueprintVisible)
	float                                              ColumnHeaderCapsX;                                        // 0x0578(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ColumnHeaderAssistsX;                                     // 0x057C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ColumnHeaderReturnsX;                                     // 0x0580(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TimeLineOffset;                                           // 0x0584(0x0004) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTCTFScoreboard");
		return ptr;
	}

};


// Class UnrealTournament.UTDuelScoreboard
// 0x0000 (0x0438 - 0x0438)
class UUTDuelScoreboard : public UUTTeamScoreboard
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTDuelScoreboard");
		return ptr;
	}

};


// Class UnrealTournament.UTFlagRunScoreboard
// 0x0218 (0x0650 - 0x0438)
class UUTFlagRunScoreboard : public UUTTeamScoreboard
{
public:
	struct FText                                       ScoringPlaysHeader;                                       // 0x0438(0x0018)
	float                                              ColumnHeaderPowerupX;                                     // 0x0450(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ColumnHeaderPowerupEndX;                                  // 0x0454(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ColumnHeaderPowerupXDuringReadyUp;                        // 0x0458(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x045C(0x0004) MISSED OFFSET
	struct FText                                       PowerupText;                                              // 0x0460(0x0018)
	struct FText                                       CH_Powerup;                                               // 0x0478(0x0018) (Edit, BlueprintVisible)
	struct FText                                       DefendTitle;                                              // 0x0490(0x0018) (Edit, BlueprintVisible)
	struct FText                                       AttackTitle;                                              // 0x04A8(0x0018) (Edit, BlueprintVisible)
	TArray<struct FText>                               DefendLines;                                              // 0x04C0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FText>                               AttackLines;                                              // 0x04D0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FText                                       BlueTeamName;                                             // 0x04E0(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       RedTeamName;                                              // 0x04F8(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       TeamScorePrefix;                                          // 0x0510(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       TeamScorePostfix;                                         // 0x0528(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       TeamWinsPrefix;                                           // 0x0540(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       TeamWinsPostfix;                                          // 0x0558(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       TeamWinsTiebreakPostfix;                                  // 0x0570(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       StarText;                                                 // 0x0588(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       DefenseScorePrefix;                                       // 0x05A0(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       DefenseScorePostfix;                                      // 0x05B8(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       DeliveredPrefix;                                          // 0x05D0(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	float                                              EndIntermissionTime;                                      // 0x05E8(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                OldDisplayedParagraphs;                                   // 0x05EC(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bFullListPlayed;                                          // 0x05F0(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bNeedReplay;                                              // 0x05F1(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x05F2(0x0002) MISSED OFFSET
	int                                                PendingTiebreak;                                          // 0x05F4(0x0004) (ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  LineDisplaySound;                                         // 0x05F8(0x0008) (ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  StarPoundSound;                                           // 0x0600(0x0008) (ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  StarWooshSound;                                           // 0x0608(0x0008) (ZeroConstructor, IsPlainOldData)
	class AUTTeamInfo*                                 ScoringTeam;                                              // 0x0610(0x0008) (ZeroConstructor, IsPlainOldData)
	class APlayerState*                                ScoringPlayer;                                            // 0x0618(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      RoundBonus;                                               // 0x0620(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      Reason;                                                   // 0x0621(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x0622(0x0002) MISSED OFFSET
	float                                              ScoreReceivedTime;                                        // 0x0624(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              ScoreInfoDuration;                                        // 0x0628(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bHasAnnouncedWin;                                         // 0x062C(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bHasAnnouncedNextRound;                                   // 0x062D(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x062E(0x0002) MISSED OFFSET
	struct FText                                       ScoringPlayScore;                                         // 0x0630(0x0018)
	float                                              TimeLineOffset;                                           // 0x0648(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x064C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTFlagRunScoreboard");
		return ptr;
	}

};


// Class UnrealTournament.UTLineUpHelper
// 0x00B8 (0x0440 - 0x0388)
class AUTLineUpHelper : public AActor
{
public:
	bool                                               bIsActive;                                                // 0x0388(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	ELineUpTypes                                       ActiveType;                                               // 0x0389(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               bIsPlacingPlayers;                                        // 0x038A(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x15];                                      // 0x038B(0x0015) MISSED OFFSET
	TArray<class AUTCharacter*>                        PlayerPreviewCharacters;                                  // 0x03A0(0x0010) (ZeroConstructor)
	TArray<class AUTWeapon*>                           PreviewWeapons;                                           // 0x03B0(0x0010) (ZeroConstructor)
	TArray<class UAnimationAsset*>                     PreviewAnimations;                                        // 0x03C0(0x0010) (ZeroConstructor)
	TArray<class UClass*>                              MapWeaponTypeList;                                        // 0x03D0(0x0010) (ZeroConstructor)
	int                                                NumControllersUsedInLineUp;                               // 0x03E0(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x03E4(0x0004) MISSED OFFSET
	TArray<struct FLineUpSlot>                         LineUpSlots;                                              // 0x03E8(0x0010) (Net, ZeroConstructor)
	unsigned char                                      UnknownData02[0x48];                                      // 0x03F8(0x0048) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTLineUpHelper");
		return ptr;
	}


	void SpawnPlayerWeapon(class AUTCharacter* UTChar);
	void SpawnLineUp();
	void SpawnCharactersToSlots();
	class AUTCharacter* SpawnCharacterFromLineUpSlot(struct FLineUpSlot* Slot);
	void SetupCharactersForLineUp();
	void SetLineUpWeapons();
	void ServerOnPlayerChange(class AUTPlayerState* PlayerChanged);
	void PlayIntroClientAnimationOnCharacter(class AUTCharacter* UTChar, bool bShouldPlayFullIntro);
	void PerformLineUp();
	void OnRep_CheckForClientIntro();
	void NotifyClientsOfLineUp();
	void MoveCharacterToLineUpSlot(class AUTCharacter* UTChar, struct FLineUpSlot* Slot);
	bool IsLineupDataReplicated();
	bool IsActive();
	void IntroSwapMeshComponentLocations(class AUTCharacter* UTChar1, class AUTCharacter* UTChar2);
	bool IntroCheckForPawnReplicationToComplete();
	void InitializeLineUp(ELineUpTypes LineUpType);
	void HandleIntroClientAnimations();
	void FlagFixUp();
	void DestroySpawnedClones();
	void ClientOnPlayerChange(class AUTPlayerState* PlayerChanged);
	void CleanUp();
	bool CanInitiateGroupTaunt(class AUTPlayerState* PlayerToCheck);
	void CalculateAllLineUpData();
	void BuildMapWeaponList();
	void STATIC_ApplyCharacterAnimsForLineUp(class AUTCharacter* UTChar);
};


// Class UnrealTournament.UTFlagRunPvEScoreboard
// 0x0000 (0x0650 - 0x0650)
class UUTFlagRunPvEScoreboard : public UUTFlagRunScoreboard
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTFlagRunPvEScoreboard");
		return ptr;
	}

};


// Class UnrealTournament.UTShowdownScoreboard
// 0x0008 (0x0440 - 0x0438)
class UUTShowdownScoreboard : public UUTTeamScoreboard
{
public:
	float                                              ColumnHeaderKillsX;                                       // 0x0438(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x043C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTShowdownScoreboard");
		return ptr;
	}

};


// Class UnrealTournament.UTImpactEffect
// 0x0030 (0x03B8 - 0x0388)
class AUTImpactEffect : public AActor
{
public:
	float                                              CullDistance;                                             // 0x0388(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AlwaysSpawnDistance;                                      // 0x038C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bCheckInView;                                             // 0x0390(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bForceForLocalPlayer;                                     // 0x0391(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bAttachToHitComp;                                         // 0x0392(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bNoLODForLocalPlayer;                                     // 0x0393(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bRandomizeDecalRoll;                                      // 0x0394(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0395(0x0003) MISSED OFFSET
	float                                              DecalLifeScaling;                                         // 0x0398(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x039C(0x0004) MISSED OFFSET
	class USoundBase*                                  Audio;                                                    // 0x03A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<ESoundAmplificationType>               AudioSAT;                                                 // 0x03A8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x03A9(0x0007) MISSED OFFSET
	struct FName                                       WorldTimeParam;                                           // 0x03B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTImpactEffect");
		return ptr;
	}


	bool SpawnEffect(class UWorld* World, const struct FTransform& InTransform, class UPrimitiveComponent* HitComp, class AActor* SpawnedBy, class AController* InstigatedBy, TEnumAsByte<ESoundReplicationType> SoundReplication, const struct FImpactEffectNamedParameters& EffectParams);
	bool ShouldCreateComponent(class USceneComponent* TestComp, const struct FName& CompTemplateName, const struct FTransform& BaseTransform, class UPrimitiveComponent* HitComp, class AActor* SpawnedBy, class AController* InstigatedBy);
	void ComponentCreated(class USceneComponent* NewComp, class UPrimitiveComponent* HitComp, class AActor* SpawnedBy, class AController* InstigatedBy, const struct FImpactEffectNamedParameters& EffectParams);
	void STATIC_CallSpawnEffect(class UObject* WorldContextObject, class UClass* Effect, const struct FTransform& InTransform, class UPrimitiveComponent* HitComp, class AActor* SpawnedBy, class AController* InstigatedBy, TEnumAsByte<ESoundReplicationType> SoundReplication, const struct FImpactEffectNamedParameters& EffectParams);
};


// Class UnrealTournament.UTInputVisualizer
// 0x0048 (0x0160 - 0x0118)
class UUTInputVisualizer : public UWidget
{
public:
	TEnumAsByte<EUTWidgetStyleSize>                    StyleSize;                                                // 0x0118(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0119(0x0007) MISSED OFFSET
	struct FName                                       ActionName;                                               // 0x0120(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       AxisName;                                                 // 0x0128(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FKey                                        SpecificKey;                                              // 0x0130(0x0018) (Edit)
	bool                                               bShowKeyBorder;                                           // 0x0148(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bPreferSecondaryIcon;                                     // 0x0149(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x16];                                      // 0x014A(0x0016) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTInputVisualizer");
		return ptr;
	}


	void ShowSpecificKey(const struct FKey& Key);
	void ShowInputAxis(const struct FName& InAxisName);
	void ShowInputAction(const struct FName& InActionName);
	void SetSize(TEnumAsByte<EUTWidgetStyleSize> InSize);
	void HandleControlsChanged();
};


// Class UnrealTournament.UTIntermissionBeginInterface
// 0x0000 (0x0028 - 0x0028)
class UUTIntermissionBeginInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTIntermissionBeginInterface");
		return ptr;
	}


	void IntermissionBegin();
};


// Class UnrealTournament.UTActivatedPowerUpPlaceholder
// 0x0030 (0x05A0 - 0x0570)
class AUTActivatedPowerUpPlaceholder : public AUTInventory
{
public:
	struct FOverlayEffect                              OverlayEffect;                                            // 0x0570(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FOverlayEffect                              OverlayEffect1P;                                          // 0x0588(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTActivatedPowerUpPlaceholder");
		return ptr;
	}

};


// Class UnrealTournament.UTAmmoBoost
// 0x0010 (0x0580 - 0x0570)
class AUTAmmoBoost : public AUTInventory
{
public:
	int                                                NumBoxes;                                                 // 0x0570(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AmmoRefillPct;                                            // 0x0574(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TossSpeedXY;                                              // 0x0578(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TossSpeedZ;                                               // 0x057C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTAmmoBoost");
		return ptr;
	}

};


// Class UnrealTournament.UTArmor
// 0x0060 (0x05D0 - 0x0570)
class AUTArmor : public AUTInventory
{
public:
	int                                                ArmorAmount;                                              // 0x0570(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AbsorptionPct;                                            // 0x0574(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bAbsorbMomentum;                                          // 0x0578(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bDestroyWhenConsumed;                                     // 0x0579(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x057A(0x0006) MISSED OFFSET
	struct FOverlayEffect                              OverlayEffect;                                            // 0x0580(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	class UMaterialInterface*                          OverlayMaterial;                                          // 0x0598(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ArmorType;                                                // 0x05A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       StatsName;                                                // 0x05A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             ShieldImpactEffect;                                       // 0x05B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             ArmorImpactEffect;                                        // 0x05B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  NoPickupSound;                                            // 0x05C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x05C8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTArmor");
		return ptr;
	}

};


// Class UnrealTournament.UTArsenalBoost
// 0x0010 (0x0580 - 0x0570)
class AUTArsenalBoost : public AUTInventory
{
public:
	TArray<class UClass*>                              GrantedItems;                                             // 0x0570(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTArsenalBoost");
		return ptr;
	}

};


// Class UnrealTournament.UTRecallBoost
// 0x0010 (0x0590 - 0x0580)
class AUTRecallBoost : public AUTArsenalBoost
{
public:
	class UClass*                                      DestinationEffect;                                        // 0x0580(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0588(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTRecallBoost");
		return ptr;
	}

};


// Class UnrealTournament.UTJumpBoots
// 0x0030 (0x05A0 - 0x0570)
class AUTJumpBoots : public AUTInventory
{
public:
	int                                                NumJumps;                                                 // 0x0570(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	float                                              SuperJumpZ;                                               // 0x0574(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxMultiJumpZSpeed;                                       // 0x0578(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsDisabledOnFlagCarrier;                                 // 0x057C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x057D(0x0003) MISSED OFFSET
	float                                              MultiJumpAirControl;                                      // 0x0580(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0584(0x0004) MISSED OFFSET
	class USoundBase*                                  SuperJumpSound;                                           // 0x0588(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      SuperJumpEffect;                                          // 0x0590(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0598(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTJumpBoots");
		return ptr;
	}

};


// Class UnrealTournament.UTWeaponAttachment
// 0x0120 (0x04A8 - 0x0388)
class AUTWeaponAttachment : public AActor
{
public:
	class UClass*                                      WeaponType;                                               // 0x0388(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class AUTCharacter*                                UTOwner;                                                  // 0x0390(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USkeletalMeshComponent*                      OverlayMesh;                                              // 0x0398(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USkeletalMeshComponent*                      CustomDepthMesh;                                          // 0x03A0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                WeaponStance;                                             // 0x03A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x03AC(0x0004) MISSED OFFSET
	TArray<class UParticleSystemComponent*>            MuzzleFlash;                                              // 0x03B0(0x0010) (Edit, ExportObject, ZeroConstructor)
	class USkeletalMeshComponent*                      Mesh;                                                     // 0x03C0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	struct FName                                       AttachSocket;                                             // 0x03C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     AttachOffset;                                             // 0x03D0(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     PickupScaleOverride;                                      // 0x03DC(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       HolsterSocket;                                            // 0x03E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     HolsterOffset;                                            // 0x03F0(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    HolsterRotation;                                          // 0x03FC(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<class UParticleSystem*>                     FireEffect;                                               // 0x0408(0x0010) (Edit, ZeroConstructor)
	TArray<class UClass*>                              ImpactEffect;                                             // 0x0418(0x0010) (Edit, ZeroConstructor)
	float                                              ImpactEffectSkipDistance;                                 // 0x0428(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxImpactEffectSkipTime;                                  // 0x042C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     LastImpactEffectLocation;                                 // 0x0430(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LastImpactEffectTime;                                     // 0x043C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bCopyWeaponImpactEffect;                                  // 0x0440(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0441(0x0007) MISSED OFFSET
	TArray<class UMaterialInterface*>                  SavedMeshMaterials;                                       // 0x0448(0x0010) (BlueprintVisible, ZeroConstructor)
	class USoundBase*                                  BulletWhip;                                               // 0x0458(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxBulletWhipDist;                                        // 0x0460(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BulletWhipDelay;                                          // 0x0464(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     BulletWhipStart;                                          // 0x0468(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     BulletWhipEnd;                                            // 0x0474(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<class AUTPlayerController*>                 BulletWhipHearers;                                        // 0x0480(0x0010) (ZeroConstructor)
	TArray<struct FParticleSysParam>                   OverlayEffectParams;                                      // 0x0490(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData02[0x8];                                       // 0x04A0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTWeaponAttachment");
		return ptr;
	}


	void StopFiringEffects(bool bIgnoreCurrentMode);
	void PlayFiringEffects();
	void PlayBulletWhip();
	bool OverrideFiringEffects();
	void NotifyTeamChanged();
	void ModifyFireEffect(class UParticleSystemComponent* Effect);
	void HolsterToOwner();
	void FiringExtraUpdated();
	void DetachFromOwner();
	bool CancelImpactEffect(const struct FHitResult& ImpactHit);
	void AttachToOwner();
};


// Class UnrealTournament.UTSlowBurst
// 0x0060 (0x03E8 - 0x0388)
class AUTSlowBurst : public AActor
{
public:
	class USceneComponent*                             SceneRoot;                                                // 0x0388(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	float                                              Radius;                                                   // 0x0390(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TargetTimeDilation;                                       // 0x0394(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             SlowedEffect;                                             // 0x0398(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<class AUTCharacter*>                        AffectedPawns;                                            // 0x03A0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<class UParticleSystemComponent*>            AffectedPawnPSCs;                                         // 0x03B0(0x0010) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor)
	TArray<class AUTInventory*>                        AffectedItems;                                            // 0x03C0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<class AUTProjectile*>                       AffectedProjs;                                            // 0x03D0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      UnknownData00[0x8];                                       // 0x03E0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTSlowBurst");
		return ptr;
	}


	void OnActorSpawned(class AActor* NewActor);
};


// Class UnrealTournament.UTSlowBurstBoost
// 0x0010 (0x0580 - 0x0570)
class AUTSlowBurstBoost : public AUTInventory
{
public:
	class UClass*                                      SlowBurstType;                                            // 0x0570(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0578(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTSlowBurstBoost");
		return ptr;
	}

};


// Class UnrealTournament.UTTimedPowerup
// 0x0080 (0x05F0 - 0x0570)
class AUTTimedPowerup : public AUTInventory
{
public:
	float                                              TimeRemaining;                                            // 0x0570(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bTimerPaused;                                             // 0x0574(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0575(0x0003) MISSED OFFSET
	float                                              TriggeredTime;                                            // 0x0578(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DroppedTickRate;                                          // 0x057C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  PowerupFadingSound;                                       // 0x0580(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  PowerupOverSound;                                         // 0x0588(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FOverlayEffect                              OverlayEffect;                                            // 0x0590(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FOverlayEffect                              OverlayEffect1P;                                          // 0x05A8(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	class UMaterialInterface*                          OverlayMaterial;                                          // 0x05C0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData)
	class UMaterialInterface*                          OverlayMaterial1P;                                        // 0x05C8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData)
	class AUTDroppedPickup*                            MyPickup;                                                 // 0x05D0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              StatCountTime;                                            // 0x05D8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x05DC(0x0004) MISSED OFFSET
	struct FName                                       StatsNameTime;                                            // 0x05E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x05E8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTTimedPowerup");
		return ptr;
	}


	void TimeExpired();
	void PlayFadingSound();
	void ClientSetTimeRemaining(float InTimeRemaining);
};


// Class UnrealTournament.UTPlaceablePowerup
// 0x0060 (0x0650 - 0x05F0)
class AUTPlaceablePowerup : public AUTTimedPowerup
{
public:
	bool                                               bDestroySpawnedPowerups;                                  // 0x05F0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bDestroyWhenOutOfBoosts;                                  // 0x05F1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0xE];                                       // 0x05F2(0x000E) MISSED OFFSET
	struct FTransform                                  SpawnOffset;                                              // 0x0600(0x0030) (Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      PowerupToSpawn;                                           // 0x0630(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bAttachToOwner;                                           // 0x0638(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0639(0x0007) MISSED OFFSET
	TArray<TWeakObjectPtr<class AActor>>               SpawnedPowerups;                                          // 0x0640(0x0010) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTPlaceablePowerup");
		return ptr;
	}

};


// Class UnrealTournament.UTProj_Rocket
// 0x0040 (0x0578 - 0x0538)
class AUTProj_Rocket : public AUTProjectile
{
public:
	class AActor*                                      TargetActor;                                              // 0x0538(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              AdjustmentSpeed;                                          // 0x0540(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bLeadTarget;                                              // 0x0544(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0545(0x0003) MISSED OFFSET
	float                                              MaxLeadDistance;                                          // 0x0548(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinSeekDistance;                                          // 0x054C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bRocketTeamSet;                                           // 0x0550(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0551(0x0007) MISSED OFFSET
	class UTexture2D*                                  LockCrosshairTexture;                                     // 0x0558(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxTargetLockIndicatorDistance;                           // 0x0560(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0564(0x0004) MISSED OFFSET
	class UClass*                                      AirRocketRewardClass;                                     // 0x0568(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UMaterialInstanceDynamic*                    MeshMI;                                                   // 0x0570(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTProj_Rocket");
		return ptr;
	}


	void OnRep_TargetActor();
};


// Class UnrealTournament.UTRocketSalvoBoost
// 0x0030 (0x0620 - 0x05F0)
class AUTRocketSalvoBoost : public AUTTimedPowerup
{
public:
	class UClass*                                      ProjClass;                                                // 0x05F0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TargetingRange;                                           // 0x05F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                MinRockets;                                               // 0x05FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                MaxTargets;                                               // 0x0600(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CeilingCheckHeight;                                       // 0x0604(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCanvasIcon                                 TargetIndicator;                                          // 0x0608(0x0018) (Edit, BlueprintVisible)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTRocketSalvoBoost");
		return ptr;
	}


	void FireSalvo();
};


// Class UnrealTournament.UTDualWeapon
// 0x0250 (0x0E50 - 0x0C00)
class AUTDualWeapon : public AUTWeapon
{
public:
	class UUTWeaponStateUnequipping_DualWeapon*        DualWeaponUnequippingState;                               // 0x0C00(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UClass*                                      DualWieldAttachmentType;                                  // 0x0C08(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USkeletalMeshComponent*                      LeftMesh;                                                 // 0x0C10(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	TArray<class UMaterialInstanceDynamic*>            LeftMeshMIDs;                                             // 0x0C18(0x0010) (ZeroConstructor)
	class UAnimMontage*                                Dual_BringUpLeftHandFirstAttach;                          // 0x0C28(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                Dual_BringUpLeftWeaponFirstAttach;                        // 0x0C30(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                Dual_BringUpHand;                                         // 0x0C38(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                Dual_PutDownHand;                                         // 0x0C40(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                Dual_PutDownLeftWeapon;                                   // 0x0C48(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                Dual_PutDownRightWeapon;                                  // 0x0C50(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<class UAnimMontage*>                        Dual_FireAnimationLeftHand;                               // 0x0C58(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<class UAnimMontage*>                        Dual_FireAnimationRightHand;                              // 0x0C68(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FName                                       HandsAttachSocketLeft;                                    // 0x0C78(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<class UAnimMontage*>                        Dual_FireAnimationLeftWeapon;                             // 0x0C80(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<class UAnimMontage*>                        Dual_FireAnimationRightWeapon;                            // 0x0C90(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<float>                                      FireIntervalDualWield;                                    // 0x0CA0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<float>                                      SpreadDualWield;                                          // 0x0CB0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	float                                              DualBringUpTime;                                          // 0x0CC0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DualPutDownTime;                                          // 0x0CC4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bDualWeaponMode;                                          // 0x0CC8(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bBecomeDual;                                              // 0x0CC9(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bFireLeftSide;                                            // 0x0CCA(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bFireLeftSideImpact;                                      // 0x0CCB(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0CCC(0x0004) MISSED OFFSET
	TArray<class UParticleSystemComponent*>            LeftMuzzleFlash;                                          // 0x0CD0(0x0010) (Edit, ExportObject, ZeroConstructor)
	class UAnimSequence*                               dual_idle;                                                // 0x0CE0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               dual_idle_pose;                                           // 0x0CE8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               dual_idleOffset_pose;                                     // 0x0CF0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               dual_idleEmpty_pose;                                      // 0x0CF8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               dual_idleAlt_offset_pose;                                 // 0x0D00(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               dual_idle_pose_zero;                                      // 0x0D08(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               dual_secondary_idle;                                      // 0x0D10(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               dual_secondary_idle_into;                                 // 0x0D18(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               dual_secondary_idle_out;                                  // 0x0D20(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               dual_secondary_idle_pose;                                 // 0x0D28(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               dual_secondary_idleOffset_pose;                           // 0x0D30(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               dual_secondary_idleAlt_offset_pose;                       // 0x0D38(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               dual_runForward;                                          // 0x0D40(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               dual_runForward_L;                                        // 0x0D48(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               dual_runForward_R;                                        // 0x0D50(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               dual_jump;                                                // 0x0D58(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               dual_fall;                                                // 0x0D60(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               dual_fall_long;                                           // 0x0D68(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               dual_land;                                                // 0x0D70(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               dual_land_soft;                                           // 0x0D78(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               dual_land_medium;                                         // 0x0D80(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               dual_land_heavy;                                          // 0x0D88(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               dual_slide;                                               // 0x0D90(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               dual_dodgeForward;                                        // 0x0D98(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               dual_dodgeBack;                                           // 0x0DA0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               dual_dodgeLeft;                                           // 0x0DA8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               dual_dodgeRight;                                          // 0x0DB0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               dual_dodgeForward_right;                                  // 0x0DB8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               dual_dodgeForward_left;                                   // 0x0DC0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               dual_wallRun_L_into;                                      // 0x0DC8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               dual_wallRun_L;                                           // 0x0DD0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               dual_wallRun_L_out;                                       // 0x0DD8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               dual_wallRun_R_into;                                      // 0x0DE0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               dual_wallRun_R;                                           // 0x0DE8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               dual_wallRun_R_out;                                       // 0x0DF0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               dual_wallRun_L_dodge;                                     // 0x0DF8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               dual_wallRun_R_dodge;                                     // 0x0E00(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAimOffsetBlendSpace*                        dual_lagAO;                                               // 0x0E08(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UBlendSpace*                                 dual_leanBS;                                              // 0x0E10(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               dual_inspect;                                             // 0x0E18(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               dual_accent_A;                                            // 0x0E20(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               dual_accent_B;                                            // 0x0E28(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               dual_fidget_A;                                            // 0x0E30(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               dual_fidget_B;                                            // 0x0E38(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               dual_fidget_C;                                            // 0x0E40(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USkeletalMeshComponent*                      LeftOverlayMesh;                                          // 0x0E48(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTDualWeapon");
		return ptr;
	}


	void BecomeDual();
};


// Class UnrealTournament.UTWeap_Enforcer
// 0x0050 (0x0EA0 - 0x0E50)
class AUTWeap_Enforcer : public AUTDualWeapon
{
public:
	class UClass*                                      SingleWieldAttachmentType;                                // 0x0E50(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SpreadIncrease;                                           // 0x0E58(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0E5C(0x0004) MISSED OFFSET
	class USoundBase*                                  ReloadClipSound;                                          // 0x0E60(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ReloadClipTime;                                           // 0x0E68(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x14];                                      // 0x0E6C(0x0014) MISSED OFFSET
	float                                              SpreadResetInterval;                                      // 0x0E80(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxSpread;                                                // 0x0E84(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LastFireTime;                                             // 0x0E88(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StoppingPower;                                            // 0x0E8C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                FireCount;                                                // 0x0E90(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                ImpactCount;                                              // 0x0E94(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0E98(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTWeap_Enforcer");
		return ptr;
	}


	void ModifySpread();
};


// Class UnrealTournament.UTWeap_BioRifle
// 0x0030 (0x0C30 - 0x0C00)
class AUTWeap_BioRifle : public AUTWeapon
{
public:
	unsigned char                                      MaxGlobStrength;                                          // 0x0C00(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0C01(0x0003) MISSED OFFSET
	float                                              GlobConsumeTime;                                          // 0x0C04(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SqueezeFireInterval;                                      // 0x0C08(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SqueezeFireSpread;                                        // 0x0C0C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SqueezeAmmoCost;                                          // 0x0C10(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0C14(0x0004) MISSED OFFSET
	class UClass*                                      SqueezeProjClass;                                         // 0x0C18(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0C20(0x0008) MISSED OFFSET
	unsigned char                                      GlobStrength;                                             // 0x0C28(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0C29(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTWeap_BioRifle");
		return ptr;
	}


	void OnStartCharging();
	void OnChargeShot();
};


// Class UnrealTournament.UTWeap_FlakCannon
// 0x0050 (0x0C50 - 0x0C00)
class AUTWeap_FlakCannon : public AUTWeapon
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0C00(0x0008) MISSED OFFSET
	TArray<class UClass*>                              MultiShotProjClass;                                       // 0x0C08(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FRotator>                            MultiShotAngle;                                           // 0x0C18(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FVector>                             MultiShotLocationSpread;                                  // 0x0C28(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<float>                                      MultiShotRotationSpread;                                  // 0x0C38(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0C48(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTWeap_FlakCannon");
		return ptr;
	}


	struct FRotator GetFireRotationForMultiShot(int MultiShotIndex, const struct FVector& FireLocation, const struct FRotator& FireRotation);
	struct FVector GetFireLocationForMultiShot(int MultiShotIndex, const struct FVector& FireLocation, const struct FRotator& FireRotation);
};


// Class UnrealTournament.UTProj_Grenade_Sticky
// 0x0038 (0x0570 - 0x0538)
class AUTProj_Grenade_Sticky : public AUTProjectile
{
public:
	class AUTWeap_GrenadeLauncher*                     GrenadeLauncherOwner;                                     // 0x0538(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LifeTime;                                                 // 0x0540(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LifeTimeAfterArmed;                                       // 0x0544(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinimumLifeTime;                                          // 0x0548(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bArmed;                                                   // 0x054C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x054D(0x0003) MISSED OFFSET
	class ULightComponent*                             BlinkingLight;                                            // 0x0550(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0558(0x0010) MISSED OFFSET
	class AUTProjectile*                               SavedFakeProjectile;                                      // 0x0568(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTProj_Grenade_Sticky");
		return ptr;
	}


	void PlayIdleEffects();
	void PlayDamagedDetonationEffects();
	unsigned char GetInstigatorTeamNum();
	void ExplodeDueToTimeout();
	void ArmGrenade();
};


// Class UnrealTournament.UTWeap_GrenadeLauncher
// 0x0020 (0x0C20 - 0x0C00)
class AUTWeap_GrenadeLauncher : public AUTWeapon
{
public:
	TArray<class AUTProj_Grenade_Sticky*>              ActiveGrenades;                                           // 0x0C00(0x0010) (ZeroConstructor)
	bool                                               bHasStickyGrenades;                                       // 0x0C10(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               bFiringStickyGrenade;                                     // 0x0C11(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0C12(0x0002) MISSED OFFSET
	float                                              DetonationAfterFireDelay;                                 // 0x0C14(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                ActiveStickyGrenadeCount;                                 // 0x0C18(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0C1C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTWeap_GrenadeLauncher");
		return ptr;
	}


	void ShowDetonatorUI();
	void PlayDetonationEffects();
	void OnRep_HasStickyGrenades();
	void HideDetonatorUI();
};


// Class UnrealTournament.UTWeap_ImpactHammer
// 0x0030 (0x0C30 - 0x0C00)
class AUTWeap_ImpactHammer : public AUTWeapon
{
public:
	float                                              FullImpactChargePct;                                      // 0x0C00(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0C04(0x0004) MISSED OFFSET
	class USoundBase*                                  ImpactJumpSound;                                          // 0x0C08(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  ChargeClickSound;                                         // 0x0C10(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class AActor*                                      AutoHitTarget;                                            // 0x0C18(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bForwardPredictOwner;                                     // 0x0C20(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0C21(0x0003) MISSED OFFSET
	float                                              ImpactJumpTraceDist;                                      // 0x0C24(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0C28(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTWeap_ImpactHammer");
		return ptr;
	}


	void ClientAutoHit(class AActor* Target);
	bool AllowAutoHit(class AActor* PotentialTarget);
};


// Class UnrealTournament.UTWeap_LinkGun
// 0x0110 (0x0D10 - 0x0C00)
class AUTWeap_LinkGun : public AUTWeapon
{
public:
	float                                              BeamPulseMomentum;                                        // 0x0C00(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0C04(0x0004) MISSED OFFSET
	class UClass*                                      BeamPulseDamageType;                                      // 0x0C08(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                PulseAnim;                                                // 0x0C10(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                PulseAnimHands;                                           // 0x0C18(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             PulseSuccessEffect;                                       // 0x0C20(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             PulseFailEffect;                                          // 0x0C28(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                LinkPullDamage;                                           // 0x0C30(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ReadyToPullColor;                                         // 0x0C34(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                LastFiredPlasmaTime;                                      // 0x0C44(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class AActor*                                      CurrentLinkedTarget;                                      // 0x0C48(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LinkStartTime;                                            // 0x0C50(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PullWarmupTime;                                           // 0x0C54(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bReadyToPull;                                             // 0x0C58(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0C59(0x0003) MISSED OFFSET
	float                                              OverheatFactor;                                           // 0x0C5C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsInCoolDown;                                            // 0x0C60(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0C61(0x0007) MISSED OFFSET
	class USoundBase*                                  OverheatFPFireSound;                                      // 0x0C68(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  NormalFPFireSound;                                        // 0x0C70(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  OverheatSound;                                            // 0x0C78(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FiringBeamKickbackY;                                      // 0x0C80(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LinkPullKickbackY;                                        // 0x0C84(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LastBeamPulseTime;                                        // 0x0C88(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0C8C(0x0004) MISSED OFFSET
	class AActor*                                      PulseTarget;                                              // 0x0C90(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     PulseLoc;                                                 // 0x0C98(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     MissedPulseOffset;                                        // 0x0CA4(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCanvasRenderTarget2D*                       ScreenTexture;                                            // 0x0CB0(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  ScreenKillNotifyTexture;                                  // 0x0CB8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UFont*                                       ScreenFont;                                               // 0x0CC0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ScreenMaterialID;                                         // 0x0CC8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SideScreenMaterialID;                                     // 0x0CCC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UMaterialInstanceDynamic*                    ScreenMI;                                                 // 0x0CD0(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UMaterialInstanceDynamic*                    SideScreenMI;                                             // 0x0CD8(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x10];                                      // 0x0CE0(0x0010) MISSED OFFSET
	float                                              LastClientKillTime;                                       // 0x0CF0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bLinkCausingDamage;                                       // 0x0CF4(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bLinkBeamImpacting;                                       // 0x0CF5(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x2];                                       // 0x0CF6(0x0002) MISSED OFFSET
	class USoundBase*                                  PullSucceeded;                                            // 0x0CF8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  PullFailed;                                               // 0x0D00(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x8];                                       // 0x0D08(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTWeap_LinkGun");
		return ptr;
	}


	void UpdateScreenTexture(class UCanvas* C, int Width, int Height);
	void ServerSetPulseTarget(class AActor* InTarget);
	void CheckBotPulseFire();
};


// Class UnrealTournament.UTWeap_Minigun
// 0x0000 (0x0C00 - 0x0C00)
class AUTWeap_Minigun : public AUTWeapon
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTWeap_Minigun");
		return ptr;
	}

};


// Class UnrealTournament.UTRemoteRedeemer
// 0x0130 (0x0518 - 0x03E8)
class AUTRemoteRedeemer : public APawn
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x03E8(0x0008) MISSED OFFSET
	class USphereComponent*                            CollisionComp;                                            // 0x03F0(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class UUTProjectileMovementComponent*              ProjectileMovement;                                       // 0x03F8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UCapsuleComponent*                           CapsuleComp;                                              // 0x0400(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class USoundBase*                                  ShotDownAmbient;                                          // 0x0408(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  LockAcquiredSound;                                        // 0x0410(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  HitSound;                                                 // 0x0418(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  ExplosionSound;                                           // 0x0420(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      ExplosionBP;                                              // 0x0428(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FRadialDamageParams                         DamageParams;                                             // 0x0430(0x0014) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0444(0x0004) MISSED OFFSET
	class UClass*                                      MyDamageType;                                             // 0x0448(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Momentum;                                                 // 0x0450(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                LockCount;                                                // 0x0454(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                KillCount;                                                // 0x0458(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MaxFuelTime;                                              // 0x045C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CurrentFuelTime;                                          // 0x0460(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1C];                                      // 0x0464(0x001C) MISSED OFFSET
	class UMeshComponent*                              CustomDepthMesh;                                          // 0x0480(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class APawn*                                       Driver;                                                   // 0x0488(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class AController*                                 DamageInstigator;                                         // 0x0490(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          OverlayMat;                                               // 0x0498(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UMaterialInstanceDynamic*                    OverlayMI;                                                // 0x04A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UCurveFloat*                                 OverlayStaticCurve;                                       // 0x04A8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  TargetIndicator;                                          // 0x04B0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  RedeemerDisplayOne;                                       // 0x04B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  FuelWarningSound;                                         // 0x04C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StatsHitCredit;                                           // 0x04C8(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x04CC(0x0004) MISSED OFFSET
	struct FName                                       HitsStatsName;                                            // 0x04D0(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              YawAccel;                                                 // 0x04D8(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              PitchAccel;                                               // 0x04DC(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              AccelRate;                                                // 0x04E0(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              AccelerationBlend;                                        // 0x04E4(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              RedeemerMouseSensitivity;                                 // 0x04E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaximumRoll;                                              // 0x04EC(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MaxPitch;                                                 // 0x04F0(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MinPitch;                                                 // 0x04F4(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              RollMultiplier;                                           // 0x04F8(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                ProjHealth;                                               // 0x04FC(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              RollSmoothingMultiplier;                                  // 0x0500(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     ExplosionCenter;                                          // 0x0504(0x000C) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x1];                                       // 0x0510(0x0001) MISSED OFFSET
	bool                                               bShotDown;                                                // 0x0511(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x6];                                       // 0x0512(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTRemoteRedeemer");
		return ptr;
	}


	bool TryToDrive(class APawn* NewDriver);
	void ServerDriverLeave();
	void ServerBlowUp();
	void RedeemerRestarted(class AController* NewController);
	void OnStop(const struct FHitResult& Hit);
	void OnOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	unsigned char GetTeamNum();
	void ForceReplication();
	void ExplodeTimed();
	void ExplodeStage3();
	void ExplodeStage2();
	void ExplodeStage1();
	bool DriverLeave(bool bForceLeave);
	bool DriverEnter(class APawn* NewDriver);
	void BlowUp(const struct FVector& HitNormal);
};


// Class UnrealTournament.UTWeap_Redeemer
// 0x0030 (0x0C30 - 0x0C00)
class AUTWeap_Redeemer : public AUTWeapon
{
public:
	class USoundBase*                                  GlobalBringupSound;                                       // 0x0C00(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  GlobalPutDownSound;                                       // 0x0C08(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class AUTRemoteRedeemer*                           RemoteRedeemer;                                           // 0x0C10(0x0008) (ZeroConstructor, IsPlainOldData)
	class AActor*                                      LaunchedMissile;                                          // 0x0C18(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      LaunchTeam;                                               // 0x0C20(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0C21(0x0003) MISSED OFFSET
	float                                              EquipStartTime;                                           // 0x0C24(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0C28(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTWeap_Redeemer");
		return ptr;
	}

};


// Class UnrealTournament.UTWeap_RocketLauncher
// 0x0180 (0x0D80 - 0x0C00)
class AUTWeap_RocketLauncher : public AUTWeapon
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0C00(0x0008) MISSED OFFSET
	TArray<class UAnimMontage*>                        LoadingAnimationHands;                                    // 0x0C08(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<class UAnimMontage*>                        EmptyLoadingAnimation;                                    // 0x0C18(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<class UAnimMontage*>                        EmptyLoadingAnimationHands;                               // 0x0C28(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	class USoundBase*                                  RocketLoadedSound;                                        // 0x0C38(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  AltFireModeChangeSound;                                   // 0x0C40(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<class UAnimMontage*>                        FiringAnimation;                                          // 0x0C48(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<class UAnimMontage*>                        FiringAnimationHands;                                     // 0x0C58(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<class UTexture2D*>                          LoadCrosshairTextures;                                    // 0x0C68(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	class UTexture2D*                                  LockCrosshairTexture;                                     // 0x0C78(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  PendingLockCrosshairTexture;                              // 0x0C80(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CrosshairScale;                                           // 0x0C88(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CrosshairRotationTime;                                    // 0x0C8C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0C90(0x0008) MISSED OFFSET
	bool                                               bAllowGrenades;                                           // 0x0C98(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0C99(0x0007) MISSED OFFSET
	TArray<struct FRocketFireMode>                     RocketFireModes;                                          // 0x0CA0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0CB0(0x0004) MISSED OFFSET
	int                                                MaxLoadedRockets;                                         // 0x0CB4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                NumLoadedRockets;                                         // 0x0CB8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NumLoadedBarrels;                                         // 0x0CBC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FullLoadSpread;                                           // 0x0CC0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SeekingLoadSpread;                                        // 0x0CC4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RocketLoadTime;                                           // 0x0CC8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FirstRocketLoadTime;                                      // 0x0CCC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              GracePeriod;                                              // 0x0CD0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BurstInterval;                                            // 0x0CD4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              GrenadeBurstInterval;                                     // 0x0CD8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BarrelRadius;                                             // 0x0CDC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<class AUTProj_Rocket*>                      TrackingRockets;                                          // 0x0CE0(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData04[0x18];                                      // 0x0CF0(0x0018) MISSED OFFSET
	class UFont*                                       RocketModeFont;                                           // 0x0D08(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              UnderReticlePadding;                                      // 0x0D10(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0xC];                                       // 0x0D14(0x000C) MISSED OFFSET
	float                                              LockCheckTime;                                            // 0x0D20(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LockRange;                                                // 0x0D24(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LockOffset;                                               // 0x0D28(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LockAcquireTime;                                          // 0x0D2C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LockTolerance;                                            // 0x0D30(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bLockedOnTarget;                                          // 0x0D34(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x0D35(0x0003) MISSED OFFSET
	class AActor*                                      LockedTarget;                                             // 0x0D38(0x0008) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	class AActor*                                      PendingLockedTarget;                                      // 0x0D40(0x0008) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	float                                              LastLockedOnTime;                                         // 0x0D48(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PendingLockedTargetTime;                                  // 0x0D4C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LastValidTargetTime;                                      // 0x0D50(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LockAim;                                                  // 0x0D54(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      SeekingRocketClass;                                       // 0x0D58(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  LockAcquiredSound;                                        // 0x0D60(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  LockLostSound;                                            // 0x0D68(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bTargetLockingActive;                                     // 0x0D70(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x3];                                       // 0x0D71(0x0003) MISSED OFFSET
	float                                              LastTargetLockCheckTime;                                  // 0x0D74(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x8];                                       // 0x0D78(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTWeap_RocketLauncher");
		return ptr;
	}


	void OnRep_PendingLockedTarget();
	void OnRep_LockedTarget();
	class AUTProjectile* FireRocketProjectile();
	void ClientAbortLoad();
	void ClearLoadedRockets();
};


// Class UnrealTournament.UTWeap_ShockRifle
// 0x0070 (0x0C70 - 0x0C00)
class AUTWeap_ShockRifle : public AUTWeapon
{
public:
	struct FVector                                     PredictiveComboTargetLoc;                                 // 0x0C00(0x000C) (ZeroConstructor, IsPlainOldData)
	float                                              LastPredictiveComboCheckTime;                             // 0x0C0C(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bPlanningCombo;                                           // 0x0C10(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bMovingComboCheckResult;                                  // 0x0C11(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0C12(0x0006) MISSED OFFSET
	class UCanvasRenderTarget2D*                       ScreenTexture;                                            // 0x0C18(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  ScreenKillNotifyTexture;                                  // 0x0C20(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UFont*                                       ScreenFont;                                               // 0x0C28(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ScreenMaterialID;                                         // 0x0C30(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0C34(0x0004) MISSED OFFSET
	class UMaterialInstanceDynamic*                    ScreenMI;                                                 // 0x0C38(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                ComboFireAnim;                                            // 0x0C40(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                ComboFireAnimHands;                                       // 0x0C48(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0C50(0x0010) MISSED OFFSET
	float                                              LastClientKillTime;                                       // 0x0C60(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0xC];                                       // 0x0C64(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTWeap_ShockRifle");
		return ptr;
	}


	void UpdateScreenTexture(class UCanvas* C, int Width, int Height);
	void Play1PComboEffects();
};


// Class UnrealTournament.UTWeap_Sniper
// 0x0020 (0x0C20 - 0x0C00)
class AUTWeap_Sniper : public AUTWeapon
{
public:
	float                                              AimedHeadshotScale;                                       // 0x0C00(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RunningHeadshotScale;                                     // 0x0C04(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              HeadshotDamage;                                           // 0x0C08(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BlockedHeadshotDamage;                                    // 0x0C0C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      HeadshotDamageType;                                       // 0x0C10(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0C18(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTWeap_Sniper");
		return ptr;
	}

};


// Class UnrealTournament.UTWeap_LightningRifle
// 0x0050 (0x0C70 - 0x0C20)
class AUTWeap_LightningRifle : public AUTWeap_Sniper
{
public:
	float                                              FullPowerBonusDamage;                                     // 0x0C20(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ChainDamage;                                              // 0x0C24(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      ChainDamageType;                                          // 0x0C28(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ChainRadius;                                              // 0x0C30(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ChargeSpeed;                                              // 0x0C34(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ExtraFullPowerFireDelay;                                  // 0x0C38(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0C3C(0x0004) MISSED OFFSET
	class USoundBase*                                  FullyPoweredHitEnemySound;                                // 0x0C40(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  FullyPoweredNoHitEnemySound;                              // 0x0C48(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  ChargeSound;                                              // 0x0C50(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  FullyPoweredSound;                                        // 0x0C58(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsCharging;                                              // 0x0C60(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bIsFullyPowered;                                          // 0x0C61(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bZoomHeld;                                                // 0x0C62(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bExtendedRefireDelay;                                     // 0x0C63(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x0C64(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTWeap_LightningRifle");
		return ptr;
	}


	void OnRepCharging();
};


// Class UnrealTournament.UTWeaponRedirector
// 0x0068 (0x03F0 - 0x0388)
class AUTWeaponRedirector : public AActor
{
public:
	struct FRepCollisionShape                          CollisionInfo;                                            // 0x0388(0x0010) (BlueprintVisible, BlueprintReadOnly, Net)
	class UPrimitiveComponent*                         CollisionComp;                                            // 0x0398(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FTransform                                  PortalDest;                                               // 0x03A0(0x0030) (Edit, BlueprintVisible, Net, IsPlainOldData)
	bool                                               bRedirectDamage;                                          // 0x03D0(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x03D1(0x0007) MISSED OFFSET
	class UParticleSystem*                             WarpEffect;                                               // 0x03D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DamageEffect;                                             // 0x03E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x03E8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTWeaponRedirector");
		return ptr;
	}


	void UpdateCollisionShape();
	void InitFor(class APawn* InInstigator, const struct FRepCollisionShape& InCollision, class UPrimitiveComponent* InBase, const struct FTransform& InDest);
};


// Class UnrealTournament.UTWeap_Translocator
// 0x0080 (0x0C80 - 0x0C00)
class AUTWeap_Translocator : public AUTWeapon
{
public:
	class AUTProj_TransDisk*                           FakeTransDisk;                                            // 0x0C00(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bHaveDisk;                                                // 0x0C08(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0C09(0x0007) MISSED OFFSET
	class USoundBase*                                  ThrowSound;                                               // 0x0C10(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  RecallSound;                                              // 0x0C18(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  TeleSound;                                                // 0x0C20(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  DisruptedSound;                                           // 0x0C28(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RecallFireInterval;                                       // 0x0C30(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FirstFireInterval;                                        // 0x0C34(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LastTranslocTime;                                         // 0x0C38(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinFastTranslocInterval;                                  // 0x0C3C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ShotPitchUp;                                              // 0x0C40(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DiskGravity;                                              // 0x0C44(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TelefragDamage;                                           // 0x0C48(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0C4C(0x0004) MISSED OFFSET
	class UClass*                                      TelefragDamageType;                                       // 0x0C50(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      TransFailDamageType;                                      // 0x0C58(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      AfterImageType;                                           // 0x0C60(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DestinationEffect;                                        // 0x0C68(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      TranslocatorMessageClass;                                 // 0x0C70(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0C78(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTWeap_Translocator");
		return ptr;
	}


	void OnRep_TransDisk();
};


// Class UnrealTournament.UTJumpPadRenderingComponent
// 0x0010 (0x06B0 - 0x06A0)
class UUTJumpPadRenderingComponent : public UPrimitiveComponent
{
public:
	unsigned char                                      UnknownData00[0x4];                                       // 0x06A0(0x0004) MISSED OFFSET
	float                                              GameThreadGravityZ;                                       // 0x06A4(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x06A8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTJumpPadRenderingComponent");
		return ptr;
	}

};


// Class UnrealTournament.UTJumpPad
// 0x0060 (0x03E8 - 0x0388)
class AUTJumpPad : public AActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0388(0x0010) MISSED OFFSET
	class USceneComponent*                             SceneRoot;                                                // 0x0398(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        Mesh;                                                     // 0x03A0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UBoxComponent*                               TriggerBox;                                               // 0x03A8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USoundBase*                                  JumpSound;                                                // 0x03B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     JumpTarget;                                               // 0x03B8(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              JumpTime;                                                 // 0x03C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RestrictedJumpTime;                                       // 0x03C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bMaintainVelocity;                                        // 0x03CC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bLargeUnitUsable;                                         // 0x03CD(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bAIReducedAirControl;                                     // 0x03CE(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bJumpThroughWater;                                        // 0x03CF(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AuthoredGravityZ;                                         // 0x03D0(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bTemporaryActivation;                                     // 0x03D4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x13];                                      // 0x03D5(0x0013) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTJumpPad");
		return ptr;
	}


	void TriggerBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void Launch(class AActor* Actor);
	bool IsEnabled();
	bool CanLaunch(class AActor* TestActor);
	struct FVector CalculateJumpVelocity(class AActor* JumpActor);
};


// Class UnrealTournament.UTKillcamPlayback
// 0x0038 (0x0060 - 0x0028)
class UUTKillcamPlayback : public UObject
{
public:
	class UWorld*                                      KillcamWorld;                                             // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData)
	class UPackage*                                    KillcamWorldPackage;                                      // 0x0030(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0038(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTKillcamPlayback");
		return ptr;
	}

};


// Class UnrealTournament.UTKillerTarget
// 0x0018 (0x03A0 - 0x0388)
class AUTKillerTarget : public AActor
{
public:
	class USkeletalMeshComponent*                      Mesh;                                                     // 0x0388(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	bool                                               bHasTicked;                                               // 0x0390(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0391(0x0007) MISSED OFFSET
	class AUTPlayerController*                         Watcher;                                                  // 0x0398(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTKillerTarget");
		return ptr;
	}

};


// Class UnrealTournament.UTLoadGuard
// 0x00C0 (0x01F0 - 0x0130)
class UUTLoadGuard : public UContentWidget
{
public:
	struct FScriptMulticastDelegate                    OnLoadingStateChanged;                                    // 0x0130(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x20];                                      // 0x0140(0x0020) MISSED OFFSET
	TEnumAsByte<EHorizontalAlignment>                  ThrobberAlignment;                                        // 0x0160(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0161(0x0003) MISSED OFFSET
	struct FMargin                                     ThrobberPadding;                                          // 0x0164(0x0010) (Edit)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0174(0x0004) MISSED OFFSET
	struct FText                                       LoadingText;                                              // 0x0178(0x0018) (Edit)
	class UClass*                                      TextStyle;                                                // 0x0190(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EUTWidgetStyleSize>                    TextStyleSize;                                            // 0x0198(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EUTTextColor>                          TextColorType;                                            // 0x0199(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x6];                                       // 0x019A(0x0006) MISSED OFFSET
	class UUTTextBlock*                                Text_LoadingText;                                         // 0x01A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x48];                                      // 0x01A8(0x0048) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTLoadGuard");
		return ptr;
	}


	void SetLoadingText(const struct FText& InLoadingText);
	void SetIsLoading(bool bInIsLoading);
	void OnAssetLoaded__DelegateSignature(class UObject* Object);
	bool IsLoading();
	void BP_GuardAndLoadAsset(TAssetPtr<class UObject> InLazyAsset, const struct FScriptDelegate& OnAssetLoaded);
};


// Class UnrealTournament.UTLazyImage
// 0x0040 (0x0240 - 0x0200)
class UUTLazyImage : public UImage
{
public:
	struct FScriptMulticastDelegate                    OnLoadingStateChanged;                                    // 0x0200(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0210(0x0028) MISSED OFFSET
	class UUTLoadGuard*                                LoadGuard;                                                // 0x0238(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTLazyImage");
		return ptr;
	}


	void SetBrushFromLazyTexture(TAssetPtr<class UTexture2D> LazyTexture, bool bMatchSize);
	void SetBrushFromLazyMaterial(TAssetPtr<class UMaterialInterface> LazyMaterial);
	void SetBrushFromLazyDisplayAsset(TAssetPtr<class UObject> LazyObject, bool bMatchTextureSize);
	void SetBrushFromItemDefinition(class UUtMcpDefinition* ItemDefinition, bool bMatchTextureSize);
	bool IsLoading();
	void ForwardLoadingStateChanged(bool bIsLoading);
};


// Class UnrealTournament.UTLevelSummary
// 0x0068 (0x0090 - 0x0028)
class UUTLevelSummary : public UObject
{
public:
	struct FString                                     Title;                                                    // 0x0028(0x0010) (Edit, ZeroConstructor, DisableEditOnTemplate)
	int                                                OptimalPlayerCount;                                       // 0x0038(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	int                                                OptimalTeamPlayerCount;                                   // 0x003C(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	struct FString                                     Author;                                                   // 0x0040(0x0010) (Edit, ZeroConstructor, DisableEditOnTemplate)
	struct FText                                       Description;                                              // 0x0050(0x0018) (Edit, DisableEditOnTemplate)
	class UTexture2D*                                  Screenshot;                                               // 0x0068(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	struct FString                                     ScreenshotReference;                                      // 0x0070(0x0010) (ZeroConstructor)
	TArray<struct FMapVignetteInfo>                    Vignettes;                                                // 0x0080(0x0010) (Edit, ZeroConstructor, DisableEditOnTemplate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTLevelSummary");
		return ptr;
	}

};


// Class UnrealTournament.UTMovementBaseInterface
// 0x0000 (0x0028 - 0x0028)
class UUTMovementBaseInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTMovementBaseInterface");
		return ptr;
	}


	void RemoveBasedCharacter(class AUTCharacter* BasedCharacter);
	void AddBasedCharacter(class AUTCharacter* BasedCharacter);
};


// Class UnrealTournament.UTLift
// 0x0070 (0x03F8 - 0x0388)
class AUTLift : public AActor
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0388(0x0018) MISSED OFFSET
	TArray<class AUTCharacter*>                        BasedCharacters;                                          // 0x03A0(0x0010) (ZeroConstructor)
	float                                              LastEncroachNotifyTime;                                   // 0x03B0(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     LiftVelocity;                                             // 0x03B4(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              NavmeshScale;                                             // 0x03C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x03C4(0x0004) MISSED OFFSET
	class UPrimitiveComponent*                         EncroachComponent;                                        // 0x03C8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               bMoveWasBlocked;                                          // 0x03D0(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x03D1(0x0003) MISSED OFFSET
	struct FVector                                     LiftStartLocation;                                        // 0x03D4(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     LiftEndLocation;                                          // 0x03E0(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     TickLocation;                                             // 0x03EC(0x000C) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTLift");
		return ptr;
	}


	void UpdateCurrentlyBasedCharacters(class AUTCharacter* BasedCharacter);
	void SetEncroachComponent(class UPrimitiveComponent* NewEncroachComponent);
	void OnOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnEncroachActor(class AActor* EncroachedActor);
	void MoveLiftTo(const struct FVector& NewLocation, const struct FRotator& NewRotation);
	bool HasBasedCharacters();
	TArray<struct FVector> GetStops();
};


// Class UnrealTournament.UTLiftExit
// 0x0020 (0x03A8 - 0x0388)
class AUTLiftExit : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0388(0x0008) MISSED OFFSET
	class UBillboardComponent*                         Icon;                                                     // 0x0390(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class AUTLift*                                     MyLift;                                                   // 0x0398(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bLiftJump;                                                // 0x03A0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bOnlyExit;                                                // 0x03A1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x03A2(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTLiftExit");
		return ptr;
	}

};


// Class UnrealTournament.UTLiftMeshComponent
// 0x0000 (0x07E0 - 0x07E0)
class UUTLiftMeshComponent : public UStaticMeshComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTLiftMeshComponent");
		return ptr;
	}


	void SetIndirectLightingCacheQuality(TEnumAsByte<EIndirectLightingCacheQuality> Quality);
};


// Class UnrealTournament.UTListItem
// 0x0000 (0x0028 - 0x0028)
class UUTListItem : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTListItem");
		return ptr;
	}


	void ToggleExpansion();
	void SetSelected(bool bSelected);
	void SetIndexInList(int InIndexInList);
	void RegisterOnClicked(const struct FScriptDelegate& Callback);
	void Private_OnExpanderArrowShiftClicked();
	bool IsItemExpanded();
	TEnumAsByte<ESelectionMode> GetSelectionMode();
	int GetIndentLevel();
	int DoesItemHaveChildren();
};


// Class UnrealTournament.UTObjectListItem
// 0x0000 (0x0028 - 0x0028)
class UUTObjectListItem : public UUTListItem
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTObjectListItem");
		return ptr;
	}


	void SetData(class UObject* InData);
	void Reset();
	class UObject* GetData();
};


// Class UnrealTournament.UTListView
// 0x0188 (0x02A0 - 0x0118)
class UUTListView : public UWidget
{
public:
	struct FScriptMulticastDelegate                    OnItemClicked;                                            // 0x0118(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnItemSelected;                                           // 0x0128(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	float                                              ItemHeight;                                               // 0x0138(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	struct FMargin                                     DesiredItemPadding;                                       // 0x013C(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate)
	unsigned char                                      UnknownData00[0x4];                                       // 0x014C(0x0004) MISSED OFFSET
	class UClass*                                      ListItemClass;                                            // 0x0150(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	TEnumAsByte<ESelectionMode>                        SelectionMode;                                            // 0x0158(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	EConsumeMouseWheel                                 ConsumeMouseWheel;                                        // 0x0159(0x0001) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	bool                                               bClearSelectionOnClick;                                   // 0x015A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x015B(0x0001) MISSED OFFSET
	int                                                NumPreAllocatedEntries;                                   // 0x015C(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	unsigned char                                      UnknownData02[0x140];                                     // 0x0160(0x0140) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTListView");
		return ptr;
	}


	bool SetSelectedItem(class UObject* Item, bool bWaitIfPendingRefresh);
	bool SetSelectedIndex(int Index);
	void SetItemSelection(class UObject* Item, bool bSelected);
	void SetItemHeight(float NewHeight);
	void SetDesiredItemPadding(const struct FMargin& DesiredPadding);
	void SetDataProvider(TArray<class UObject*> InDataProvider);
	void ScrollIntoView(class UObject* Item);
	bool IsRefreshPending();
	bool IsItemVisible(class UObject* Item);
	bool GetSelectedItems(TArray<class UObject*>* Items);
	class UObject* GetSelectedItem();
	int GetNumItemsSelected();
	class UObject* GetItemAt(int Index);
	int GetIndexForItem(class UObject* Item);
	void DynamicHandleItemClicked(class UUserWidget* Widget);
	void ClearSelection();
	void Clear();
	void AddItem(class UObject* Item);
};


// Class UnrealTournament.UTTileView
// 0x0010 (0x02B0 - 0x02A0)
class UUTTileView : public UUTListView
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x02A0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTTileView");
		return ptr;
	}


	void SetItemWidth(float NewWidth);
};


// Class UnrealTournament.UTLobbyMatchInfo
// 0x0238 (0x05C0 - 0x0388)
class AUTLobbyMatchInfo : public AInfo
{
public:
	struct FUniqueNetIdRepl                            OwnerId;                                                  // 0x0388(0x0018) (Net)
	struct FName                                       CurrentState;                                             // 0x03A0(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bPrivateMatch : 1;                                        // 0x03A8(0x0001) (Net)
	unsigned char                                      bSpectatable : 1;                                         // 0x03A8(0x0001) (Net)
	unsigned char                                      bJoinAnytime : 1;                                         // 0x03A8(0x0001) (Net)
	unsigned char                                      bRankLocked : 1;                                          // 0x03A8(0x0001) (Net)
	unsigned char                                      UnknownData00[0x3];                                       // 0x03A9(0x0003) MISSED OFFSET
	bool                                               bBeginnerMatch;                                           // 0x03AC(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x03AD(0x0003) MISSED OFFSET
	struct FMatchUpdate                                MatchUpdate;                                              // 0x03B0(0x0038) (Net)
	struct FString                                     InitialMap;                                               // 0x03E8(0x0010) (Net, ZeroConstructor)
	TWeakObjectPtr<class AUTReplicatedMapInfo>         InitialMapInfo;                                           // 0x03F8(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0400(0x0004) MISSED OFFSET
	TWeakObjectPtr<class AUTReplicatedGameRuleset>     CurrentRuleset;                                           // 0x0404(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x040C(0x0004) MISSED OFFSET
	TArray<TWeakObjectPtr<class AUTLobbyPlayerState>>  Players;                                                  // 0x0410(0x0010) (Net, ZeroConstructor)
	unsigned char                                      UnknownData04[0xC];                                       // 0x0420(0x000C) MISSED OFFSET
	uint32_t                                           GameInstanceID;                                           // 0x042C(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FString                                     GameInstanceGUID;                                         // 0x0430(0x0010) (ZeroConstructor)
	struct FGuid                                       PrivateKey;                                               // 0x0440(0x0010) (Net, ZeroConstructor, IsPlainOldData)
	TArray<struct FRemotePlayerInfo>                   PlayersInMatchInstance;                                   // 0x0450(0x0010) (Net, ZeroConstructor)
	unsigned char                                      UnknownData05[0x80];                                      // 0x0460(0x0080) MISSED OFFSET
	TArray<struct FUniqueNetIdRepl>                    BannedIds;                                                // 0x04E0(0x0010) (ZeroConstructor)
	bool                                               bDedicatedMatch;                                          // 0x04F0(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               bDedicatedTeamGame;                                       // 0x04F1(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x6];                                       // 0x04F2(0x0006) MISSED OFFSET
	struct FString                                     AccessKey;                                                // 0x04F8(0x0010) (ZeroConstructor)
	struct FString                                     DedicatedServerName;                                      // 0x0508(0x0010) (Net, ZeroConstructor)
	struct FString                                     DedicatedServerGameMode;                                  // 0x0518(0x0010) (Net, ZeroConstructor)
	struct FString                                     DedicatedServerDescription;                               // 0x0528(0x0010) (Net, ZeroConstructor)
	int                                                DedicatedServerMaxPlayers;                                // 0x0538(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	TWeakObjectPtr<class AUTLobbyGameState>            LobbyGameState;                                           // 0x053C(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x14];                                      // 0x0544(0x0014) MISSED OFFSET
	TArray<class AUTServerBeaconClient*>               NotifyBeacons;                                            // 0x0558(0x0010) (ZeroConstructor)
	int                                                RankCheck;                                                // 0x0568(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bHostIsBeginner : 1;                                      // 0x056C(0x0001) (Net)
	unsigned char                                      UnknownData08[0x3];                                       // 0x056D(0x0003) MISSED OFFSET
	TArray<struct FPackageRedirectReference>           Redirects;                                                // 0x0570(0x0010) (Net, ZeroConstructor)
	unsigned char                                      UnknownData09[0x8];                                       // 0x0580(0x0008) MISSED OFFSET
	TArray<struct FString>                             AllowedPlayerList;                                        // 0x0588(0x0010) (Net, ZeroConstructor)
	unsigned char                                      UnknownData10[0x8];                                       // 0x0598(0x0008) MISSED OFFSET
	class AUTServerBeaconLobbyClient*                  InstanceBeacon;                                           // 0x05A0(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData11[0x8];                                       // 0x05A8(0x0008) MISSED OFFSET
	struct FString                                     CustomGameName;                                           // 0x05B0(0x0010) (Net, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTLobbyMatchInfo");
		return ptr;
	}


	void ServerInvitePlayer(class AUTLobbyPlayerState* Who, bool bInvite);
	void OnRep_Update();
	void OnRep_RedirectsChanged();
	void OnRep_MatchUpdate();
	void OnRep_InitialMap();
	void OnRep_CurrentRuleset();
};


// Class UnrealTournament.UTAssistMessage
// 0x0048 (0x00A0 - 0x0058)
class UUTAssistMessage : public UUTLocalMessage
{
public:
	struct FText                                       AssistMessage;                                            // 0x0058(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       HatTrickMessage;                                          // 0x0070(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       OtherHatTrickMessage;                                     // 0x0088(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTAssistMessage");
		return ptr;
	}

};


// Class UnrealTournament.UTCTFGameMessage
// 0x0180 (0x01D8 - 0x0058)
class UUTCTFGameMessage : public UUTCarriedObjectMessage
{
public:
	struct FText                                       ReturnMessage;                                            // 0x0058(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       ReturnedMessage;                                          // 0x0070(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       CaptureMessagePrefix;                                     // 0x0088(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       CaptureMessagePostfix;                                    // 0x00A0(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       DroppedMessage;                                           // 0x00B8(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       HasMessage;                                               // 0x00D0(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       YouHaveMessage;                                           // 0x00E8(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       KilledMessagePrefix;                                      // 0x0100(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       KilledMessagePostfix;                                     // 0x0118(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       HasAdvantageMessage;                                      // 0x0130(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       LosingAdvantageMessage;                                   // 0x0148(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       HalftimeMessage;                                          // 0x0160(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       OvertimeMessage;                                          // 0x0178(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       NoReturnMessage;                                          // 0x0190(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       LastLifeMessage;                                          // 0x01A8(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       DefaultPowerupMessage;                                    // 0x01C0(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTCTFGameMessage");
		return ptr;
	}

};


// Class UnrealTournament.UTFlagRunGameMessage
// 0x0030 (0x0208 - 0x01D8)
class UUTFlagRunGameMessage : public UUTCTFGameMessage
{
public:
	struct FText                                       NoPowerRallyMessage;                                      // 0x01D8(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       NoDefenderRallyMessage;                                   // 0x01F0(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTFlagRunGameMessage");
		return ptr;
	}

};


// Class UnrealTournament.UTCTFMajorMessage
// 0x0170 (0x01C8 - 0x0058)
class UUTCTFMajorMessage : public UUTCarriedObjectMessage
{
public:
	struct FText                                       HalftimeMessage;                                          // 0x0058(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       OvertimeMessage;                                          // 0x0070(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       FlagReadyMessage;                                         // 0x0088(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       FlagRallyMessage;                                         // 0x00A0(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       RallyReadyMessage;                                        // 0x00B8(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       EnemyRallyMessage;                                        // 0x00D0(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       EnemyRallyPrefix;                                         // 0x00E8(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       EnemyRallyPostfix;                                        // 0x0100(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       TeamRallyMessage;                                         // 0x0118(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       RallyCompleteMessage;                                     // 0x0130(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       RallyClearMessage;                                        // 0x0148(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	class USoundBase*                                  FlagWarningSound;                                         // 0x0160(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  FlagRallySound;                                           // 0x0168(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  RallyReadySound;                                          // 0x0170(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  EnemyRallySound;                                          // 0x0178(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  RallyFinalSound;                                          // 0x0180(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  RallyCompleteSound;                                       // 0x0188(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       RallyCompleteName;                                        // 0x0190(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FText                                       PressToRallyPrefix;                                       // 0x0198(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       PressToRallyPostfix;                                      // 0x01B0(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTCTFMajorMessage");
		return ptr;
	}

};


// Class UnrealTournament.UTChatMessage
// 0x0000 (0x0058 - 0x0058)
class UUTChatMessage : public UUTLocalMessage
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTChatMessage");
		return ptr;
	}

};


// Class UnrealTournament.UTCountDownMessage
// 0x00C0 (0x0118 - 0x0058)
class UUTCountDownMessage : public UUTLocalMessage
{
public:
	struct FText                                       CountDownText;                                            // 0x0058(0x0018) (Edit, BlueprintVisible)
	struct FText                                       EndingInText;                                             // 0x0070(0x0018) (Edit, BlueprintVisible)
	struct FText                                       GoldBonusMessage;                                         // 0x0088(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       SilverBonusMessage;                                       // 0x00A0(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       RoundPrefix;                                              // 0x00B8(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       RoundPostfix;                                             // 0x00D0(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FName>                               RoundName;                                                // 0x00E8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class USoundBase*                                  TimeWarningSound;                                         // 0x00F8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  TimeEndingSound;                                          // 0x0100(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       GoldBonusName;                                            // 0x0108(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       SilverBonusName;                                          // 0x0110(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTCountDownMessage");
		return ptr;
	}

};


// Class UnrealTournament.UTCTFRewardMessage
// 0x0128 (0x0180 - 0x0058)
class UUTCTFRewardMessage : public UUTLocalMessage
{
public:
	struct FText                                       DeniedMessage;                                            // 0x0058(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       RejectedMessage;                                          // 0x0070(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       BlueTeamName;                                             // 0x0088(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       RedTeamName;                                              // 0x00A0(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       TeamScorePrefix;                                          // 0x00B8(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       TeamScorePostfix;                                         // 0x00D0(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       EarnedSpecialPrefix;                                      // 0x00E8(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       EarnedSpecialPostfix;                                     // 0x0100(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       ExclamationPostfix;                                       // 0x0118(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	class USoundBase*                                  EarnedBoostSound;                                         // 0x0130(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FText                                       AceMessage;                                               // 0x0138(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       DefenseHoldsMessage;                                      // 0x0150(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       YouShallNotPassMessage;                                   // 0x0168(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTCTFRewardMessage");
		return ptr;
	}

};


// Class UnrealTournament.UTCTFRoleMessage
// 0x0068 (0x00C0 - 0x0058)
class UUTCTFRoleMessage : public UUTLocalMessage
{
public:
	struct FText                                       EarnedSpecialMessage;                                     // 0x0058(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       EnemyTeamSpecialEarned;                                   // 0x0070(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       BoostAvailable;                                           // 0x0088(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FName                                       AttackingName;                                            // 0x00A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       DefendingName;                                            // 0x00A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ChoosePowerupName;                                        // 0x00B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  EnemyEarnedBoostSound;                                    // 0x00B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTCTFRoleMessage");
		return ptr;
	}

};


// Class UnrealTournament.UTDeathMessage
// 0x0030 (0x0088 - 0x0058)
class UUTDeathMessage : public UUTLocalMessage
{
public:
	struct FText                                       GenericKillMessage;                                       // 0x0058(0x0018) (Edit, BlueprintVisible)
	struct FText                                       SuicideKillMessage;                                       // 0x0070(0x0018) (Edit, BlueprintVisible)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTDeathMessage");
		return ptr;
	}

};


// Class UnrealTournament.UTDoorMessage
// 0x0030 (0x0088 - 0x0058)
class UUTDoorMessage : public UUTLocalMessage
{
public:
	struct FText                                       DoorOpenText;                                             // 0x0058(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       DoorClosedText;                                           // 0x0070(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTDoorMessage");
		return ptr;
	}

};


// Class UnrealTournament.UTEngineMessage
// 0x00D8 (0x0130 - 0x0058)
class UUTEngineMessage : public UUTLocalMessage
{
public:
	struct FText                                       FailedPlaceMessage;                                       // 0x0058(0x0018)
	struct FText                                       MaxedOutMessage;                                          // 0x0070(0x0018)
	struct FText                                       EnteredMessage;                                           // 0x0088(0x0018)
	struct FText                                       LeftMessage;                                              // 0x00A0(0x0018)
	struct FText                                       GlobalNameChange;                                         // 0x00B8(0x0018)
	struct FText                                       SpecEnteredMessage;                                       // 0x00D0(0x0018)
	struct FText                                       NewPlayerMessage;                                         // 0x00E8(0x0018)
	struct FText                                       NewSpecMessage;                                           // 0x0100(0x0018)
	struct FText                                       ServerNotResponding;                                      // 0x0118(0x0018)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTEngineMessage");
		return ptr;
	}

};


// Class UnrealTournament.UTFirstBloodMessage
// 0x0038 (0x0090 - 0x0058)
class UUTFirstBloodMessage : public UUTLocalMessage
{
public:
	struct FName                                       FirstBloodAnnouncement;                                   // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FText                                       FirstBloodLocalText;                                      // 0x0060(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       FirstBloodRemoteText;                                     // 0x0078(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTFirstBloodMessage");
		return ptr;
	}

};


// Class UnrealTournament.UTFlagRunCenteredMessage
// 0x0018 (0x0070 - 0x0058)
class UUTFlagRunCenteredMessage : public UUTLocalMessage
{
public:
	struct FText                                       ReturnMessage;                                            // 0x0058(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTFlagRunCenteredMessage");
		return ptr;
	}

};


// Class UnrealTournament.UTFlagRunMessage
// 0x0000 (0x0058 - 0x0058)
class UUTFlagRunMessage : public UUTLocalMessage
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTFlagRunMessage");
		return ptr;
	}

};


// Class UnrealTournament.UTGameMessage
// 0x01B0 (0x0208 - 0x0058)
class UUTGameMessage : public UUTLocalMessage
{
public:
	struct FText                                       GameBeginsMessage;                                        // 0x0058(0x0018) (Edit, BlueprintVisible)
	struct FText                                       OvertimeMessage;                                          // 0x0070(0x0018) (Edit, BlueprintVisible)
	struct FText                                       CantBeSpectator;                                          // 0x0088(0x0018) (Edit, BlueprintVisible)
	struct FText                                       CantBePlayer;                                             // 0x00A0(0x0018) (Edit, BlueprintVisible)
	struct FText                                       SwitchLevelMessage;                                       // 0x00B8(0x0018) (Edit, BlueprintVisible)
	struct FText                                       NoNameChange;                                             // 0x00D0(0x0018) (Edit, BlueprintVisible)
	struct FText                                       BecameSpectator;                                          // 0x00E8(0x0018) (Edit, BlueprintVisible)
	struct FText                                       DidntMakeTheCut;                                          // 0x0100(0x0018) (Edit, BlueprintVisible)
	struct FText                                       YouAreOn;                                                 // 0x0118(0x0018) (Edit, BlueprintVisible)
	struct FText                                       RedTeamName;                                              // 0x0130(0x0018) (Edit, BlueprintVisible)
	struct FText                                       BlueTeamName;                                             // 0x0148(0x0018) (Edit, BlueprintVisible)
	struct FText                                       KickVote;                                                 // 0x0160(0x0018) (Edit, BlueprintVisible)
	struct FText                                       NotEnoughMoney;                                           // 0x0178(0x0018) (Edit, BlueprintVisible)
	struct FText                                       PotentialSpeedHack;                                       // 0x0190(0x0018) (Edit, BlueprintVisible)
	struct FText                                       OnDeck;                                                   // 0x01A8(0x0018) (Edit, BlueprintVisible)
	struct FText                                       WeaponLocked;                                             // 0x01C0(0x0018) (Edit, BlueprintVisible)
	struct FText                                       DoorOpened;                                               // 0x01D8(0x0018) (Edit, BlueprintVisible)
	struct FText                                       DoorClosed;                                               // 0x01F0(0x0018) (Edit, BlueprintVisible)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTGameMessage");
		return ptr;
	}

};


// Class UnrealTournament.UTJumpbootMessage
// 0x0018 (0x0070 - 0x0058)
class UUTJumpbootMessage : public UUTLocalMessage
{
public:
	struct FText                                       ActivateText;                                             // 0x0058(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTJumpbootMessage");
		return ptr;
	}

};


// Class UnrealTournament.UTKillerMessage
// 0x0078 (0x00D0 - 0x0058)
class UUTKillerMessage : public UUTLocalMessage
{
public:
	struct FText                                       YouKilledPrefixText;                                      // 0x0058(0x0018) (Edit, BlueprintVisible)
	struct FText                                       YouKilledPostfixText;                                     // 0x0070(0x0018) (Edit, BlueprintVisible)
	struct FText                                       KillAssistedPrefixText;                                   // 0x0088(0x0018) (Edit, BlueprintVisible)
	struct FText                                       KillAssistedPostfixText;                                  // 0x00A0(0x0018) (Edit, BlueprintVisible)
	struct FText                                       SpecKilledText;                                           // 0x00B8(0x0018) (Edit, BlueprintVisible)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTKillerMessage");
		return ptr;
	}

};


// Class UnrealTournament.UTKillIconMessage
// 0x0000 (0x0058 - 0x0058)
class UUTKillIconMessage : public UUTLocalMessage
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTKillIconMessage");
		return ptr;
	}

};


// Class UnrealTournament.UTMultiKillMessage
// 0x0020 (0x0078 - 0x0058)
class UUTMultiKillMessage : public UUTLocalMessage
{
public:
	TArray<struct FText>                               AnnouncementText;                                         // 0x0058(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FName>                               AnnouncementNames;                                        // 0x0068(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTMultiKillMessage");
		return ptr;
	}

};


// Class UnrealTournament.UTPowerupUseMessage
// 0x0000 (0x0058 - 0x0058)
class UUTPowerupUseMessage : public UUTLocalMessage
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTPowerupUseMessage");
		return ptr;
	}

};


// Class UnrealTournament.UTPvEGameMessage
// 0x0040 (0x0098 - 0x0058)
class UUTPvEGameMessage : public UUTLocalMessage
{
public:
	struct FText                                       ReinforcementsMsg;                                        // 0x0058(0x0018) (Edit, DisableEditOnInstance)
	struct FText                                       ExtraLifeMsg;                                             // 0x0070(0x0018) (Edit, DisableEditOnInstance)
	class USoundBase*                                  ReinforcementsSound;                                      // 0x0088(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  ExtraLifeSound;                                           // 0x0090(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTPvEGameMessage");
		return ptr;
	}

};


// Class UnrealTournament.UTRedeemerLaunchAnnounce
// 0x0018 (0x0070 - 0x0058)
class UUTRedeemerLaunchAnnounce : public UUTLocalMessage
{
public:
	struct FText                                       RedeemerOnlineText;                                       // 0x0058(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTRedeemerLaunchAnnounce");
		return ptr;
	}

};


// Class UnrealTournament.UTRewardMessage
// 0x0038 (0x0090 - 0x0058)
class UUTRewardMessage : public UUTLocalMessage
{
public:
	struct FText                                       MessageText;                                              // 0x0058(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FName                                       Announcement;                                             // 0x0070(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       AnnouncementAlt;                                          // 0x0078(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       AnnouncementFive;                                         // 0x0080(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       AnnouncementHS;                                           // 0x0088(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTRewardMessage");
		return ptr;
	}

};


// Class UnrealTournament.UTShowdownGameMessage
// 0x0060 (0x00B8 - 0x0058)
class UUTShowdownGameMessage : public UUTLocalMessage
{
public:
	struct FText                                       WinByHealthMsg;                                           // 0x0058(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       TieByHealthMsg;                                           // 0x0070(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FName                                       OnDeckAnnounce;                                           // 0x0088(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       RedTeamRound;                                             // 0x0090(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       BlueTeamRound;                                            // 0x0098(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       NewRoundIn;                                               // 0x00A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       FinalRound;                                               // 0x00A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       FiveKillsLeft;                                            // 0x00B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTShowdownGameMessage");
		return ptr;
	}

};


// Class UnrealTournament.UTShowdownRewardMessage
// 0x00A8 (0x0100 - 0x0058)
class UUTShowdownRewardMessage : public UUTLocalMessage
{
public:
	struct FName                                       FinishIt;                                                 // 0x0058(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       LastMan;                                                  // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       OverCharge;                                               // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Termination;                                              // 0x0070(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Annihilation;                                             // 0x0078(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FText                                       TerminationMsg;                                           // 0x0080(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       FinishItMsg;                                              // 0x0098(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       LastManMsg;                                               // 0x00B0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       OverChargeMsg;                                            // 0x00C8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       AnnihilationMsg;                                          // 0x00E0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	class USoundBase*                                  TerminationSound;                                         // 0x00F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTShowdownRewardMessage");
		return ptr;
	}

};


// Class UnrealTournament.UTShowdownStatusMessage
// 0x0060 (0x00B8 - 0x0058)
class UUTShowdownStatusMessage : public UUTLocalMessage
{
public:
	struct FName                                       FinalLife;                                                // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FText                                       FinalLifeMsg;                                             // 0x0060(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       LivesRemainingPrefix;                                     // 0x0078(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       LivesRemainingPostfix;                                    // 0x0090(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FName>                               LivesRemaining;                                           // 0x00A8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTShowdownStatusMessage");
		return ptr;
	}

};


// Class UnrealTournament.UTSpectatorPickupMessage
// 0x0018 (0x0070 - 0x0058)
class UUTSpectatorPickupMessage : public UUTLocalMessage
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0058(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTSpectatorPickupMessage");
		return ptr;
	}

};


// Class UnrealTournament.UTSpreeMessage
// 0x0080 (0x00D8 - 0x0058)
class UUTSpreeMessage : public UUTLocalMessage
{
public:
	TArray<struct FText>                               OwnerAnnouncementText;                                    // 0x0058(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FText>                               OtherAnnouncementText;                                    // 0x0068(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FText>                               EndedAnnouncementText;                                    // 0x0078(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x20];                                      // 0x0088(0x0020) MISSED OFFSET
	TArray<struct FName>                               AnnouncementNames;                                        // 0x00A8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FName>                               WeaponAnnouncementNames;                                  // 0x00B8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	class USoundBase*                                  OtherSpreeSound;                                          // 0x00C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  OtherSpreeEndedSound;                                     // 0x00D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTSpreeMessage");
		return ptr;
	}

};


// Class UnrealTournament.UTTeamShowdownGameMessage
// 0x0048 (0x00A0 - 0x0058)
class UUTTeamShowdownGameMessage : public UUTLocalMessage
{
public:
	struct FText                                       WinByNumbersMsg;                                          // 0x0058(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       WinByHealthMsg;                                           // 0x0070(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       TieMsg;                                                   // 0x0088(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTTeamShowdownGameMessage");
		return ptr;
	}

};


// Class UnrealTournament.UTTimerMessage
// 0x0038 (0x0090 - 0x0058)
class UUTTimerMessage : public UUTLocalMessage
{
public:
	TArray<struct FText>                               CountDownText;                                            // 0x0058(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FText                                       LeadingText;                                              // 0x0068(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	TArray<struct FName>                               CountDownAnnouncements;                                   // 0x0080(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTTimerMessage");
		return ptr;
	}

};


// Class UnrealTournament.UTTranslocatorMessage
// 0x0018 (0x0070 - 0x0058)
class UUTTranslocatorMessage : public UUTLocalMessage
{
public:
	struct FText                                       DisruptedText;                                            // 0x0058(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTTranslocatorMessage");
		return ptr;
	}

};


// Class UnrealTournament.UTTutorialAnnouncement
// 0x0000 (0x0058 - 0x0058)
class UUTTutorialAnnouncement : public UUTLocalMessage
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTTutorialAnnouncement");
		return ptr;
	}

};


// Class UnrealTournament.UTVictimMessage
// 0x0048 (0x00A0 - 0x0058)
class UUTVictimMessage : public UUTLocalMessage
{
public:
	struct FText                                       YouWereKilledByPrefix;                                    // 0x0058(0x0018) (Edit, BlueprintVisible)
	struct FText                                       YouWereKilledByPostfix;                                   // 0x0070(0x0018) (Edit, BlueprintVisible)
	struct FText                                       RespawnedVictimText;                                      // 0x0088(0x0018) (Edit, BlueprintVisible)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTVictimMessage");
		return ptr;
	}

};


// Class UnrealTournament.UTVictoryMessage
// 0x00B0 (0x0108 - 0x0058)
class UUTVictoryMessage : public UUTLocalMessage
{
public:
	struct FText                                       YouHaveWonText;                                           // 0x0058(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       TeamWinsPrefix;                                           // 0x0070(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       TeamWinsPostfix;                                          // 0x0088(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       TeamWinsSecondaryPrefix;                                  // 0x00A0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       TeamWinsSecondaryPostfix;                                 // 0x00B8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       BlueTeamName;                                             // 0x00D0(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       RedTeamName;                                              // 0x00E8(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	class USoundBase*                                  VictorySound;                                             // 0x0100(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTVictoryMessage");
		return ptr;
	}

};


// Class UnrealTournament.UTPlayerInput
// 0x0040 (0x03D8 - 0x0398)
class UUTPlayerInput : public UPlayerInput
{
public:
	TArray<struct FCustomKeyBinding>                   CustomBinds;                                              // 0x0398(0x0010) (ZeroConstructor, Config)
	TArray<struct FCustomKeyBinding>                   LocalBinds;                                               // 0x03A8(0x0010) (ZeroConstructor, Config)
	TArray<struct FCustomKeyBinding>                   SpectatorBinds;                                           // 0x03B8(0x0010) (ZeroConstructor, Config)
	float                                              AccelerationPower;                                        // 0x03C8(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              Acceleration;                                             // 0x03CC(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              AccelerationOffset;                                       // 0x03D0(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              AccelerationMax;                                          // 0x03D4(0x0004) (ZeroConstructor, Config, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTPlayerInput");
		return ptr;
	}

};


// Class UnrealTournament.UTProfileSettings
// 0x0320 (0x0348 - 0x0028)
class UUTProfileSettings : public UObject
{
public:
	unsigned char                                      UnknownData00[0x4];                                       // 0x0028(0x0004) MISSED OFFSET
	unsigned char                                      bHUDWeaponBarSettingChanged : 1;                          // 0x002C(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bForcedToEpicAtLeastOnce : 1;                             // 0x002C(0x0001)
	unsigned char                                      UnknownData01[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	uint32_t                                           SettingsRevisionNum;                                      // 0x0030(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	struct FDateTime                                   SettingsSavedOn;                                          // 0x0038(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     PlayerName;                                               // 0x0040(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     ClanName;                                                 // 0x0050(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     HatPath;                                                  // 0x0060(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     LeaderHatPath;                                            // 0x0070(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                HatVariant;                                               // 0x0080(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0084(0x0004) MISSED OFFSET
	struct FString                                     EyewearPath;                                              // 0x0088(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                EyewearVariant;                                           // 0x0098(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x009C(0x0004) MISSED OFFSET
	struct FString                                     GroupTauntPath;                                           // 0x00A0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     TauntPath;                                                // 0x00B0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     Taunt2Path;                                               // 0x00C0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     IntroPath;                                                // 0x00D0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     CharacterPath;                                            // 0x00E0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	float                                              WeaponBob;                                                // 0x00F0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ViewBob;                                                  // 0x00F4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                FFAPlayerColor;                                           // 0x00F8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PlayerFOV;                                                // 0x0108(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                LocalXP;                                                  // 0x010C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FUTChallengeResult>                  ChallengeResults;                                         // 0x0110(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FUTDailyChallengeUnlock>             UnlockedDailyChallenges;                                  // 0x0120(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      bSuppressToastsInGame : 1;                                // 0x0130(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bCustomWeaponCrosshairs : 1;                              // 0x0130(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bSingleCustomWeaponCrosshair : 1;                         // 0x0130(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bAutoWeaponSwitch : 1;                                    // 0x0130(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0131(0x0003) MISSED OFFSET
	EWeaponHand                                        WeaponHand;                                               // 0x0134(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x0135(0x0003) MISSED OFFSET
	struct FWeaponCustomizationInfo                    SingleCustomWeaponCrosshair;                              // 0x0138(0x0038) (BlueprintVisible, BlueprintReadOnly)
	TArray<int>                                        WeaponWheelMapping;                                       // 0x0170(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TMap<struct FName, struct FWeaponCustomizationInfo> WeaponCustomizations;                                     // 0x0180(0x0050) (ZeroConstructor)
	TMap<struct FName, struct FString>                 WeaponSkins;                                              // 0x01D0(0x0050) (ZeroConstructor)
	int                                                ReplayScreenshotResX;                                     // 0x0220(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ReplayScreenshotResY;                                     // 0x0224(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bReplayCustomPostProcess : 1;                             // 0x0228(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData07[0x3];                                       // 0x0229(0x0003) MISSED OFFSET
	float                                              ReplayCustomBloomIntensity;                               // 0x022C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ReplayCustomDOFAmount;                                    // 0x0230(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ReplayCustomDOFDistance;                                  // 0x0234(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ReplayCustomDOFScale;                                     // 0x0238(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ReplayCustomDOFNearBlur;                                  // 0x023C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ReplayCustomDOFFarBlur;                                   // 0x0240(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ReplayCustomMotionBlurAmount;                             // 0x0244(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ReplayCustomMotionBlurMax;                                // 0x0248(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x4];                                       // 0x024C(0x0004) MISSED OFFSET
	struct FString                                     MatchmakingRegion;                                        // 0x0250(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      bPushToTalk : 1;                                          // 0x0260(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bHearsTaunts : 1;                                         // 0x0260(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData09[0x3];                                       // 0x0261(0x0003) MISSED OFFSET
	float                                              QuickStatsDistance;                                       // 0x0264(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       QuickStatsType;                                           // 0x0268(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              QuickStatsBackgroundAlpha;                                // 0x0270(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              QuickStatsForegroundAlpha;                                // 0x0274(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bQuickStatsHidden : 1;                                    // 0x0278(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bQuickInfoHidden : 1;                                     // 0x0278(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bHealthArcShown : 1;                                      // 0x0278(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData10[0x3];                                       // 0x0279(0x0003) MISSED OFFSET
	int                                                HealthArcRadius;                                          // 0x027C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              QuickStatsScaleOverride;                                  // 0x0280(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bHideDamageIndicators : 1;                                // 0x0284(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bHidePaperdoll : 1;                                       // 0x0284(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bVerticalWeaponBar : 1;                                   // 0x0284(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData11[0x3];                                       // 0x0285(0x0003) MISSED OFFSET
	float                                              HUDWidgetOpacity;                                         // 0x0288(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              HUDWidgetBorderOpacity;                                   // 0x028C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              HUDWidgetSlateOpacity;                                    // 0x0290(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              HUDWidgetWeaponbarInactiveOpacity;                        // 0x0294(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              HUDWidgetWeaponBarScaleOverride;                          // 0x0298(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              HUDWidgetWeaponBarInactiveIconOpacity;                    // 0x029C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              HUDWidgetWeaponBarEmptyOpacity;                           // 0x02A0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              HUDWidgetScaleOverride;                                   // 0x02A4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              HUDMessageScaleOverride;                                  // 0x02A8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bUseWeaponColors : 1;                                     // 0x02AC(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bDrawChatKillMsg : 1;                                     // 0x02AC(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bDrawCenteredKillMsg : 1;                                 // 0x02AC(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bDrawHUDKillIconMsg : 1;                                  // 0x02AC(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bPlayKillSoundMsg : 1;                                    // 0x02AC(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData12[0x3];                                       // 0x02AD(0x0003) MISSED OFFSET
	TArray<struct FKeyConfigurationInfo>               GameActions;                                              // 0x02B0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      bEnableMouseSmoothing : 1;                                // 0x02C0(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bInvertMouse : 1;                                         // 0x02C0(0x0001) (BlueprintVisible)
	unsigned char                                      UnknownData13[0x3];                                       // 0x02C1(0x0003) MISSED OFFSET
	float                                              MouseAcceleration;                                        // 0x02C4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MouseAccelerationPower;                                   // 0x02C8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MouseAccelerationMax;                                     // 0x02CC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DoubleClickTime;                                          // 0x02D0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MouseSensitivity;                                         // 0x02D4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxDodgeClickTimeValue;                                   // 0x02D8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bEnableDoubleTapDodge : 1;                                // 0x02DC(0x0001) (BlueprintVisible)
	unsigned char                                      UnknownData14[0x3];                                       // 0x02DD(0x0003) MISSED OFFSET
	float                                              MaxDodgeTapTimeValue;                                     // 0x02E0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bSingleTapWallDodge : 1;                                  // 0x02E4(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bSingleTapAfterJump : 1;                                  // 0x02E4(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bAllowSlideFromRun : 1;                                   // 0x02E4(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData15[0x3];                                       // 0x02E5(0x0003) MISSED OFFSET
	int                                                DefaultBotSkillLevel;                                     // 0x02E8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EComFilter>                            ComFilter;                                                // 0x02EC(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData16[0x3];                                       // 0x02ED(0x0003) MISSED OFFSET
	int                                                TutorialMask;                                             // 0x02F0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      SkipOnboarding : 1;                                       // 0x02F4(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData17[0x3];                                       // 0x02F5(0x0003) MISSED OFFSET
	TMap<int, int>                                     TutorialVideoWatchCount;                                  // 0x02F8(0x0050) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTProfileSettings");
		return ptr;
	}


	struct FString GetWeaponSkinClassname(class AUTWeapon* Weapon);
	void GetWeaponGroup(class AUTWeapon* WeaponClass, int* WeaponGroup, int* GroupPriority);
	void GetWeaponCustomizationForWeapon(class AUTWeapon* Weapon, struct FWeaponCustomizationInfo* outWeaponCustomizationInfo);
	void GetWeaponCustomization(const struct FName& WeaponCustomizationTag, struct FWeaponCustomizationInfo* outWeaponCustomizationInfo);
	struct FString GetPlayerName();
	void ApplyInputSettings(class UUTLocalPlayer* ProfilePlayer);
};


// Class UnrealTournament.UTProgressionStorage
// 0x00C0 (0x00E8 - 0x0028)
class UUTProgressionStorage : public UObject
{
public:
	uint32_t                                           RevisionNum;                                              // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	TArray<struct FUTChallengeResult>                  ChallengeResults;                                         // 0x0030(0x0010) (ZeroConstructor)
	TArray<struct FUTDailyChallengeUnlock>             UnlockedDailyChallenges;                                  // 0x0040(0x0010) (ZeroConstructor)
	int                                                TotalChallengeStars;                                      // 0x0050(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                TutorialMask;                                             // 0x0054(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                SkullCount;                                               // 0x0058(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x005C(0x0004) MISSED OFFSET
	TArray<struct FName>                               Achievements;                                             // 0x0060(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0070(0x0008) MISSED OFFSET
	TArray<struct FName>                               FoundTokenUniqueIDs;                                      // 0x0078(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData03[0x10];                                      // 0x0088(0x0010) MISSED OFFSET
	TMap<struct FName, float>                          BestTimes;                                                // 0x0098(0x0050) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTProgressionStorage");
		return ptr;
	}

};


// Class UnrealTournament.UTLocalPlayer
// 0x0C30 (0x0DC0 - 0x0190)
class UUTLocalPlayer : public ULocalPlayer
{
public:
	struct FString                                     ClanName;                                                 // 0x0190(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData00[0x18];                                      // 0x01A0(0x0018) MISSED OFFSET
	TArray<class UUTUMGWidget*>                        UMGWidgetStack;                                           // 0x01B8(0x0010) (ZeroConstructor)
	TArray<class UUTUMGWidget*>                        ToastStack;                                               // 0x01C8(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData01[0x10];                                      // 0x01D8(0x0010) MISSED OFFSET
	struct FString                                     TutorialLaunchParams;                                     // 0x01E8(0x0010) (ZeroConstructor, Config)
	bool                                               bFragCenterAutoPlay;                                      // 0x01F8(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bFragCenterAutoMute;                                      // 0x01F9(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x01FA(0x0006) MISSED OFFSET
	struct FString                                     YoutubeAccessToken;                                       // 0x0200(0x0010) (ZeroConstructor, Config)
	struct FString                                     YoutubeRefreshToken;                                      // 0x0210(0x0010) (ZeroConstructor, Config)
	unsigned char                                      UnknownData03[0xB8];                                      // 0x0220(0x00B8) MISSED OFFSET
	struct FString                                     StoredLastConnectToIP;                                    // 0x02D8(0x0010) (ZeroConstructor, Config)
	struct FString                                     LastConnectToIP;                                          // 0x02E8(0x0010) (ZeroConstructor)
	unsigned char                                      bNoMidGameMenu : 1;                                       // 0x02F8(0x0001) (Config)
	unsigned char                                      UnknownData04[0x7];                                       // 0x02F9(0x0007) MISSED OFFSET
	struct FString                                     PlayerNickname;                                           // 0x0300(0x0010) (ZeroConstructor)
	struct FString                                     LastEpicIDLogin;                                          // 0x0310(0x0010) (ZeroConstructor, Config)
	struct FString                                     LastEpicRememberMeToken;                                  // 0x0320(0x0010) (ZeroConstructor, Config)
	unsigned char                                      UnknownData05[0x110];                                     // 0x0330(0x0110) MISSED OFFSET
	struct FString                                     LastRankedMatchPlayerId;                                  // 0x0440(0x0010) (ZeroConstructor, Config)
	struct FString                                     LastRankedMatchSessionId;                                 // 0x0450(0x0010) (ZeroConstructor, Config)
	struct FString                                     LastRankedMatchTimeString;                                // 0x0460(0x0010) (ZeroConstructor, Config)
	unsigned char                                      UnknownData06[0x100];                                     // 0x0470(0x0100) MISSED OFFSET
	class UUTProfileSettings*                          CurrentProfileSettings;                                   // 0x0570(0x0008) (ZeroConstructor, IsPlainOldData)
	class UUTProgressionStorage*                       CurrentProgression;                                       // 0x0578(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x2D8];                                     // 0x0580(0x02D8) MISSED OFFSET
	unsigned char                                      bShowBrowserIconOnMainMenu : 1;                           // 0x0858(0x0001) (Config)
	unsigned char                                      UnknownData08[0x4B];                                      // 0x0859(0x004B) MISSED OFFSET
	int                                                ServerPingBlockSize;                                      // 0x08A4(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData09[0xE8];                                      // 0x08A8(0x00E8) MISSED OFFSET
	struct FText                                       RosterUpgradeText;                                        // 0x0990(0x0018)
	int                                                EarnedStars;                                              // 0x09A8(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0xE4];                                      // 0x09AC(0x00E4) MISSED OFFSET
	int                                                ChallengeRevisionNumber;                                  // 0x0A90(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData11[0x5C];                                      // 0x0A94(0x005C) MISSED OFFSET
	int                                                FragCenterCounter;                                        // 0x0AF0(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData12[0x5C];                                      // 0x0AF4(0x005C) MISSED OFFSET
	class UObject*                                     McpProfileManager;                                        // 0x0B50(0x0008) (ZeroConstructor, IsPlainOldData)
	class UObject*                                     ActiveMcpProfileManager;                                  // 0x0B58(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<class UObject*>                             SharedMcpProfileManager;                                  // 0x0B60(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData13[0x118];                                     // 0x0B70(0x0118) MISSED OFFSET
	bool                                               bAutoRankLockWarningShown;                                // 0x0C88(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData14[0x7];                                       // 0x0C89(0x0007) MISSED OFFSET
	class UUTKillcamPlayback*                          KillcamPlayback;                                          // 0x0C90(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData15[0x38];                                      // 0x0C98(0x0038) MISSED OFFSET
	bool                                               bLoginAttemptInProgress;                                  // 0x0CD0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bPlayingOffline;                                          // 0x0CD1(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bCloseUICalledDuringMoviePlayback;                        // 0x0CD2(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bDelayedCloseUIExcludesDialogs;                           // 0x0CD3(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bHideMenuCalledDuringMoviePlayback;                       // 0x0CD4(0x0001) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ELoginPhase>                           LoginPhase;                                               // 0x0CD5(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData16[0x2];                                       // 0x0CD6(0x0002) MISSED OFFSET
	TArray<struct FTutorialData>                       TutorialData;                                             // 0x0CD8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               bQuickmatchOnLevelChange;                                 // 0x0CE8(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData17[0x3];                                       // 0x0CE9(0x0003) MISSED OFFSET
	int                                                PendingQuickmatchType;                                    // 0x0CEC(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FName                                       LastTutorial;                                             // 0x0CF0(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData18[0x20];                                      // 0x0CF8(0x0020) MISSED OFFSET
	int                                                LastLoadedVersionNumber;                                  // 0x0D18(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData19[0x4];                                       // 0x0D1C(0x0004) MISSED OFFSET
	class UUTUMGWidget*                                SavingWidget;                                             // 0x0D20(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData20[0x60];                                      // 0x0D28(0x0060) MISSED OFFSET
	TArray<struct FUTGameModeCountStorage>             GameModeCounts;                                           // 0x0D88(0x0010) (ZeroConstructor, Config)
	TArray<struct FString>                             GameMuteList;                                             // 0x0D98(0x0010) (ZeroConstructor)
	struct FString                                     ReturnDestinationGuidString;                              // 0x0DA8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      UnknownData21[0x8];                                       // 0x0DB8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTLocalPlayer");
		return ptr;
	}


	void UpdateCheck();
	void ShowRankedReconnectDialog(const struct FString& UniqueId);
	void SetPartyType(EPartyType InPartyType, bool bLeaderFriendsOnly, bool bLeaderInvitesOnly);
	void SendFriendRequest(class AUTPlayerState* DesiredPlayerState);
	void SaveProgression();
	void RestartTutorial();
	void PrevTutorial();
	class UUTUMGWidget* OpenUMGWidget(const struct FString& UMGClass);
	void NextTutorial();
	void LaunchTutorial(const struct FName& TutorialName);
	bool LaunchPendingQuickmatch();
	bool IsTutorialMaskCompleted(int TutorialMask);
	bool IsTutorialCompleted(const struct FName& TutorialName);
	bool IsSystemMenuOpen();
	bool IsKillcamReplayActive();
	struct FText GetTutorialSectionText(TEnumAsByte<ETutorialSections> Section);
	int GetTutorialMask();
	void STATIC_GetStarsFromXP(int XPValue, int* StarLevel);
	class UUTProfileSettings* GetProfileSettings();
	struct FText GetPrevTutorialName();
	struct FText GetNextTutorialName();
	struct FText GetBestTutorialTime(const struct FName& TutorialName);
	class UUTUMGWidget* FindUMGWidget(const struct FName& SearchTag);
	void CloseUMGWidgetByTag(const struct FName& Tag);
	void CloseUMGWidget(class UUTUMGWidget* WidgetToClose);
	void CloseSavingWidget();
	void CheckForNewUpdate();
	void ChangeStatsViewerTarget(const struct FString& InStatsID);
	bool bIsQuickmatchDialogOpen();
	bool AreMenusOpen();
};


// Class UnrealTournament.UTPartyBeaconState
// 0x0028 (0x0098 - 0x0070)
class UUTPartyBeaconState : public UPartyBeaconState
{
public:
	struct FUniqueNetIdRepl                            GameSessionOwner;                                         // 0x0070(0x0018)
	struct FEmptyServerReservation                     ReservationData;                                          // 0x0088(0x000C)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0094(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTPartyBeaconState");
		return ptr;
	}

};


// Class UnrealTournament.UTPartyBeaconClient
// 0x00A0 (0x05F0 - 0x0550)
class AUTPartyBeaconClient : public APartyBeaconClient
{
public:
	float                                              ReconnectionInitialTimeout;                               // 0x0550(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              ReconnectionTimeout;                                      // 0x0554(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bHasReconnected;                                          // 0x0558(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0559(0x0003) MISSED OFFSET
	struct FEmptyServerReservation                     PendingEmptyReservation;                                  // 0x055C(0x000C)
	unsigned char                                      UnknownData01[0x88];                                      // 0x0568(0x0088) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTPartyBeaconClient");
		return ptr;
	}


	void ServerEmptyServerReservationRequest(const struct FString& InSessionId, const struct FEmptyServerReservation& ReservationData, const struct FPartyReservation& Reservation);
	void ClientAllowedToProceedFromReservationTimeout();
	void ClientAllowedToProceedFromReservation();
};


// Class UnrealTournament.UTSessionHelper
// 0x01B8 (0x01E0 - 0x0028)
class UUTSessionHelper : public UObject
{
public:
	class UClass*                                      BeaconClientClass;                                        // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AUTPartyBeaconClient*                        PartyBeaconClient;                                        // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0xD0];                                      // 0x0038(0x00D0) MISSED OFFSET
	struct FName                                       CurrentSessionName;                                       // 0x0108(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TEnumAsByte<EPartyReservationResult>               LastBeaconResponse;                                       // 0x0110(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	TEnumAsByte<EUTSessionHelperJoinState>             CurrentJoinState;                                         // 0x0111(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	TEnumAsByte<EUTSessionHelperJoinResult>            CurrentJoinResult;                                        // 0x0112(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0xCD];                                      // 0x0113(0x00CD) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTSessionHelper");
		return ptr;
	}

};


// Class UnrealTournament.UTSearchPass
// 0x0298 (0x02C0 - 0x0028)
class UUTSearchPass : public UObject
{
public:
	unsigned char                                      UnknownData00[0x148];                                     // 0x0028(0x0148) MISSED OFFSET
	class UUTSessionHelper*                            SessionHelper;                                            // 0x0170(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x48];                                      // 0x0178(0x0048) MISSED OFFSET
	struct FUTSearchPassParams                         CurrentSearchParams;                                      // 0x01C0(0x0028) (Transient)
	struct FUTSearchPassState                          CurrentSearchPassState;                                   // 0x01E8(0x0030) (Transient)
	unsigned char                                      UnknownData02[0xA8];                                      // 0x0218(0x00A8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTSearchPass");
		return ptr;
	}

};


// Class UnrealTournament.UTMatchmakingPolicy
// 0x0108 (0x0130 - 0x0028)
class UUTMatchmakingPolicy : public UObject
{
public:
	unsigned char                                      UnknownData00[0x88];                                      // 0x0028(0x0088) MISSED OFFSET
	struct FName                                       SessionName;                                              // 0x00B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bMatchmakingInProgress;                                   // 0x00B8(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x00B9(0x0007) MISSED OFFSET
	struct FMatchmakingParams                          CurrentParams;                                            // 0x00C0(0x0060) (Transient)
	class UUTSearchPass*                               MMPass;                                                   // 0x0120(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0128(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTMatchmakingPolicy");
		return ptr;
	}

};


// Class UnrealTournament.UTMatchmaking
// 0x0408 (0x0430 - 0x0028)
class UUTMatchmaking : public UObject
{
public:
	unsigned char                                      UnknownData00[0x238];                                     // 0x0028(0x0238) MISSED OFFSET
	class UClass*                                      ReservationBeaconClientClass;                             // 0x0260(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AUTPartyBeaconClient*                        ReservationBeaconClient;                                  // 0x0268(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                ControllerId;                                             // 0x0270(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0274(0x0004) MISSED OFFSET
	struct FUTCachedMatchmakingSearchParams            CachedMatchmakingSearchParams;                            // 0x0278(0x0070)
	unsigned char                                      UnknownData02[0xB8];                                      // 0x02E8(0x00B8) MISSED OFFSET
	class UUTMatchmakingPolicy*                        Matchmaking;                                              // 0x03A0(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x10];                                      // 0x03A8(0x0010) MISSED OFFSET
	bool                                               bQueuedTravelToServer;                                    // 0x03B8(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x03B9(0x0003) MISSED OFFSET
	float                                              TimeMatchmakingStarted;                                   // 0x03BC(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                EstimatedWaitTime;                                        // 0x03C0(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x6C];                                      // 0x03C4(0x006C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTMatchmaking");
		return ptr;
	}

};


// Class UnrealTournament.UTMatchmakingGather
// 0x0010 (0x0140 - 0x0130)
class UUTMatchmakingGather : public UUTMatchmakingPolicy
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0130(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTMatchmakingGather");
		return ptr;
	}

};


// Class UnrealTournament.UTMatchmakingSingleSession
// 0x0040 (0x0170 - 0x0130)
class UUTMatchmakingSingleSession : public UUTMatchmakingPolicy
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0130(0x0030) MISSED OFFSET
	class UUTSessionHelper*                            SessionHelper;                                            // 0x0160(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0168(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTMatchmakingSingleSession");
		return ptr;
	}

};


// Class UnrealTournament.UTMatineeActor
// 0x0008 (0x0438 - 0x0430)
class AUTMatineeActor : public AMatineeActor
{
public:
	float                                              PathBuildingPosition;                                     // 0x0430(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0434(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTMatineeActor");
		return ptr;
	}

};


// Class UnrealTournament.UTMcpUtils
// 0x0020 (0x0048 - 0x0028)
class UUTMcpUtils : public UObject
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0028(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTMcpUtils");
		return ptr;
	}

};


// Class UnrealTournament.UTMutator
// 0x0068 (0x03F0 - 0x0388)
class AUTMutator : public AInfo
{
public:
	class AUTMutator*                                  NextMutator;                                              // 0x0388(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FName>                               GroupNames;                                               // 0x0390(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FText                                       DisplayName;                                              // 0x03A0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       Author;                                                   // 0x03B8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       Description;                                              // 0x03D0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	class UClass*                                      ConfigMenu;                                               // 0x03E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTMutator");
		return ptr;
	}


	void TriggerBoost(class AUTPlayerState* Who);
	void ScoreObject(class AUTCarriedObject* GameObject, class AUTCharacter* HolderPawn, class AUTPlayerState* Holder, const struct FName& Reason);
	void ScoreKill(class AController* Killer, class AController* Other, class UClass* DamageType);
	void ScoreDamage(int DamageAmount, class AUTPlayerState* Victim, class AUTPlayerState* Attacker);
	bool PreventDeath(class APawn* KilledPawn, class AController* Killer, class UClass* DamageType, const struct FHitResult& HitInfo);
	void PostPlayerInit(class AController* C);
	struct FString ParseOption(const struct FString& Options, const struct FString& InKey);
	bool OverridePickupQuery(class APawn* Other, class UClass* ItemClass, class AActor* Pickup, bool* bAllowPickup);
	void NotifyMatchStateChange(const struct FName& NewState);
	void NotifyLogout(class AController* C);
	void Mutate(const struct FString& MutateString, class APlayerController* Sender);
	void ModifyPlayer(class APawn* Other, bool bIsNewSpawn);
	void ModifyLogin(struct FString* Portal, struct FString* Options);
	void ModifyInventory(class AUTInventory* Inv, class AUTCharacter* NewOwner);
	bool ModifyDamage(class APawn* Injured, class AController* InstigatedBy, const struct FHitResult& HitInfo, class AActor* DamageCauser, class UClass* DamageType, int* Damage, struct FVector* Momentum);
	void Init(const struct FString& Options);
	bool HasOption(const struct FString& Options, const struct FString& InKey);
	int GetIntOption(const struct FString& Options, const struct FString& ParseString, int CurrentValue);
	void GetGameURLOptions(TArray<struct FString>* OptionsList);
	bool CheckRelevance(class AActor* Other);
	bool AlwaysKeep(class AActor* Other, bool* bPreventModify);
	bool AllowTextMessage(bool bIsTeamMessage, class AUTBasePlayerController* Sender, struct FString* Msg);
	void AddDefaultInventory(class UClass* InventoryClass);
};


// Class UnrealTournament.UTMutator_GameSpeed
// 0x0008 (0x03F8 - 0x03F0)
class AUTMutator_GameSpeed : public AUTMutator
{
public:
	float                                              GameSpeed;                                                // 0x03F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x03F4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTMutator_GameSpeed");
		return ptr;
	}

};


// Class UnrealTournament.UTMutator_WeaponArena
// 0x0028 (0x0418 - 0x03F0)
class AUTMutator_WeaponArena : public AUTMutator
{
public:
	struct FString                                     ArenaWeaponPath;                                          // 0x03F0(0x0010) (BlueprintVisible, ZeroConstructor, Config)
	bool                                               bAllowTranslocator;                                       // 0x0400(0x0001) (BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0401(0x0007) MISSED OFFSET
	class UClass*                                      ArenaWeaponType;                                          // 0x0408(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ArenaAmmoType;                                            // 0x0410(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTMutator_WeaponArena");
		return ptr;
	}

};


// Class UnrealTournament.UTMutator_WeaponReplacement
// 0x0010 (0x0400 - 0x03F0)
class AUTMutator_WeaponReplacement : public AUTMutator
{
public:
	TArray<struct FReplacementInfo>                    WeaponsToReplace;                                         // 0x03F0(0x0010) (BlueprintVisible, ZeroConstructor, Config)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTMutator_WeaponReplacement");
		return ptr;
	}

};


// Class UnrealTournament.UTNavArea_Default
// 0x0000 (0x0040 - 0x0040)
class UUTNavArea_Default : public UNavArea_Default
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTNavArea_Default");
		return ptr;
	}

};


// Class UnrealTournament.UTNavBlockingVolume
// 0x0010 (0x03D0 - 0x03C0)
class AUTNavBlockingVolume : public AVolume
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x03C0(0x0008) MISSED OFFSET
	bool                                               bBlockSpecialMoveTests;                                   // 0x03C8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x03C9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTNavBlockingVolume");
		return ptr;
	}

};


// Class UnrealTournament.UTNavGraphRenderingComponent
// 0x0000 (0x06A0 - 0x06A0)
class UUTNavGraphRenderingComponent : public UPrimitiveComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTNavGraphRenderingComponent");
		return ptr;
	}

};


// Class UnrealTournament.UTNavigationSystem
// 0x0000 (0x0460 - 0x0460)
class UUTNavigationSystem : public UNavigationSystem
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTNavigationSystem");
		return ptr;
	}

};


// Class UnrealTournament.UTNavMeshRenderingComponent
// 0x0000 (0x06B0 - 0x06B0)
class UUTNavMeshRenderingComponent : public UNavMeshRenderingComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTNavMeshRenderingComponent");
		return ptr;
	}

};


// Class UnrealTournament.UTPainVolume
// 0x0538 (0x0930 - 0x03F8)
class AUTPainVolume : public APainCausingVolume
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x03F8(0x0010) MISSED OFFSET
	class USoundBase*                                  EntrySound;                                               // 0x0408(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  ExitSound;                                                // 0x0410(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PawnEntryVelZScaling;                                     // 0x0418(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BrakingDecelerationSwimming;                              // 0x041C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FOverlayEffect                              InVolumeEffect;                                           // 0x0420(0x0018) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0438(0x0008) MISSED OFFSET
	struct FPostProcessSettings                        Settings;                                                 // 0x0440(0x04C0) (Edit, BlueprintVisible)
	float                                              BlendRadius;                                              // 0x0900(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BlendWeight;                                              // 0x0904(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                ImmuneTeamIndex;                                          // 0x0908(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x090C(0x0004) MISSED OFFSET
	struct FText                                       VolumeName;                                               // 0x0910(0x0018) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0928(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTPainVolume");
		return ptr;
	}


	void AddOverlayMaterials(class AUTGameState* GS);
};


// Class UnrealTournament.UTParty
// 0x0070 (0x04E0 - 0x0470)
class UUTParty : public UParty
{
public:
	unsigned char                                      UnknownData00[0x70];                                      // 0x0470(0x0070) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTParty");
		return ptr;
	}

};


// Class UnrealTournament.UTPartyBeaconHost
// 0x0090 (0x05A0 - 0x0510)
class AUTPartyBeaconHost : public APartyBeaconHost
{
public:
	unsigned char                                      UnknownData00[0x9];                                       // 0x0510(0x0009) MISSED OFFSET
	bool                                               bReservationsLocked;                                      // 0x0519(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x86];                                      // 0x051A(0x0086) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTPartyBeaconHost");
		return ptr;
	}

};


// Class UnrealTournament.UTPartyGameState
// 0x0280 (0x07F0 - 0x0570)
class UUTPartyGameState : public UPartyGameState
{
public:
	unsigned char                                      UnknownData00[0x1C0];                                     // 0x0570(0x01C0) MISSED OFFSET
	struct FUTPartyRepState                            PartyState;                                               // 0x0730(0x0048)
	unsigned char                                      UnknownData01[0x78];                                      // 0x0778(0x0078) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTPartyGameState");
		return ptr;
	}

};


// Class UnrealTournament.UTPartyMemberState
// 0x0010 (0x0088 - 0x0078)
class UUTPartyMemberState : public UPartyMemberState
{
public:
	struct FUTPartyMemberRepState                      MemberState;                                              // 0x0078(0x0010) (Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTPartyMemberState");
		return ptr;
	}

};


// Class UnrealTournament.UTWorldSettings
// 0x00C8 (0x05F8 - 0x0530)
class AUTWorldSettings : public AWorldSettings
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0530(0x0008) MISSED OFFSET
	float                                              MaxImpactEffectVisibleLifetime;                           // 0x0538(0x0004) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	float                                              MaxImpactEffectInvisibleLifetime;                         // 0x053C(0x0004) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	TArray<struct FTimedImpactEffect>                  TimedEffects;                                             // 0x0540(0x0010) (ZeroConstructor)
	TArray<struct FTimedImpactEffect>                  FadingEffects;                                            // 0x0550(0x0010) (ZeroConstructor)
	class UUTLevelSummary*                             LevelSummary;                                             // 0x0560(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	bool                                               bAllowSideSwitching;                                      // 0x0568(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0569(0x0003) MISSED OFFSET
	struct FVector                                     LoadingCameraLocation;                                    // 0x056C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    LoadingCameraRotation;                                    // 0x0578(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0584(0x0004) MISSED OFFSET
	class USoundBase*                                  Music;                                                    // 0x0588(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bUseCapsuleDirectShadowsForCharacter;                     // 0x0590(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0591(0x0003) MISSED OFFSET
	int                                                DefaultRoundLength;                                       // 0x0594(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAudioComponent*                             MusicComp;                                                // 0x0598(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TArray<class AUTPickup*>                           PerPlayerPickups;                                         // 0x05A0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<class AUTPerTeamHiddenActor*>               PerTeamHiddenActors;                                      // 0x05B0(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData04[0x10];                                      // 0x05C0(0x0010) MISSED OFFSET
	float                                              ImpactEffectFadeTime;                                     // 0x05D0(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              ImpactEffectFadeSpeed;                                    // 0x05D4(0x0004) (ZeroConstructor, IsPlainOldData)
	TArray<struct FTimedMaterialParameter>             MaterialParamCurves;                                      // 0x05D8(0x0010) (ZeroConstructor)
	TArray<struct FTimedLightParameter>                LightParamCurves;                                         // 0x05E8(0x0010) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTWorldSettings");
		return ptr;
	}


	void LevelActorDestroyed(class AActor* TheActor);
	class AUTWorldSettings* STATIC_GetWorldSettings(class UObject* WorldContextObject);
	void AddTimedMaterialParameter(class UMaterialInstanceDynamic* InMI, const struct FName& InParamName, class UCurveBase* InCurve, bool bInClearOnComplete);
	void AddTimedLightParameter(class ULightComponent* InLight, TEnumAsByte<ETimedLightParameter> InParam, class UCurveBase* InCurve);
};


// Class UnrealTournament.UTPerTeamHiddenActor
// 0x0008 (0x0390 - 0x0388)
class AUTPerTeamHiddenActor : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0388(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTPerTeamHiddenActor");
		return ptr;
	}

};


// Class UnrealTournament.UTPhysicsVortex
// 0x0018 (0x03A0 - 0x0388)
class AUTPhysicsVortex : public AActor
{
public:
	float                                              StartingForce;                                            // 0x0388(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ForcePerSecond;                                           // 0x038C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Radius;                                                   // 0x0390(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0394(0x0004) MISSED OFFSET
	class UClass*                                      DamageType;                                               // 0x0398(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTPhysicsVortex");
		return ptr;
	}

};


// Class UnrealTournament.UTShockComboEffect
// 0x0008 (0x03A8 - 0x03A0)
class AUTShockComboEffect : public AUTPhysicsVortex
{
public:
	class UClass*                                      ImpactEffect;                                             // 0x03A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTShockComboEffect");
		return ptr;
	}

};


// Class UnrealTournament.UTPickupEnergy
// 0x0020 (0x05B0 - 0x0590)
class AUTPickupEnergy : public AUTPickup
{
public:
	struct FName                                       StatsNameCount;                                           // 0x0590(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UMeshComponent*                              Mesh;                                                     // 0x0598(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, IsPlainOldData)
	class UMeshComponent*                              GhostMesh;                                                // 0x05A0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, IsPlainOldData)
	class UMaterialInterface*                          GhostMeshMaterial;                                        // 0x05A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTPickupEnergy");
		return ptr;
	}

};


// Class UnrealTournament.UTWeaponLocker
// 0x0040 (0x05D0 - 0x0590)
class AUTWeaponLocker : public AUTPickup
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0590(0x0008) MISSED OFFSET
	TArray<struct FWeaponLockerItem>                   WeaponList;                                               // 0x0598(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor)
	TArray<class UMeshComponent*>                      WeaponMeshes;                                             // 0x05A8(0x0010) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FWeaponPickupCustomer>               Customers;                                                // 0x05B8(0x0010) (BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData01[0x8];                                       // 0x05C8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTWeaponLocker");
		return ptr;
	}


	void WeaponListUpdated();
	void SetWeaponList(TArray<struct FWeaponLockerItem> InList);
};


// Class UnrealTournament.UTPickupToken
// 0x0020 (0x03A8 - 0x0388)
class AUTPickupToken : public AActor
{
public:
	struct FName                                       TokenUniqueID;                                            // 0x0388(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	struct FString                                     TokenDescription;                                         // 0x0390(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate)
	bool                                               bIsPickedUp;                                              // 0x03A0(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x03A1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTPickupToken");
		return ptr;
	}


	void Revoke();
	void PickedUp();
	bool HasBeenPickedUpBefore();
};


// Class UnrealTournament.UTPlayerCameraManager
// 0x0560 (0x1F30 - 0x19D0)
class AUTPlayerCameraManager : public APlayerCameraManager
{
public:
	struct FPostProcessSettings                        DefaultPPSettings;                                        // 0x19D0(0x04C0) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	TArray<struct FPostProcessSettings>                StylizedPPSettings;                                       // 0x1E90(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	class UMaterialInterface*                          OutlineMat;                                               // 0x1EA0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x20];                                      // 0x1EA8(0x0020) MISSED OFFSET
	class AActor*                                      LastThirdPersonTarget;                                    // 0x1EC8(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              ThirdPersonCameraSmoothingSpeed;                          // 0x1ED0(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	struct FVector                                     FlagBaseFreeCamOffset;                                    // 0x1ED4(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     EndGameFreeCamOffset;                                     // 0x1EE0(0x000C) (ZeroConstructor, IsPlainOldData)
	float                                              EndGameFreeCamDistance;                                   // 0x1EEC(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              DeathCamDistance;                                         // 0x1EF0(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     DeathCamPosition;                                         // 0x1EF4(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     DeathCamFocalPoint;                                       // 0x1F00(0x000C) (ZeroConstructor, IsPlainOldData)
	float                                              DeathCamFOV;                                              // 0x1F0C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              CurrentCamBonus;                                          // 0x1F10(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              FlagCamBonus;                                             // 0x1F14(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              PowerupBonus;                                             // 0x1F18(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              HigherScoreBonus;                                         // 0x1F1C(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              CurrentActionBonus;                                       // 0x1F20(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              CurrentCameraRoll;                                        // 0x1F24(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              WallSlideCameraRoll;                                      // 0x1F28(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x1F2C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTPlayerCameraManager");
		return ptr;
	}

};


// Class UnrealTournament.UTTeamPlayerStart
// 0x0010 (0x03E0 - 0x03D0)
class AUTTeamPlayerStart : public AUTPlayerStart
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x03D0(0x0008) MISSED OFFSET
	unsigned char                                      TeamNum;                                                  // 0x03D8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x03D9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTTeamPlayerStart");
		return ptr;
	}

};


// Class UnrealTournament.UTPowerupSelectorUserWidget
// 0x0018 (0x0248 - 0x0230)
class UUTPowerupSelectorUserWidget : public UUserWidget
{
public:
	TArray<class UClass*>                              SelectablePowerups;                                       // 0x0230(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                SelectedPowerupIndex;                                     // 0x0240(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0244(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTPowerupSelectorUserWidget");
		return ptr;
	}


	void SetPlayerPowerup();
	struct FString GetBuyMenuKeyName();
};


// Class UnrealTournament.UTProj_BioGrenade
// 0x0040 (0x0578 - 0x0538)
class AUTProj_BioGrenade : public AUTProjectile
{
public:
	class USphereComponent*                            ProximitySphere;                                          // 0x0538(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	bool                                               bBeginFuseWarning;                                        // 0x0540(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0541(0x0007) MISSED OFFSET
	class UParticleSystem*                             FuseEffect;                                               // 0x0548(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  FuseBeepSound;                                            // 0x0550(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAudioComponent*                             FlightAudioComponent;                                     // 0x0558(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              TimeBeforeFuseStarts;                                     // 0x0560(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FuseTime;                                                 // 0x0564(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ProximityDelay;                                           // 0x0568(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x056C(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTProj_BioGrenade");
		return ptr;
	}


	void StartFuseTimed();
	void StartFuse();
	void ProximityOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void PlayFuseBeep();
	void FuseExpired();
};


// Class UnrealTournament.UTProj_BioShot
// 0x00B8 (0x05F0 - 0x0538)
class AUTProj_BioShot : public AUTProjectile
{
public:
	float                                              InitialBlobPulseRate;                                     // 0x0538(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BlobPulseScaling;                                         // 0x053C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BlobPulseTime;                                            // 0x0540(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bLargeGlobLit;                                            // 0x0544(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0545(0x0003) MISSED OFFSET
	class UClass*                                      LandedEffects;                                            // 0x0548(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      LargeLandedEffects;                                       // 0x0550(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RestTime;                                                 // 0x0558(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bLanded;                                                  // 0x055C(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bCanTrack;                                                // 0x055D(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x055E(0x0002) MISSED OFFSET
	float                                              TrackingRange;                                            // 0x0560(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxTrackingSpeed;                                         // 0x0564(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              GlobRadiusScaling;                                        // 0x0568(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxSpeedUnderWater;                                       // 0x056C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class AUTCharacter*                                TrackedPawn;                                              // 0x0570(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     SurfaceNormal;                                            // 0x0578(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EHitType>                              SurfaceType;                                              // 0x0584(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0585(0x0003) MISSED OFFSET
	float                                              SurfaceWallThreshold;                                     // 0x0588(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxSlideSpeed;                                            // 0x058C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  MergeSound;                                               // 0x0590(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             MergeEffect;                                              // 0x0598(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bHasMerged;                                               // 0x05A0(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bSpawningGloblings;                                       // 0x05A1(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x05A2(0x0002) MISSED OFFSET
	float                                              GlobStrength;                                             // 0x05A4(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	float                                              LandedOverlapRadius;                                      // 0x05A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LandedOverlapScaling;                                     // 0x05AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DamageRadiusGain;                                         // 0x05B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ExtraRestTimePerStrength;                                 // 0x05B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RemainingLife;                                            // 0x05B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x05BC(0x0004) MISSED OFFSET
	class UStaticMeshComponent*                        BioMesh;                                                  // 0x05C0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      MaxRestingGlobStrength;                                   // 0x05C8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x7];                                       // 0x05C9(0x0007) MISSED OFFSET
	class UClass*                                      ChargedDamageType;                                        // 0x05D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SplashSpread;                                             // 0x05D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x05DC(0x0004) MISSED OFFSET
	class UClass*                                      AirSnotRewardClass;                                       // 0x05E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class AUTAvoidMarker*                              FearSpot;                                                 // 0x05E8(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTProj_BioShot");
		return ptr;
	}


	void SetGlobStrength(float NewStrength);
	void OnSetGlobStrength();
	void OnRep_GlobStrength();
	void OnRep_BioLanded();
	void OnLanded();
	void BioStabilityTimer();
};


// Class UnrealTournament.UTProj_BioLauncherShot
// 0x0058 (0x0648 - 0x05F0)
class AUTProj_BioLauncherShot : public AUTProj_BioShot
{
public:
	int                                                WebHealth;                                                // 0x05F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinWebStringDistance;                                     // 0x05F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxWebReach;                                              // 0x05F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              WebTraceOriginOffset;                                     // 0x05FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UStaticMesh*                                 WebStringMesh;                                            // 0x0600(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     WebReferenceAxis;                                         // 0x0608(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0614(0x0004) MISSED OFFSET
	TArray<struct FVector>                             WebHitLocations;                                          // 0x0618(0x0010) (BlueprintVisible, Net, ZeroConstructor)
	bool                                               bSpawnedWeb;                                              // 0x0628(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0629(0x0007) MISSED OFFSET
	TArray<class UMaterialInstanceDynamic*>            WebMIDs;                                                  // 0x0630(0x0010) (BlueprintVisible, ZeroConstructor)
	unsigned char                                      WebHitFlashCount;                                         // 0x0640(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0641(0x0003) MISSED OFFSET
	float                                              HitFlashStartTime;                                        // 0x0644(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTProj_BioLauncherShot");
		return ptr;
	}


	void SpawnWebEffects();
	void PlayWebHitFlash();
	void OnWebOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
};


// Class UnrealTournament.UTProj_FlakShard
// 0x0088 (0x05C0 - 0x0538)
class AUTProj_FlakShard : public AUTProjectile
{
public:
	class UMeshComponent*                              Mesh;                                                     // 0x0538(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UMaterialInstanceDynamic*                    MeshMI;                                                   // 0x0540(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UParticleSystemComponent*                    Trail;                                                    // 0x0548(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	int                                                BouncesRemaining;                                         // 0x0550(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FirstBounceDamping;                                       // 0x0554(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BounceDamping;                                            // 0x0558(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BounceDamagePct;                                          // 0x055C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bGrowOverlap;                                             // 0x0560(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0561(0x0003) MISSED OFFSET
	float                                              RadiusGrowthRate;                                         // 0x0564(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxOverlapRadius;                                         // 0x0568(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FinalOverlapRadius;                                       // 0x056C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RadiusShrinkRate;                                         // 0x0570(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RandomBounceCone;                                         // 0x0574(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinDamageSpeed;                                           // 0x0578(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DamageAttenuation;                                        // 0x057C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DamageAttenuationDelay;                                   // 0x0580(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SelfDamageAttenuation;                                    // 0x0584(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SelfDamageAttenuationDelay;                               // 0x0588(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FullGravityDelay;                                         // 0x058C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              HeatFadeTime;                                             // 0x0590(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                HotTrailColor;                                            // 0x0594(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ColdTrailColor;                                           // 0x05A4(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x05B4(0x0004) MISSED OFFSET
	class USoundBase*                                  FleshImpactSound;                                         // 0x05B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTProj_FlakShard");
		return ptr;
	}

};


// Class UnrealTournament.UTProj_FlakShardMain
// 0x0020 (0x05E0 - 0x05C0)
class AUTProj_FlakShardMain : public AUTProj_FlakShard
{
public:
	float                                              CenteredMomentumBonus;                                    // 0x05C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CenteredDamageBonus;                                      // 0x05C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxBonusTime;                                             // 0x05C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxShreddedTime;                                          // 0x05CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ShortRangeKillShake;                                      // 0x05D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CloseFlakRewardMessageClass;                              // 0x05D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTProj_FlakShardMain");
		return ptr;
	}

};


// Class UnrealTournament.UTProj_FlakShell
// 0x0010 (0x0548 - 0x0538)
class AUTProj_FlakShell : public AUTProjectile
{
public:
	int                                                ShardSpawnCount;                                          // 0x0538(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ShardSpawnAngle;                                          // 0x053C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ShardClass;                                               // 0x0540(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTProj_FlakShell");
		return ptr;
	}

};


// Class UnrealTournament.UTProj_Lightning
// 0x0000 (0x0538 - 0x0538)
class AUTProj_Lightning : public AUTProjectile
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTProj_Lightning");
		return ptr;
	}

};


// Class UnrealTournament.UTProj_LinkPlasma
// 0x0008 (0x0540 - 0x0538)
class AUTProj_LinkPlasma : public AUTProjectile
{
public:
	float                                              OverlapSphereGrowthRate;                                  // 0x0538(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxOverlapSphereSize;                                     // 0x053C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTProj_LinkPlasma");
		return ptr;
	}

};


// Class UnrealTournament.UTProj_RocketGrenade
// 0x0030 (0x05A8 - 0x0578)
class AUTProj_RocketGrenade : public AUTProj_Rocket
{
public:
	float                                              FuseTime;                                                 // 0x0578(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RandomFuseMod;                                            // 0x057C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0580(0x000C) MISSED OFFSET
	float                                              MaxRotationRate;                                          // 0x058C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxBouncedRotationRate;                                   // 0x0590(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxRandomBounce;                                          // 0x0594(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                Seed;                                                     // 0x0598(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x059C(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTProj_RocketGrenade");
		return ptr;
	}


	void OnRep_Seed();
};


// Class UnrealTournament.UTProj_RocketSpiral
// 0x0030 (0x05A8 - 0x0578)
class AUTProj_RocketSpiral : public AUTProj_Rocket
{
public:
	float                                              FlockRadius;                                              // 0x0578(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FlockStiffness;                                           // 0x057C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FlockMaxForce;                                            // 0x0580(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FlockCurlForce;                                           // 0x0584(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class AUTProj_RocketSpiral*                        Flock[0x2];                                               // 0x0588(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               bCurl;                                                    // 0x0598(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0599(0x0003) MISSED OFFSET
	struct FVector                                     InitialDir;                                               // 0x059C(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTProj_RocketSpiral");
		return ptr;
	}

};


// Class UnrealTournament.UTProj_ShockBall
// 0x0058 (0x0590 - 0x0538)
class AUTProj_ShockBall : public AUTProjectile
{
public:
	struct FRadialDamageParams                         ComboDamageParams;                                        // 0x0538(0x0014) (Edit, BlueprintVisible)
	float                                              ComboMomentum;                                            // 0x054C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ComboDamageType;                                          // 0x0550(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ComboTriggerType;                                         // 0x0558(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                ComboAmmoCost;                                            // 0x0560(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0564(0x0004) MISSED OFFSET
	class UClass*                                      ComboVortexType;                                          // 0x0568(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             OwnBallEffect;                                            // 0x0570(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UParticleSystemComponent*                    OwnBallPSC;                                               // 0x0578(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x0580(0x0001) MISSED OFFSET
	bool                                               bComboExplosion;                                          // 0x0581(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x0582(0x0006) MISSED OFFSET
	class UClass*                                      ComboRewardMessageClass;                                  // 0x0588(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTProj_ShockBall");
		return ptr;
	}


	void OnRep_ComboExplosion();
	void OnComboExplode();
};


// Class UnrealTournament.UTProj_Sniper
// 0x0010 (0x0548 - 0x0538)
class AUTProj_Sniper : public AUTProjectile
{
public:
	float                                              HeadScaling;                                              // 0x0538(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              HeadshotDamageMult;                                       // 0x053C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      HeadshotDamageType;                                       // 0x0540(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTProj_Sniper");
		return ptr;
	}

};


// Class UnrealTournament.UTProj_StingerShard
// 0x0020 (0x0558 - 0x0538)
class AUTProj_StingerShard : public AUTProjectile
{
public:
	int                                                ImpactedShardDamage;                                      // 0x0538(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ImpactedShardMomentum;                                    // 0x053C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ImpactNormal;                                             // 0x0540(0x000C) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x054C(0x0004) MISSED OFFSET
	class UStaticMeshComponent*                        ShardMesh;                                                // 0x0550(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTProj_StingerShard");
		return ptr;
	}

};


// Class UnrealTournament.UTProj_StingerShard2
// 0x0028 (0x0560 - 0x0538)
class AUTProj_StingerShard2 : public AUTProjectile
{
public:
	int                                                DirectHitDamage;                                          // 0x0538(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DirectHitMomentum;                                        // 0x053C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              OverlapSphereGrowthRate;                                  // 0x0540(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxOverlapSphereSize;                                     // 0x0544(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AirExplodeAngle;                                          // 0x0548(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x054C(0x0004) MISSED OFFSET
	TArray<class APawn*>                               PotentialTargets;                                         // 0x0550(0x0010) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTProj_StingerShard2");
		return ptr;
	}

};


// Class UnrealTournament.UTProj_TransDisk
// 0x0058 (0x0590 - 0x0538)
class AUTProj_TransDisk : public AUTProjectile
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0538(0x0008) MISSED OFFSET
	class AUTWeap_Translocator*                        MyTranslocator;                                           // 0x0540(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	class AController*                                 DisruptedController;                                      // 0x0548(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ETLState>                              TransState;                                               // 0x0550(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0551(0x0007) MISSED OFFSET
	TArray<class UParticleSystem*>                     LandedEffect;                                             // 0x0558(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	class UParticleSystemComponent*                    LandedBeaconComponent;                                    // 0x0568(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UParticleSystem*                             DisruptedEffect;                                          // 0x0570(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxSpeedUnderWater;                                       // 0x0578(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DisruptDestroyTime;                                       // 0x057C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                RemainingHealth;                                          // 0x0580(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bCanShieldBounce;                                         // 0x0584(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0585(0x0003) MISSED OFFSET
	class UStaticMeshComponent*                        DiskMesh;                                                 // 0x0588(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTProj_TransDisk");
		return ptr;
	}


	void OnRep_TransState();
	void OnLanded();
	void OnDisrupted();
	void OnBlockingHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void ModifyTakeDamage(const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser, float* DamageAmount);
};


// Class UnrealTournament.UTProj_WeaponScreen
// 0x0038 (0x0570 - 0x0538)
class AUTProj_WeaponScreen : public AUTProjectile
{
public:
	bool                                               bOnlyAffectEnemies;                                       // 0x0538(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bExplodeOnStop;                                           // 0x0539(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bSlowProjectiles;                                         // 0x053A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bCauseMomentumToPawns;                                    // 0x053B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FriendlyMomentumScaling;                                  // 0x053C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<class APawn*>                               HitPawns;                                                 // 0x0540(0x0010) (BlueprintVisible, ZeroConstructor)
	class UClass*                                      BlockedProjDamageType;                                    // 0x0550(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ScaleRate;                                                // 0x0558(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0564(0x0004) MISSED OFFSET
	class UBoxComponent*                               CollisionBox;                                             // 0x0568(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTProj_WeaponScreen");
		return ptr;
	}

};


// Class UnrealTournament.UTRconAdminInfo
// 0x0028 (0x03B0 - 0x0388)
class AUTRconAdminInfo : public AInfo
{
public:
	TArray<struct FRconPlayerData>                     PlayerData;                                               // 0x0388(0x0010) (Net, ZeroConstructor)
	TArray<struct FBanInfo>                            BanData;                                                  // 0x0398(0x0010) (Net, ZeroConstructor)
	unsigned char                                      UnknownData00[0x8];                                       // 0x03A8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTRconAdminInfo");
		return ptr;
	}


	void ServerNoLongerNeeded();
};


// Class UnrealTournament.UTReachSpec_HighJump
// 0x0040 (0x0080 - 0x0040)
class UUTReachSpec_HighJump : public UUTReachSpec
{
public:
	float                                              RequiredJumpZ;                                            // 0x0040(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              DodgeJumpZMult;                                           // 0x0044(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     JumpStart;                                                // 0x0048(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     JumpEnd;                                                  // 0x0054(0x000C) (ZeroConstructor, IsPlainOldData)
	float                                              OriginalGravityZ;                                         // 0x0060(0x0004) (ZeroConstructor, IsPlainOldData)
	TWeakObjectPtr<class APhysicsVolume>               GravityVolume;                                            // 0x0064(0x0008) (ZeroConstructor, IsPlainOldData)
	bool                                               bJumpFromEdgePolyCenter;                                  // 0x006C(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x006D(0x0003) MISSED OFFSET
	TWeakObjectPtr<class AUTProjectile>                CachedTransDiscTemplate;                                  // 0x0070(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bCachedTranslocatorResult;                                // 0x0078(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0079(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTReachSpec_HighJump");
		return ptr;
	}

};


// Class UnrealTournament.UTReachSpec_JumpPad
// 0x0008 (0x0048 - 0x0040)
class UUTReachSpec_JumpPad : public UUTReachSpec
{
public:
	TWeakObjectPtr<class AUTJumpPad>                   JumpPad;                                                  // 0x0040(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTReachSpec_JumpPad");
		return ptr;
	}

};


// Class UnrealTournament.UTReachSpec_Lift
// 0x0028 (0x0068 - 0x0040)
class UUTReachSpec_Lift : public UUTReachSpec
{
public:
	TWeakObjectPtr<class AUTLift>                      Lift;                                                     // 0x0040(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     LiftExitLoc;                                              // 0x0048(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     LiftCenter;                                               // 0x0054(0x000C) (ZeroConstructor, IsPlainOldData)
	bool                                               bEntryPath;                                               // 0x0060(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bSkipInitialAirControl;                                   // 0x0061(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0062(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTReachSpec_Lift");
		return ptr;
	}

};


// Class UnrealTournament.UTTeamPathBlocker
// 0x0010 (0x0398 - 0x0388)
class AUTTeamPathBlocker : public AActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0388(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTTeamPathBlocker");
		return ptr;
	}


	bool IsAllowedThrough(unsigned char TeamNum);
	class USceneComponent* GetBlockingComponent();
};


// Class UnrealTournament.UTReachSpec_Team
// 0x0008 (0x0048 - 0x0040)
class UUTReachSpec_Team : public UUTReachSpec
{
public:
	TWeakObjectPtr<class AUTTeamPathBlocker>           Arbiter;                                                  // 0x0040(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTReachSpec_Team");
		return ptr;
	}

};


// Class UnrealTournament.UTReachSpec_Teleport
// 0x0008 (0x0048 - 0x0040)
class UUTReachSpec_Teleport : public UUTReachSpec
{
public:
	TWeakObjectPtr<class AActor>                       Teleporter;                                               // 0x0040(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTReachSpec_Teleport");
		return ptr;
	}

};


// Class UnrealTournament.UTReachSpec_WallDodge
// 0x0028 (0x0068 - 0x0040)
class UUTReachSpec_WallDodge : public UUTReachSpec
{
public:
	struct FVector                                     JumpStart;                                                // 0x0040(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     WallPoint;                                                // 0x004C(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     WallNormal;                                               // 0x0058(0x000C) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0064(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTReachSpec_WallDodge");
		return ptr;
	}

};


// Class UnrealTournament.UTPersistentReplicatedEmitter
// 0x0000 (0x03A0 - 0x03A0)
class AUTPersistentReplicatedEmitter : public AUTReplicatedEmitter
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTPersistentReplicatedEmitter");
		return ptr;
	}

};


// Class UnrealTournament.UTRepulsorBubble
// 0x00B0 (0x0438 - 0x0388)
class AUTRepulsorBubble : public AActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0388(0x0010) MISSED OFFSET
	unsigned char                                      TeamNum;                                                  // 0x0398(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0399(0x0007) MISSED OFFSET
	TArray<class AUTCharacter*>                        RecentlyBouncedCharacters;                                // 0x03A0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	float                                              RecentlyBouncedResetTime;                                 // 0x03B0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0xC];                                       // 0x03B4(0x000C) MISSED OFFSET
	bool                                               bShouldIgnoreTeamProjectiles;                             // 0x03C0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bShouldIgnoreTeamCharacters;                              // 0x03C1(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bShouldReflectProjectiles;                                // 0x03C2(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x1];                                       // 0x03C3(0x0001) MISSED OFFSET
	float                                              MaxRepulsorSize;                                          // 0x03C4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinRepulsorSize;                                          // 0x03C8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     KnockbackVector;                                          // 0x03CC(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              KnockbackStrength;                                        // 0x03D8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Health;                                                   // 0x03DC(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	float                                              MaxHealth;                                                // 0x03E0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              HealthLostToRepulsePlayer;                                // 0x03E4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      ParentInventoryItemClass;                                 // 0x03E8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UMaterial*                                   BubbleMaterial;                                           // 0x03F0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UMaterialInstanceDynamic*                    MID_Bubble;                                               // 0x03F8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UStaticMeshComponent*                        BubbleMesh;                                               // 0x0400(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	struct FLinearColor                                RedTeamColor;                                             // 0x0408(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                BlueTeamColor;                                            // 0x0418(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USphereComponent*                            CollisionComp;                                            // 0x0428(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	ERepulsorLastHitType                               LastHitByType;                                            // 0x0430(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0431(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTRepulsorBubble");
		return ptr;
	}


	bool ShouldInteractWithActor(class AActor* OtherActor);
	void ProcessHitProjectile(class AUTProjectile* OtherProj, class UPrimitiveComponent* OtherComp, const struct FVector& HitLocation, const struct FVector& HitNormal);
	void ProcessHitPlayer(class AUTCharacter* OtherPlayer, class UPrimitiveComponent* OtherComp, const struct FVector& HitLocation, const struct FVector& HitNormal);
	void ProcessHit(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& HitLocation, const struct FVector& HitNormal);
	void OnViewTargetChange(class AUTPlayerController* NewViewTarget);
	void OnRep_Health();
	void OnProjectileHit();
	void OnOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnHitScanBlocked();
	void OnCharacterBounce();
	void BeginPlay();
};


// Class UnrealTournament.UTResetLineUpDefaultsCommandlet
// 0x0000 (0x0080 - 0x0080)
class UUTResetLineUpDefaultsCommandlet : public UCommandlet
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTResetLineUpDefaultsCommandlet");
		return ptr;
	}

};


// Class UnrealTournament.UTResetPostProcessVolumesCommandlet
// 0x0000 (0x0080 - 0x0080)
class UUTResetPostProcessVolumesCommandlet : public UCommandlet
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTResetPostProcessVolumesCommandlet");
		return ptr;
	}

};


// Class UnrealTournament.UTTooltipBase
// 0x0068 (0x0308 - 0x02A0)
class UUTTooltipBase : public UUTUserWidgetBase
{
public:
	class UBorder*                                     Border_Contents;                                          // 0x02A0(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x60];                                      // 0x02A8(0x0060) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTTooltipBase");
		return ptr;
	}


	void Show();
	void OnShow();
	void OnHide();
	void Hide();
};


// Class UnrealTournament.UTRewardTooltipItem
// 0x0020 (0x0250 - 0x0230)
class UUTRewardTooltipItem : public UUserWidget
{
public:
	class UUTTextBlock*                                Text_RewardName;                                          // 0x0230(0x0008) (ZeroConstructor, IsPlainOldData)
	class UUTTextBlock*                                Text_RewardDesc;                                          // 0x0238(0x0008) (ZeroConstructor, IsPlainOldData)
	class UUTTextBlock*                                Text_RewardType;                                          // 0x0240(0x0008) (ZeroConstructor, IsPlainOldData)
	class UImage*                                      Image_RewardIcon;                                         // 0x0248(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTRewardTooltipItem");
		return ptr;
	}

};


// Class UnrealTournament.UTRewardTooltip
// 0x0028 (0x0330 - 0x0308)
class UUTRewardTooltip : public UUTTooltipBase
{
public:
	struct FLinearColor                                UnearnedContentTint;                                      // 0x0308(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsEarned;                                                // 0x0318(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0319(0x0007) MISSED OFFSET
	class UUTTextBlock*                                Text_RewardContext;                                       // 0x0320(0x0008) (ZeroConstructor, IsPlainOldData)
	class UUTRewardTooltipItem*                        Item_Reward;                                              // 0x0328(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTRewardTooltip");
		return ptr;
	}

};


// Class UnrealTournament.UTRichText
// 0x0068 (0x01A8 - 0x0140)
class UUTRichText : public UTextLayoutWidget
{
public:
	struct FText                                       Text;                                                     // 0x0140(0x0018) (Edit)
	struct FMargin                                     TextMargin;                                               // 0x0158(0x0010) (Edit)
	ERichTextInlineIconDisplayMode                     InlineIconDisplayMode;                                    // 0x0168(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0169(0x0007) MISSED OFFSET
	class UClass*                                      NormalTextStyle;                                          // 0x0170(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      InlineIconTextStyle;                                      // 0x0178(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EUTWidgetStyleSize>                    StyleSize;                                                // 0x0180(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EUTTextColor>                          ColorType;                                                // 0x0181(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EUTTextColor>                          InlineIconColorType;                                      // 0x0182(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x0183(0x0001) MISSED OFFSET
	float                                              MinDesiredWidth;                                          // 0x0184(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x20];                                      // 0x0188(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTRichText");
		return ptr;
	}


	void SetText(const struct FText& InText);
	void SetSize(TEnumAsByte<EUTWidgetStyleSize> Size);
	void SetInlineIconDisplayMode(ERichTextInlineIconDisplayMode DisplayMode);
	void SetColorType(TEnumAsByte<EUTTextColor> Color);
	void Refresh();
	TEnumAsByte<EUTWidgetStyleSize> GetStyleSize();
	TEnumAsByte<EUTTextColor> GetInlineIconColorType();
	TEnumAsByte<EUTTextColor> GetColorType();
};


// Class UnrealTournament.UTSpectatorCamera
// 0x0020 (0x08A0 - 0x0880)
class AUTSpectatorCamera : public ACameraActor
{
public:
	struct FString                                     CamLocationName;                                          // 0x0880(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               bLoadingCamera;                                           // 0x0890(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xF];                                       // 0x0891(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTSpectatorCamera");
		return ptr;
	}

};


// Class UnrealTournament.UTSpectatorPawn
// 0x0000 (0x0410 - 0x0410)
class AUTSpectatorPawn : public ASpectatorPawn
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTSpectatorPawn");
		return ptr;
	}

};


// Class UnrealTournament.UTAsymCTFSquadAI
// 0x0030 (0x0418 - 0x03E8)
class AUTAsymCTFSquadAI : public AUTSquadAI
{
public:
	class AUTCarriedObject*                            Flag;                                                     // 0x03E8(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              TotalFlagRunDistance;                                     // 0x03F0(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              FurthestDefensePointDistance;                             // 0x03F4(0x0004) (ZeroConstructor, IsPlainOldData)
	class UUTPathNode*                                 LastFlagNode;                                             // 0x03F8(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<struct FAlternateRoute>                     FlagRetrievalRoutes;                                      // 0x0400(0x0010) (ZeroConstructor)
	bool                                               bWantRally;                                               // 0x0410(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0411(0x0003) MISSED OFFSET
	float                                              LastRallyTime;                                            // 0x0414(0x0004) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTAsymCTFSquadAI");
		return ptr;
	}

};


// Class UnrealTournament.UTFlagRunPvESquadAI
// 0x0000 (0x0418 - 0x0418)
class AUTFlagRunPvESquadAI : public AUTAsymCTFSquadAI
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTFlagRunPvESquadAI");
		return ptr;
	}

};


// Class UnrealTournament.UTCTFSquadAI
// 0x0060 (0x0448 - 0x03E8)
class AUTCTFSquadAI : public AUTSquadAI
{
public:
	class AUTGameObjective*                            FriendlyBase;                                             // 0x03E8(0x0008) (ZeroConstructor, IsPlainOldData)
	class AUTGameObjective*                            EnemyBase;                                                // 0x03F0(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FRouteCacheItem                             HideTarget;                                               // 0x03F8(0x0028)
	float                                              StartHideTime;                                            // 0x0420(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              HidingSpotDiscoveredTime;                                 // 0x0424(0x0004) (ZeroConstructor, IsPlainOldData)
	TArray<TWeakObjectPtr<class UUTPathNode>>          UsedHidingSpots;                                          // 0x0428(0x0010) (ZeroConstructor)
	TArray<struct FAlternateRoute>                     CapRoutes;                                                // 0x0438(0x0010) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTCTFSquadAI");
		return ptr;
	}

};


// Class UnrealTournament.UTDuelSquadAI
// 0x0000 (0x03E8 - 0x03E8)
class AUTDuelSquadAI : public AUTSquadAI
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTDuelSquadAI");
		return ptr;
	}

};


// Class UnrealTournament.UTShowdownSquadAI
// 0x0008 (0x03F0 - 0x03E8)
class AUTShowdownSquadAI : public AUTSquadAI
{
public:
	class APlayerStart*                                LastChoice;                                               // 0x03E8(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTShowdownSquadAI");
		return ptr;
	}

};


// Class UnrealTournament.UTSupplyChest
// 0x0020 (0x03A8 - 0x0388)
class AUTSupplyChest : public AActor
{
public:
	bool                                               bIsActive;                                                // 0x0388(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0389(0x0007) MISSED OFFSET
	TArray<class UClass*>                              Weapons;                                                  // 0x0390(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	class AUTGameVolume*                               MyGameVolume;                                             // 0x03A0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTSupplyChest");
		return ptr;
	}


	bool GiveHealth(class AUTCharacter* Character);
	bool GiveAmmo(class AUTCharacter* Character);
};


// Class UnrealTournament.UTTeamDeco
// 0x0010 (0x0398 - 0x0388)
class AUTTeamDeco : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0388(0x0008) MISSED OFFSET
	bool                                               bBlockTeamProjectiles;                                    // 0x0390(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0391(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTTeamDeco");
		return ptr;
	}


	unsigned char ScriptGetTeamNum();
};


// Class UnrealTournament.UTTeleporter
// 0x0068 (0x03F0 - 0x0388)
class AUTTeleporter : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0388(0x0008) MISSED OFFSET
	class UBoxComponent*                               TriggerBox;                                               // 0x0390(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USoundBase*                                  TeleportOutSound;                                         // 0x0398(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  TeleportInSound;                                          // 0x03A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x03A8(0x0008) MISSED OFFSET
	struct FTransform                                  TeleportTarget;                                           // 0x03B0(0x0030) (Edit, BlueprintVisible, IsPlainOldData)
	bool                                               bSetRotation;                                             // 0x03E0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0xF];                                       // 0x03E1(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTTeleporter");
		return ptr;
	}


	void PostTeleport(class AActor* OtherActor);
	void OnOverlapBegin(class AActor* OverlappingActor, class AActor* OtherActor);
	bool CanTeleport(class AActor* OtherActor);
};


// Class UnrealTournament.UTTextRenderComponent
// 0x0000 (0x06F0 - 0x06F0)
class UUTTextRenderComponent : public UTextRenderComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTTextRenderComponent");
		return ptr;
	}

};


// Class UnrealTournament.UTUMGHudWidget_LocalMessage
// 0x0028 (0x02A0 - 0x0278)
class UUTUMGHudWidget_LocalMessage : public UUTUMGHudWidget
{
public:
	class UClass*                                      MessageClass;                                             // 0x0278(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Switch;                                                   // 0x0280(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TWeakObjectPtr<class APlayerState>                 RelatedPlayerState_2;                                     // 0x0284(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TWeakObjectPtr<class APlayerState>                 RelatedPlayerState_3;                                     // 0x028C(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TWeakObjectPtr<class UObject>                      OptionalObject;                                           // 0x0294(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x029C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTUMGHudWidget_LocalMessage");
		return ptr;
	}


	void InitializeMessage(class UClass* inMessageClass, int inSwitch, class APlayerState* inRelatedPlayerState_2, class APlayerState* inRelatedPlayerState_3, class UObject* inOptionalObject);
};


// Class UnrealTournament.UTUMGWidget_Toast
// 0x0020 (0x0288 - 0x0268)
class UUTUMGWidget_Toast : public UUTUMGWidget
{
public:
	struct FText                                       Message;                                                  // 0x0268(0x0018) (BlueprintVisible)
	float                                              Duration;                                                 // 0x0280(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0284(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTUMGWidget_Toast");
		return ptr;
	}


	bool IsTopmostToast();
};


// Class UnrealTournament.UTActivatableWidget
// 0x0110 (0x03B0 - 0x02A0)
class UUTActivatableWidget : public UUTUserWidgetBase
{
public:
	struct FScriptMulticastDelegate                    OnWidgetActivated;                                        // 0x02A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x70];                                      // 0x02B0(0x0070) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnWidgetDeactivated;                                      // 0x0320(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData01[0x70];                                      // 0x0330(0x0070) MISSED OFFSET
	bool                                               bAutoActivate;                                            // 0x03A0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bIsActive;                                                // 0x03A1(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0xE];                                       // 0x03A2(0x000E) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTActivatableWidget");
		return ptr;
	}


	bool OnHandleBackAction();
	void OnDeactivated();
	void OnActivated();
	void DeactivateWidget();
	void ActivateWidget();
};


// Class UnrealTournament.UTChestRewardCategory
// 0x0020 (0x02C0 - 0x02A0)
class UUTChestRewardCategory : public UUTUserWidgetBase
{
public:
	TArray<class UUtMcpDefinition*>                    RewardDataProvider;                                       // 0x02A0(0x0010) (ZeroConstructor)
	class UUTTileView*                                 TileView_Items;                                           // 0x02B0(0x0008) (ZeroConstructor, IsPlainOldData)
	class UUTGlowingRarityText*                        GlowingRarity_Text;                                       // 0x02B8(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTChestRewardCategory");
		return ptr;
	}

};


// Class UnrealTournament.UTChestOpeningScreen
// 0x0110 (0x04C0 - 0x03B0)
class UUTChestOpeningScreen : public UUTActivatableWidget
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x03B0(0x0018) MISSED OFFSET
	float                                              PictureFlipRate;                                          // 0x03C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x03CC(0x0008) MISSED OFFSET
	int                                                EpicMegaRareCount;                                        // 0x03D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                UltraRareCount;                                           // 0x03D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                RareCount;                                                // 0x03DC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                CommonCount;                                              // 0x03E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x24];                                      // 0x03E4(0x0024) MISSED OFFSET
	TArray<struct FChestResultEntryRow>                PotentialRewardStruct;                                    // 0x0408(0x0010) (ZeroConstructor)
	TArray<struct FChestResultEntryRow>                SpinnerItemArray;                                         // 0x0418(0x0010) (ZeroConstructor)
	TArray<class UObject*>                             LoadedImages;                                             // 0x0428(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData03[0x10];                                      // 0x0438(0x0010) MISSED OFFSET
	class UScrollBox*                                  ScrollBox_Rewards;                                        // 0x0448(0x0008) (ZeroConstructor, IsPlainOldData)
	class UUTLazyImage*                                Image_RotatingReward;                                     // 0x0450(0x0008) (ZeroConstructor, IsPlainOldData)
	class UUTMcpTypeRewardImage*                       Reward_RotatingSubImage;                                  // 0x0458(0x0008) (ZeroConstructor, IsPlainOldData)
	class UUTLazyImage*                                Image_FinalResult;                                        // 0x0460(0x0008) (ZeroConstructor, IsPlainOldData)
	class UUTGlowingRarityText*                        GlowingText_RotatingReward;                               // 0x0468(0x0008) (ZeroConstructor, IsPlainOldData)
	class UUTTextBlock*                                Text_RewardName;                                          // 0x0470(0x0008) (ZeroConstructor, IsPlainOldData)
	class UUTTextBlock*                                Text_RewardType;                                          // 0x0478(0x0008) (ZeroConstructor, IsPlainOldData)
	class UUTGlowingRarityText*                        GlowingText_FinalReward;                                  // 0x0480(0x0008) (ZeroConstructor, IsPlainOldData)
	class UUTTextBlock*                                Text_FinalName;                                           // 0x0488(0x0008) (ZeroConstructor, IsPlainOldData)
	class UUTTextBlock*                                Text_FinalType;                                           // 0x0490(0x0008) (ZeroConstructor, IsPlainOldData)
	class UUTChestRewardCategory*                      Reward_EpicMegaRare;                                      // 0x0498(0x0008) (ZeroConstructor, IsPlainOldData)
	class UUTChestRewardCategory*                      Reward_UltraRare;                                         // 0x04A0(0x0008) (ZeroConstructor, IsPlainOldData)
	class UUTChestRewardCategory*                      Reward_Rare;                                              // 0x04A8(0x0008) (ZeroConstructor, IsPlainOldData)
	class UUTChestRewardCategory*                      Reward_Common;                                            // 0x04B0(0x0008) (ZeroConstructor, IsPlainOldData)
	class UUTMcpTypeRewardImage*                       Reward_FinalSubImage;                                     // 0x04B8(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTChestOpeningScreen");
		return ptr;
	}


	void SetScreenState(EUTSpinState NewState);
	void SetItemRarities(EUTItemRarity ItemRarity);
	void OnNextItemShown(EUTItemRarity ItemRarity, EUTSpinState SpinState, bool bIsFinal);
	void NativeReset();
	void FireSpinner(class UUtMcpCardPackItem* PackToOpen, TArray<struct FMcpItemIdAndQuantity> RewardArray);
	void FinalSpinnerStop(EUTItemRarity ItemRarity);
	void BP_FullReset();
	void BeginSpinnerSlowdown();
	void BeginOpen();
};


// Class UnrealTournament.UTDefaultButton
// 0x00F0 (0x0BA0 - 0x0AB0)
class UUTDefaultButton : public UUTBaseButton
{
public:
	float                                              MinContentSpacing;                                        // 0x0AB0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                WrapLabelTextAt;                                          // 0x0AB4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FText                                       Text;                                                     // 0x0AB8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	TEnumAsByte<EUTTextColor>                          NormalTextColor;                                          // 0x0AD0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EUTTextColor>                          HoveredTextColor;                                         // 0x0AD1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EHorizontalAlignment>                  TextAlignment_NoIcon;                                     // 0x0AD2(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EHorizontalAlignment>                  TextAlignment_WithIcon;                                   // 0x0AD3(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EHorizontalAlignment>                  IconAlignment;                                            // 0x0AD4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EHorizontalAlignment>                  ContentAlignment;                                         // 0x0AD5(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0AD6(0x0002) MISSED OFFSET
	struct FSlateBrush                                 IconBrush;                                                // 0x0AD8(0x0090) (Edit, BlueprintVisible, BlueprintReadOnly)
	float                                              IconSizes[0x3];                                           // 0x0B68(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bIconOnRight;                                             // 0x0B74(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0B75(0x0003) MISSED OFFSET
	class USizeBox*                                    SizeBox_Container;                                        // 0x0B78(0x0008) (ZeroConstructor, IsPlainOldData)
	class UHorizontalBox*                              HBox_Content;                                             // 0x0B80(0x0008) (ZeroConstructor, IsPlainOldData)
	class UImage*                                      Image_Icon;                                               // 0x0B88(0x0008) (ZeroConstructor, IsPlainOldData)
	class UUTTextBlock*                                Text_Label;                                               // 0x0B90(0x0008) (ZeroConstructor, IsPlainOldData)
	class UUTInputVisualizer*                          Input_BoundKey;                                           // 0x0B98(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTDefaultButton");
		return ptr;
	}


	void UpdateText(const struct FText& InText);
	void UpdateSpecificImageSize(TEnumAsByte<EUTWidgetStyleSize> Type, float InSize);
	void UpdateIconFromTexture(class UTexture2D* Texture);
	void UpdateIcon(const struct FSlateBrush& Brush, bool bRetainBrushImageSize);
	void SetNormalContentColor(TEnumAsByte<EUTTextColor> InNormalTextColor);
	void SetHoveredContentColor(TEnumAsByte<EUTTextColor> InHoveredTextColor);
	void RefreshLayout();
};


// Class UnrealTournament.UTGlowingRarityText
// 0x0000 (0x02A0 - 0x02A0)
class UUTGlowingRarityText : public UUTUserWidgetBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTGlowingRarityText");
		return ptr;
	}


	void SetRarityBP(EUTItemRarity ItemRarity, bool bHideGlowingText);
};


// Class UnrealTournament.UTMcpTypeRewardImage
// 0x0008 (0x02A8 - 0x02A0)
class UUTMcpTypeRewardImage : public UUTUserWidgetBase
{
public:
	class UUTLazyImage*                                Image_RewardImage;                                        // 0x02A0(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTMcpTypeRewardImage");
		return ptr;
	}

};


// Class UnrealTournament.UTRewardImage
// 0x0038 (0x02D8 - 0x02A0)
class UUTRewardImage : public UUTUserWidgetBase
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x02A0(0x0008) MISSED OFFSET
	class UClass*                                      RewardTooltipClass;                                       // 0x02A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bGenerateTooltip;                                         // 0x02B0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x02B1(0x0007) MISSED OFFSET
	class UUtMcpDefinition*                            ItemDef;                                                  // 0x02B8(0x0008) (ZeroConstructor, IsPlainOldData)
	class UUTLazyImage*                                LazyImage_HeroPortrait;                                   // 0x02C0(0x0008) (ZeroConstructor, IsPlainOldData)
	class UBorder*                                     Border_EyebrowText;                                       // 0x02C8(0x0008) (ZeroConstructor, IsPlainOldData)
	class UUTMcpTypeRewardImage*                       Reward_ImageSwitcher;                                     // 0x02D0(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTRewardImage");
		return ptr;
	}

};


// Class UnrealTournament.UTBasicTooltipWidget
// 0x0000 (0x0308 - 0x0308)
class UUTBasicTooltipWidget : public UUTTooltipBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTBasicTooltipWidget");
		return ptr;
	}


	void UpdateTooltipText(const struct FText& NewTooltipText);
	void UpdateTitleText(const struct FText& NewTitleText);
};


// Class UnrealTournament.UTViewPlaceholder
// 0x0000 (0x0388 - 0x0388)
class AUTViewPlaceholder : public AActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTViewPlaceholder");
		return ptr;
	}

};


// Class UnrealTournament.UTWallDodgePoint
// 0x0018 (0x03A0 - 0x0388)
class AUTWallDodgePoint : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0388(0x0008) MISSED OFFSET
	class UBillboardComponent*                         Icon;                                                     // 0x0390(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	float                                              CheckRange;                                               // 0x0398(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x039C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTWallDodgePoint");
		return ptr;
	}

};


// Class UnrealTournament.UTWaterVolume
// 0x0048 (0x0418 - 0x03D0)
class AUTWaterVolume : public APhysicsVolume
{
public:
	class USoundBase*                                  EntrySound;                                               // 0x03D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  ExitSound;                                                // 0x03D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PawnEntryVelZScaling;                                     // 0x03E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BrakingDecelerationSwimming;                              // 0x03E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     WaterCurrentDirection;                                    // 0x03E8(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              WaterCurrentSpeed;                                        // 0x03F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxRelativeSwimSpeed;                                     // 0x03F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x03FC(0x0004) MISSED OFFSET
	struct FText                                       VolumeName;                                               // 0x0400(0x0018) (Edit, BlueprintVisible)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTWaterVolume");
		return ptr;
	}


	struct FVector GetCurrentFor(class AActor* Actor);
};


// Class UnrealTournament.UTWeapAttachment_BioRifle
// 0x0000 (0x04A8 - 0x04A8)
class AUTWeapAttachment_BioRifle : public AUTWeaponAttachment
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTWeapAttachment_BioRifle");
		return ptr;
	}


	void SetChargingEffect(bool bNowActive);
};


// Class UnrealTournament.UTWeapAttachment_Enforcer
// 0x0030 (0x04D8 - 0x04A8)
class AUTWeapAttachment_Enforcer : public AUTWeaponAttachment
{
public:
	class USkeletalMeshComponent*                      LeftMesh;                                                 // 0x04A8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USkeletalMeshComponent*                      LeftOverlayMesh;                                          // 0x04B0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       LeftAttachSocket;                                         // 0x04B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     LeftAttachOffset;                                         // 0x04C0(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                BurstSize;                                                // 0x04CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	uint32_t                                           AlternateCount;                                           // 0x04D0(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bFireLeftWeapon;                                          // 0x04D4(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x04D5(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTWeapAttachment_Enforcer");
		return ptr;
	}

};


// Class UnrealTournament.UTWeapAttachment_ImpactHammer
// 0x0000 (0x04A8 - 0x04A8)
class AUTWeapAttachment_ImpactHammer : public AUTWeaponAttachment
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTWeapAttachment_ImpactHammer");
		return ptr;
	}

};


// Class UnrealTournament.UTWeapAttachment_LightningRifle
// 0x0018 (0x04C0 - 0x04A8)
class AUTWeapAttachment_LightningRifle : public AUTWeaponAttachment
{
public:
	class UParticleSystemComponent*                    PoweredGlowComponent;                                     // 0x04A8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              ChainRadius;                                              // 0x04B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x04B4(0x0004) MISSED OFFSET
	class UParticleSystem*                             RealFireEffect;                                           // 0x04B8(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTWeapAttachment_LightningRifle");
		return ptr;
	}

};


// Class UnrealTournament.UTWeapAttachment_LinkGun
// 0x0020 (0x04C8 - 0x04A8)
class AUTWeapAttachment_LinkGun : public AUTWeaponAttachment
{
public:
	class AActor*                                      PulseTarget;                                              // 0x04A8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LastBeamPulseTime;                                        // 0x04B0(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x04B4(0x0004) MISSED OFFSET
	class UParticleSystem*                             PulseSuccessEffect;                                       // 0x04B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             PulseFailEffect;                                          // 0x04C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTWeapAttachment_LinkGun");
		return ptr;
	}

};


// Class UnrealTournament.UTWeapAttachment_RocketLauncher
// 0x0018 (0x04C0 - 0x04A8)
class AUTWeapAttachment_RocketLauncher : public AUTWeaponAttachment
{
public:
	class UParticleSystemComponent*                    RocketLoadLights;                                         // 0x04A8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	TArray<class UAnimMontage*>                        RocketLoadMontages;                                       // 0x04B0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTWeapAttachment_RocketLauncher");
		return ptr;
	}

};


// Class UnrealTournament.UTWeapAttachment_Sniper
// 0x0000 (0x04A8 - 0x04A8)
class AUTWeapAttachment_Sniper : public AUTWeaponAttachment
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTWeapAttachment_Sniper");
		return ptr;
	}

};


// Class UnrealTournament.UTAfterImageEffect
// 0x0020 (0x0410 - 0x03F0)
class AUTAfterImageEffect : public AUTWeaponRedirector
{
public:
	struct FLinearColor                                TeamColor;                                                // 0x03F0(0x0010) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0400(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTAfterImageEffect");
		return ptr;
	}


	void StartEffect();
	void SetMeshProperties(class USkeletalMeshComponent* DestComp);
	void OnRep_CharMesh();
};


// Class UnrealTournament.UTWeaponReplacementUserWidget
// 0x0010 (0x0240 - 0x0230)
class UUTWeaponReplacementUserWidget : public UUserWidget
{
public:
	TArray<class AUTWeapon*>                           WeaponList;                                               // 0x0230(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTWeaponReplacementUserWidget");
		return ptr;
	}


	struct FString GetUniqueDisplayName(class AUTWeapon* Weapon, const struct FString& PathName);
	struct FString DisplayNameToPathName(const struct FString& DisplayName);
	void BuildWeaponList();
};


// Class UnrealTournament.UTWeaponState
// 0x0008 (0x0030 - 0x0028)
class UUTWeaponState : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTWeaponState");
		return ptr;
	}

};


// Class UnrealTournament.UTWeaponStateActive
// 0x0000 (0x0030 - 0x0030)
class UUTWeaponStateActive : public UUTWeaponState
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTWeaponStateActive");
		return ptr;
	}

};


// Class UnrealTournament.UTWeaponStateEquipping
// 0x0018 (0x0048 - 0x0030)
class UUTWeaponStateEquipping : public UUTWeaponState
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0030(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTWeaponStateEquipping");
		return ptr;
	}

};


// Class UnrealTournament.UTWeaponStateEquipping_DualWeapon
// 0x0000 (0x0048 - 0x0048)
class UUTWeaponStateEquipping_DualWeapon : public UUTWeaponStateEquipping
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTWeaponStateEquipping_DualWeapon");
		return ptr;
	}

};


// Class UnrealTournament.UTWeaponStateFiring
// 0x0010 (0x0040 - 0x0030)
class UUTWeaponStateFiring : public UUTWeaponState
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0030(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTWeaponStateFiring");
		return ptr;
	}

};


// Class UnrealTournament.UTWeaponStateFiring_Enforcer
// 0x0000 (0x0040 - 0x0040)
class UUTWeaponStateFiring_Enforcer : public UUTWeaponStateFiring
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTWeaponStateFiring_Enforcer");
		return ptr;
	}

};


// Class UnrealTournament.UTWeaponStateFiring_LoopingFire
// 0x0060 (0x00A0 - 0x0040)
class UUTWeaponStateFiring_LoopingFire : public UUTWeaponStateFiring
{
public:
	bool                                               bIsInCoolDown;                                            // 0x0040(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bAllowOtherFireModesDuringCooldown;                       // 0x0041(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0042(0x0006) MISSED OFFSET
	class UAnimMontage*                                BeginFireAnim_Weapon;                                     // 0x0048(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                BeginFireAnim_Hands;                                      // 0x0050(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                LoopingFireAnim_Weapon;                                   // 0x0058(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                LoopingFireAnim_Hands;                                    // 0x0060(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                EndFireAnim_Weapon;                                       // 0x0068(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                EndFireAnim_Hands;                                        // 0x0070(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                CoolDownAnim_Weapon;                                      // 0x0078(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                CoolDownAnim_Hands;                                       // 0x0080(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                EndFireShort_Weapon;                                      // 0x0088(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                EndFireShort_Hands;                                       // 0x0090(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int8_t                                             ShortFireThreshold;                                       // 0x0098(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0099(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTWeaponStateFiring_LoopingFire");
		return ptr;
	}


	void TransitionBeginToLoopExecute(class UAnimMontage* AnimMontage, bool bWasAnimInterupted);
	void TransitionBeginToLoopBind();
};


// Class UnrealTournament.UTWeaponStateFiringBeam
// 0x0008 (0x00A8 - 0x00A0)
class UUTWeaponStateFiringBeam : public UUTWeaponStateFiring_LoopingFire
{
public:
	int                                                MinDamage;                                                // 0x00A0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Accumulator;                                              // 0x00A4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTWeaponStateFiringBeam");
		return ptr;
	}

};


// Class UnrealTournament.UTWeaponStateFiringLinkBeam
// 0x0008 (0x00B0 - 0x00A8)
class UUTWeaponStateFiringLinkBeam : public UUTWeaponStateFiringBeam
{
public:
	float                                              AccumulatedFiringTime;                                    // 0x00A8(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bPendingEndFire;                                          // 0x00AC(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bPendingStartFire;                                        // 0x00AD(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x00AE(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTWeaponStateFiringLinkBeam");
		return ptr;
	}

};


// Class UnrealTournament.UTWeaponStateFiringBurst
// 0x0018 (0x0058 - 0x0040)
class UUTWeaponStateFiringBurst : public UUTWeaponStateFiring
{
public:
	float                                              StartupDelay;                                             // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                BurstSize;                                                // 0x0044(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BurstInterval;                                            // 0x0048(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SpreadIncrease;                                           // 0x004C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0050(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTWeaponStateFiringBurst");
		return ptr;
	}

};


// Class UnrealTournament.UTWeaponStateFiringBurstEnforcer
// 0x0008 (0x0060 - 0x0058)
class UUTWeaponStateFiringBurstEnforcer : public UUTWeaponStateFiringBurst
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0058(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTWeaponStateFiringBurstEnforcer");
		return ptr;
	}

};


// Class UnrealTournament.UTWeaponStateFiringCharged
// 0x0010 (0x0050 - 0x0040)
class UUTWeaponStateFiringCharged : public UUTWeaponStateFiring
{
public:
	class UAnimMontage*                                ChargingLoopAnim;                                         // 0x0040(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bChargeFlashCount;                                        // 0x0048(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0049(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTWeaponStateFiringCharged");
		return ptr;
	}

};


// Class UnrealTournament.UTWeaponStateFiringChargedRocket
// 0x0020 (0x0070 - 0x0050)
class UUTWeaponStateFiringChargedRocket : public UUTWeaponStateFiringCharged
{
public:
	class AUTWeap_RocketLauncher*                      RocketLauncher;                                           // 0x0050(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0058(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTWeaponStateFiringChargedRocket");
		return ptr;
	}

};


// Class UnrealTournament.UTWeaponStateFiringOnce
// 0x0008 (0x0048 - 0x0040)
class UUTWeaponStateFiringOnce : public UUTWeaponStateFiring
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0040(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTWeaponStateFiringOnce");
		return ptr;
	}

};


// Class UnrealTournament.UTWeaponStateFiringSpinUp
// 0x0040 (0x0080 - 0x0040)
class UUTWeaponStateFiringSpinUp : public UUTWeaponStateFiring
{
public:
	TArray<float>                                      WarmupShotIntervals;                                      // 0x0040(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	float                                              CoolDownTime;                                             // 0x0050(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
	class UAnimMontage*                                WarmupAnim;                                               // 0x0058(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                CooldownAnim;                                             // 0x0060(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                FiringLoopAnim;                                           // 0x0068(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0070(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTWeaponStateFiringSpinUp");
		return ptr;
	}


	void CooldownFinished();
};


// Class UnrealTournament.UTWeaponStateZooming
// 0x0040 (0x0080 - 0x0040)
class UUTWeaponStateZooming : public UUTWeaponStateFiring
{
public:
	class UAudioComponent*                             ZoomLoopComp;                                             // 0x0040(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UMaterialInterface*                          OverlayMat;                                               // 0x0048(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UMaterialInstanceDynamic*                    OverlayMI;                                                // 0x0050(0x0008) (ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  ZoomInSound;                                              // 0x0058(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  ZoomLoopSound;                                            // 0x0060(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  ZoomOutSound;                                             // 0x0068(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bDrawHeads;                                               // 0x0070(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bDrawPingAdjustedTargets;                                 // 0x0071(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0072(0x0006) MISSED OFFSET
	class UTexture2D*                                  TargetIndicator;                                          // 0x0078(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTWeaponStateZooming");
		return ptr;
	}


	void ToggleZoomInSound(bool bNowOn);
};


// Class UnrealTournament.UTWeaponStateInactive
// 0x0000 (0x0030 - 0x0030)
class UUTWeaponStateInactive : public UUTWeaponState
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTWeaponStateInactive");
		return ptr;
	}

};


// Class UnrealTournament.UTWeaponStateUnequipping
// 0x0018 (0x0048 - 0x0030)
class UUTWeaponStateUnequipping : public UUTWeaponState
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0030(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTWeaponStateUnequipping");
		return ptr;
	}

};


// Class UnrealTournament.UTWeaponStateUnequipping_DualWeapon
// 0x0000 (0x0048 - 0x0048)
class UUTWeaponStateUnequipping_DualWeapon : public UUTWeaponStateUnequipping
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTWeaponStateUnequipping_DualWeapon");
		return ptr;
	}

};


// Class UnrealTournament.UTWidgetData
// 0x0010 (0x0038 - 0x0028)
class UUTWidgetData : public UDataAsset
{
public:
	TArray<struct FWidgetDataEntry>                    WidgetEntries;                                            // 0x0028(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class UnrealTournament.UTWidgetData");
		return ptr;
	}

};


}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
